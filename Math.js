window.addEventListener('DOMContentLoaded', () => {
  const cachedElements = [
  'AshfangBZ',
  'BarbarianDukeXBZ',
  'BayouFishing',
  'BayouHotspotFishing',
  'BezosBZ',
  'BladeSoulBZ',
  'BlazeBZ',
  'BlazeBeltCrafting',
  'BurningDesert',
  'CinderBatBZ',
  'Cobblestone',
  'CrimsonFishing',
  'CrimsonHotspotFishing',
  'DivingGhast',
  'DivingGhastBZ',
  'Endstone',
  'ExtremelyRealShuriken',
  'FairyTreasureFishing',
  'FestivalFishing',
  'FlamingSpiderBZ',
  'FlamingWormFishing',
  'FlaresBZ',
  'GhastCloakCrafting',
  'GlowstoneGauntletCrafting',
  'GrandmaKnittingNeedle',
  'Hellwisp',
  'HellwispBZ',
  'Ice',
  'ImplosionBeltCrafting',
  'JunkTreasureFishing',
  'KadaKnightBZ',
  'KuudraT1',
  'KuudraT2',
  'KuudraT3',
  'KuudraT4',
  'KuudraT5',
  'LavaTreasureFishing',
  'MagmaBossBZ',
  'MagmaCoreFishing',
  'MagmaCubeBZ',
  'MagmaNecklaceCrafting',
  'MagmaRodCrafting',
  'MooshroomCowBZ',
  'Netherrack',
  'Nucleus',
  'OasisFishing',
  'PackMagmaCubeBZ',
  'Pelts',
  'PiscaryFishing',
  'QuarryFishing',
  'QuarryTreasureFishing',
  'ReaperScythe',
  'Ruby',
  'SealTreasureFishing',
  'SpookyFishing',
  'SquidFishing',
  'T4VoidgloomsFD',
  'Trophyfishing',
  'Vanquisher',
  'WaterFishing',
  'WaterTreasureFishing',
  'WaterWormFishing',
  'WinterFishing',
  'WinterTreasureFishing',
  'WitherSkeletonBZ',
  'WitherSpecterBZ',
  'XYZ',
  'acacia',
  'amber',
  'amethyst',
  'ancient-cloak',
  'aquamarine',
  'arachne300',
  'arachne500',
  'ashfang',
  'automaton',
  'bal',
  'berberisBunch',
  'birch',
  'blade-soul',
  'blaze-wax',
  'bluetooth-ring',
  'cactus',
  'caducous-feeder',
  'carrot',
  'chum-cap-bucket',
  'chum-rod',
  'chumming-talisman',
  'cinder-bat',
  'citrine',
  'coal',
  'cocoa-bean',
  'corleone',
  'dark-oak',
  'diamonds',
  'diana',
  'discrite',
  'emerald',
  'empty-buckets',
  'enderman-pet',
  'enderman-pet-with-final-destination',
  'exp-share-core',
  'exportable-carrots',
  'f1',
  'f2',
  'f3',
  'f4',
  'f5',
  'f6',
  'f7',
  'f7-kismets',
  'filling-buckets',
  'fire-freeze',
  'flare',
  'frag-running',
  'fuel-injector',
  'gauntlet-of-contagion',
  'ghost',
  'glacialcave',
  'glacite',
  'glacite-walker',
  'glowing-mush-mixin',
  'glowing-mushroom',
  'goblin',
  'goblin-holdout-powder',
  'gold',
  'gravel',
  'highlite',
  'iron',
  'jade',
  'jasper',
  'jungle',
  'jungle-powder',
  'lapis',
  'luminous-bracelet',
  'm1',
  'm2',
  'm3',
  'm4',
  'm5',
  'm6',
  'm7',
  'm7-kismets',
  'mage-outlaw',
  'magma-boss',
  'magma-fields-powder',
  'melon',
  'mineshaft',
  'mite-gel',
  'mithril-deposits-powder',
  'mithril-mining',
  'moby-shears',
  'mooshroom-cow',
  'mooshroom-cow-kat',
  'mushrooms',
  'mycelium',
  'nether-wart',
  'oak',
  'obsidian',
  'onyx',
  'opal',
  'peridot',
  'pest-farming',
  'polarvoid',
  'potato',
  'precursor-city-powder',
  'pumpkin',
  'quartz',
  'rainy-slime',
  'rat',
  'red-sand',
  'redstone',
  'reflection',
  'sand',
  'sapphire',
  'scatha',
  'shimmering-light-hood',
  'shimmering-light-slippers',
  'shimmering-light-trousers',
  'shimmering-light-tunic',
  'sludge-mining',
  'spore',
  'spruce',
  'sugar-cane',
  'sulphur-bow',
  'synthesizer-v3',
  't4-inferno-demonlord',
  't4-revenant',
  't4-sven',
  't4-tarantula',
  't4-vampire',
  't4-voidglooms',
  't5-revenant',
  't5-vampire',
  'topaz',
  'treasure-hoarders',
  'tungsten',
  'umber',
  'vanquished-blaze-belt',
  'vanquished-ghast-cloak',
  'vanquished-glowstone-gauntlet',
  'vanquished-magma-necklace',
  'weirder-tuba',
  'wheat',
  'zealot',
  'zealot-final-destination'
  ];

  cachedElements.forEach(id => {
    const cachedValue = localStorage.getItem(`cached-${id}`);
    if (cachedValue) {
      const el = document.getElementById(id);
      if (el) {
        el.innerHTML = cachedValue + " <span style='font-size:0.6em;'></span>";
      }
    }
  });
});

window.addEventListener('load', updateAllMethods);

  
            
  setInterval(updateAllMethods, 30000); 


function updateAllMethods() {
// Parse the localStorage data
let data;
try {
data = JSON.parse(localStorage.getItem("prices"));
} catch (error) {
console.error("Failed to parse localStorage data:", error);
return; // Stop execution if the data is invalid
}

// Define all update functions in an array
const updateFunctions = [
updateBlazeWax,
updateSulphurBow,
updateAncientCloakMoney,
updateFireFreezeMoney,
updateSpores,
updateAutomaton,
updateGauntletOfContagion,
updateMooshroomCowKat,
updateMooshroomCow,
updateFillingBuckets,
updateMobysShears,
updateGlowingMushroom,
updateEmptyBuckets,
updateChummingTalisman,
updateGlowingMushMixin,
updateChumRod,
updateLuminousBracelet,
updateZealots,
updateZealotsFinalDestination,
updateTreasureHoarders,
updateFragRunning,
updateGlaciteWalker,
updateF1,
updateF2,
updateF3,
updateF4,
updateF5,
updateF6,
updateF7,
updateF7Kismets,
updateM1,
updateM2,
updateM3,
updateM4,
updateM5,
updateM6,
updateM7,
updateM7Kismets,
updateSludgeMining,
updateVanquishedGlowstoneGauntlet,
updateVanquishedMagmaNecklace,
updateVanquishedGhastCloak,
updateVanquishedBlazeBelt,
updateCinderBat,
updateMithrilMining,
updateBal,
updateScatha,
updateGhost,
updateAshfang,
updateSynthesizerV3,
updateShimmeringLightSlippers,
updateShimmeringLightTrousers,
updateShimmeringLightTunic,
updateShimmeringLightHood,
updateFlare,
updateGold,
updateShareCore,
updateNetherWart,
updateCactus,
updateCarrot,
updateSugarCane,
updateMelon,
updatePumpkin,
updateCocoa,
updateMushrooms,
updatePotato,
updateWheat,
updateObsidian,
updateMiteGel,
updateEndermanPet,
updateEndermanPetWithFinalDestination,
updateReflection,
updateBerberisBunch,
updateFuelInjector,
updateCaducousFeeder,
updateEmptyChumCapBucket,
updateExportableCarrots,
updateBluetoothRing,
updatePolarvoid,
updateWeirderTuba,
updateCoal,
updateLapis,
updateDiamonds,
updateRedstone,
updateIron,
updateEmerald,
updateQuartz,
updateRedSand,
updateMycelium,
updateSand,
updateOak,
updateSpruce,
updateBirch,
updateDarkOak,
updateAcacia,
updateJungle,
updateAmber,
updateTopaz,
updateSapphire,
updateAmethyst,
updateJasper,
updateRuby,
updateJade,
updateOpal,
updateAquamarine,
updateCitrine,
updateOnyx,
updatePeridot,
updateTungsten,
updateUmber,
updateGlacite,
updateGravel,
updatePowderPrecursorCity,
updatePowderJungle,
updatePowderGoblinHoldout,
updatePowderMithrilDeposits,
updatePowderMagmaFields,
updateBladeSoul,
updateMageOutlaw,
updateMagmaBoss,
updateT4InfernoDemonlord,
updateT4Voidglooms,
updateT4Vampire,
updateT5Vampire,
updateT5Revenant,
updateT4Revenant,
updateT4Sven,
updateT4Tarantula,
updateGoblin,
updateDiana,
updateGlacialCave,
updateCorleone,
updateArachne300,
updateArachne500,
updateRainySlime,
updateRat,
updateMineshaft,
updatePest,
updateHighlite,
updateDiscrite,
updateExtremelyRealShuriken,
updateGrandmaKnittingNeedle,
updateBezosBZ,
updateWitherSkeletonBZ,
updateMooshroomCowBZ,
updateMagmaCubeBZ,
updateWitherSpecterBZ,
updateFlaresBZ,
updateFlamingSpiderBZ,
updatePackMagmaCubeBZ,
updateCinderBatBZ,
updateKadaKnightBZ,
updateDivingGhastBZ,
updateBladeSoulBZ,
updateBarbarianDukeXBZ,
updateAshfangBZ,
updateMagmaBossBZ,
updateVanquisher,
updateXYZ,
updateT4VoidgloomsFD,
updateIce,
updatePelts,
updateKuudraT5,
updateKuudraT4,
updateKuudraT3,
updateKuudraT2,
updateKuudraT1,
updateTrophyfishing,
updateMagmaNecklaceCrafting,
updateGhastCloakCrafting,
updateBlazeBeltCrafting,
updateGlowstoneGauntletCrafting,
updateMagmaRodCrafting,
updateImplosionBeltCrafting,
updateNucleus,
updateHellwisp,
updateHellwispBZ,
updateDivingGhast,
updateBlazeBZ,
updateBurningDesert,
updateReaperScythe,
updateCobblestone,
updateNetherrack,
updateEndstone,
updateWaterFishing,
updateOasisFishing,
updateSquidFishing,
updatePiscaryFishing,
updateWaterWormFishing,
updateQuarryFishing,
updateSpookyFishing,
updateWinterFishing,
updateFestivalFishing,
updateBayouFishing,
updateBayouHotspotFishing,
updateFlamingWormFishing,
updateMagmaCoreFishing,
updateCrimsonFishing,
updateCrimsonHotspotFishing,
updateWaterTreasureFishing,
updateFairyTreasureFishing,
updateWinterTreasureFishing,
updateLavaTreasureFishing,
updateJunkTreasureFishing,
updateQuarryTreasureFishing,
updateSealTreasureFishing
];

// Call each update function safely
if ('requestIdleCallback' in window) {
    requestIdleCallback(() => {
      updateFunctions.forEach((updateFunction) => {
        try {
          updateFunction(data);
        } catch (error) {
          console.error(`Error in ${updateFunction.name}:`, error);
        }
      });
    });
  } else {
    updateFunctions.forEach((updateFunction) => {
      try {
        updateFunction(data);
      } catch (error) {
        console.error(`Error in ${updateFunction.name}:`, error);
      }
    });
  }
  
  document.dispatchEvent(new Event("methods-updated"));

  applyFilter();
  sortMethodRows();
}
  





//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBlazeWax(data) {


const A1 = 62; // Default kills value
const A2 = 5;   // Default looting
const A3 = data["BLAZE_WAX"]?.Price || 1;
const A4 = data["ENCHANTED_BLAZE_POWDER"]?.Price || 1;

const moneyBlazeWax = (((((((A1 * 12) / 100) * ((1 + (0.15 * A2)) * 10)) / 10) * A3) - (((((A1 * 12) / 100) * ((1 + (0.15 * A2)) * 10)) / 10) * A4 * 80)) / 1000000).toFixed(2);

return `${moneyBlazeWax}M`; 
}



function updateBlazeWax(data) {
const blazeWaxMoney = calculateBlazeWax(data); 
document.getElementById('blaze-wax').innerHTML = blazeWaxMoney;
    localStorage.setItem('cached-blaze-wax', blazeWaxMoney); 
}

/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
function calculateSulphurBow(data) {

const L20 = 62; // default kills
const L23 = 5; // default looting
const A13 = data["SULPHUR_BOW"]?.Price || 1;
const A16 = data["ENCHANTED_SULPHUR"]?.Price || 1;
const A19 = data["ENCHANTED_STRING"]?.Price || 1;


var moneySulphurBow = ((((((((L20*12)/100)*((1+(0.15*L23))*10))/50)*A13)-(((((((L20*12)/100)*((1+(0.15*L23))*10))/50))*50*3*A19)+(((((L20*12)/100)*((1+(0.15*L23))*10))/50))*A16*50*2))/1000000)).toFixed(2);

return `${moneySulphurBow}M`; 
}

function updateSulphurBow(data) {
const sulphurBowMoney = calculateSulphurBow(data); 
document.getElementById('sulphur-bow').innerHTML = sulphurBowMoney;
    localStorage.setItem('cached-sulphur-bow', sulphurBowMoney);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateAncientCloak(data) {


const L20 = 169; //Kills
const L23 = 5; //Looting
const A7 = data["ENCHANTED_RED_SAND_CUBE"]?.Price || 1;
const A10 = data["ANCIENT_CLOAK"]?.Price || 1;

var moneyAncientCloak = (((((((L20*12)/100)*((1+(0.15*L23))*20))/64)*A10)-(((((L20*12)/100)*((1+(0.15*L23))*20))/64)*6*A7))/1000000).toFixed(2);

return `${moneyAncientCloak}M`; 
}

function updateAncientCloakMoney(data) {
const ancientMoney = calculateAncientCloak(data); 
document.getElementById('ancient-cloak').innerHTML = ancientMoney;
    localStorage.setItem('cached-ancient-cloak', ancientMoney);
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateFireFreeze(data) {


const L20 = 169; //Kills
const L23 = 5; //Looting
const A13 = data["FIRE_FREEZE_STAFF"]?.Price || 1;
const A16 = data["SPELL_POWDER"]?.Price || 1;

var moneyFireFreeze = ((((((((L20*12)/100)*20)*(1+(L23*0.15)))/20)*A13)-((((((L20*12)/100)*20)*(1+(L23*0.15)))/20)*(5*A16)))/1000000).toFixed(2);

return `${moneyFireFreeze}M`; 
}

function updateFireFreezeMoney(data) {
const fireFreezeMoney = calculateFireFreeze(data); 
document.getElementById('fire-freeze').innerHTML = fireFreezeMoney;
    localStorage.setItem('cached-fire-freeze', fireFreezeMoney);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMooshroomCow(data) {


const L20 = 272; //Kills in 5 minutes
const L23 = 5; //Looting
const L26 = 81; //Pet Luck
const A48 = data["MOOSHROOM_COW;3"]?.Price || 1;
const A51 = data["MOOSHROOM_COW;4"]?.Price || 1;
const A54 = data["ENCHANTED_MYCELIUM"]?.Price || 1;
const A57 = data["SUPER_EGG"]?.Price || 1;

const moneyMooshroomPet = (((((((((L20*12)*(20*(1+((L23*15)/100)))/100))/128)/100)*((20*(1+L26/100))/((20*(1+L26/100))+80)*100)*A51)+((((((L20*12)*(20*(1+((L23*15)/100)))/100))/128)/100)*(100-((20*(1+L26/100))/((20*(1+L26/100))+80)*100))*A48))- (((((((((L20*12)*(20*(1+((L23*15)/100)))/100))/128)/100)*((20*(1+L26/100))/((20*(1+L26/100))+80)*100))+((((((L20*12)*(20*(1+((L23*15)/100)))/100))/128)/100)*(100-((20*(1+L26/100))/((20*(1+L26/100))+80)*100))))*((A54*128)+A57))))/1000000).toFixed(2);
return `${moneyMooshroomPet}M`; 
}

function updateMooshroomCow(data) {
const mooshroomCowMoney = calculateMooshroomCow(data); 
document.getElementById('mooshroom-cow').innerHTML = mooshroomCowMoney;
    localStorage.setItem('cached-mooshroom-cow', mooshroomCowMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMooshroomCowKat(data) {


const L20 = 272; //Kills in 5 minutes
const L23 = 5; //Looting
const L26 = 81; //Pet Luck
const A48 = data["MOOSHROOM_COW;3"]?.Price || 1;
const A51 = data["MOOSHROOM_COW;4"]?.Price || 1;
const A54 = data["ENCHANTED_MYCELIUM"]?.Price || 1;
const A57 = data["SUPER_EGG"]?.Price || 1;
const A64 = data["KAT_FLOWER"]?.Price || 1;

const moneyMooshroomPetKat = ((((((((((L20*12)*(20*(1+((L23*15)/100)))/100))/128))*(1-(((20*(1+L26/100))/((20*(1+L26/100))+80)*100)/100)))*A51)-(((((((L20*12)*(20*(1+((L23*15)/100)))/100))/128))*(1-(((20*(1+L26/100))/((20*(1+L26/100))+80)*100)/100)))*((A64*3)+(((((((((((20*(1+L26/100))/((20*(1+L26/100))+80)*100)*A51))+(((100-((((20*(1+L26/100))/((20*(1+L26/100))+80)*100)))))*A48))))-(((A54*128)+A57)*100))/100)/128)*20)+(A54*128)+A57)))+((((((((L20*12)*(20*(1+((L23*15)/100)))/100))/128))*(((20*(1+L26/100))/((20*(1+L26/100))+80)*100)/100))*A51)-(((((((L20*12)*(20*(1+((L23*15)/100)))/100))/128))*(((20*(1+L26/100))/((20*(1+L26/100))+80)*100)/100))*(A57+(A54*128)))))/1000000).toFixed(2);

return `${moneyMooshroomPetKat}M`; 
}

function updateMooshroomCowKat(data) {
const mooshroomCowKatMoney = calculateMooshroomCowKat(data); 
document.getElementById('mooshroom-cow-kat').innerHTML = mooshroomCowKatMoney;
    localStorage.setItem('cached-mooshroom-cow-kat', mooshroomCowKatMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateSpores(data) {


const L20 = 1997; //spores in 5 minutes
const A7 = data["CHARMINIZER"]?.Price || 1;

const moneySpore = (((((L20*12)/1000)*A7)-(((L20*12)/1000)*80000))/1000000).toFixed(2);

return `${moneySpore}M`; 
}

function updateSpores(data) {
const sporesMoney = calculateSpores(data); 
document.getElementById('spore').innerHTML = sporesMoney;
    localStorage.setItem('cached-spore', sporesMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateAutomaton(data) {


const L20 = 61; // kills / 5 minutes
const L23 = 5; // Looting
const L26 = 265; // Magic Find
let A1 = 100; //pet lvl (mole pet lvl)
const A7 = data["CONTROL_SWITCH"]?.Price || 1;
const A10 = data["SUPERLITE_MOTOR"]?.Price || 1;
const A13 = data["ROBOTRON_REFLECTOR"]?.Price || 1;
const A16 = data["FTX_3070"]?.Price || 1;
const A19 = data["ELECTRON_TRANSMITTER"]?.Price || 1;
const A22 = data["SYNTHETIC_HEART"]?.Price || 1;

const moneyAutomaton = ((((((L20*12)/100)*((1+(0.15*L23))*(1+(L26/100))*2))*((A7+A10+A13+A16+A19+A22)/6))*(1+((A1/2)/100)))/1000000).toFixed(2);

return `${moneyAutomaton}M`; 
}

function updateAutomaton(data) {
const automatonMoney = calculateAutomaton(data); 
document.getElementById('automaton').innerHTML = automatonMoney;
    localStorage.setItem('cached-automaton', automatonMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateGauntletOfContagion(data) {


const L20 = 34; //Leather Cloths in 20 minutes
const A7 = data["ENCHANTED_MYCELIUM_CUBE"]?.Price || 1;
const A10 = data["GAUNTLET_OF_CONTAGION"]?.Price || 1;
const A13 = data["MAGMA_URCHIN"]?.Price || 1;

const moneyGauntletOfContagion = ((((((L20*3)/36)*A10)-(((L20*3)/36)*A7*3))+((((((((L20*3)/4)*5)))/50)*A13)))/1000000).toFixed(2);

return `${moneyGauntletOfContagion}M`; 
}

function updateGauntletOfContagion(data) {
const gauntletOfContagionMoney = calculateGauntletOfContagion(data); 
document.getElementById('gauntlet-of-contagion').innerHTML = gauntletOfContagionMoney;
    localStorage.setItem('cached-gauntlet-of-contagion', gauntletOfContagionMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateFillingBuckets(data) {


const L20 = 470; // Glowing mushrooms in 5 minutes
const O20 = 17; // Time to fill 10 buckets (in seconds)
const A7 = data["CHUM"]?.Price || 1;
const A10 = data["FULL_CHUM_BUCKET"]?.Price || 1;
const A13 = data["EMPTY_CHUM_BUCKET"]?.Price || 1;
const A16 = data["LUMINOUS_BRACELET"]?.Price || 1;
const A19 = data["CHUM_SINKER"]?.Price || 1;
const A22 = data["MOBYS_SHEARS"]?.Price || 1;
const A25 = data["CHUMMING_TALISMAN"]?.Price || 1;
const A28 = data["GLOWING_MUSHROOM"]?.Price || 1;
const A31 = data["MUSHED_MUSHROOM_MIXIN"]?.Price || 1;

const moneyFillingEmptyBuckets = (((((((L20*12)/8)*A10)-(((((L20*12)/8)*A7*10)+(((L20*12)/8)*2000))))/(60+((((L20*12)/8)*(O20/10))/60)))*60)/1000000).toFixed(2);

return `${moneyFillingEmptyBuckets}M`; 
}

function updateFillingBuckets(data) {
const FillingBucketsMoney = calculateFillingBuckets(data); 
document.getElementById('filling-buckets').innerHTML = FillingBucketsMoney;
    localStorage.setItem('cached-filling-buckets', FillingBucketsMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateEmptyBuckets(data) {


const L20 = 470; // Glowing mushrooms in 5 minutes
const O20 = 17; // Time to fill 10 buckets (in seconds)
const A7 = data["CHUM"]?.Price || 1;
const A10 = data["FULL_CHUM_BUCKET"]?.Price || 1;
const A13 = data["EMPTY_CHUM_BUCKET"]?.Price || 1;
const A16 = data["LUMINOUS_BRACELET"]?.Price || 1;
const A19 = data["CHUM_SINKER"]?.Price || 1;
const A22 = data["MOBYS_SHEARS"]?.Price || 1;
const A25 = data["CHUMMING_TALISMAN"]?.Price || 1;
const A28 = data["GLOWING_MUSHROOM"]?.Price || 1;
const A31 = data["MUSHED_MUSHROOM_MIXIN"]?.Price || 1;

const moneyEmptyBuckets = (((((L20*12)/8)*A13)-(((L20*12)/8)*2000))/1000000).toFixed(2);

return `${moneyEmptyBuckets}M`; 
}

function updateEmptyBuckets(data) {
const EmptyBucketsMoney = calculateEmptyBuckets(data); 
document.getElementById('empty-buckets').innerHTML = EmptyBucketsMoney;
    localStorage.setItem('cached-empty-buckets', EmptyBucketsMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateLuminousBracelet(data) {


const L20 = 470; // Glowing mushrooms in 5 minutes
const O20 = 17; // Time to fill 10 buckets (in seconds)
const A7 = data["CHUM"]?.Price || 1;
const A10 = data["FULL_CHUM_BUCKET"]?.Price || 1;
const A13 = data["EMPTY_CHUM_BUCKET"]?.Price || 1;
const A16 = data["LUMINOUS_BRACELET"]?.Price || 1;
const A19 = data["CHUM_SINKER"]?.Price || 1;
const A22 = data["MOBYS_SHEARS"]?.Price || 1;
const A25 = data["CHUMMING_TALISMAN"]?.Price || 1;
const A28 = data["GLOWING_MUSHROOM"]?.Price || 1;
const A31 = data["MUSHED_MUSHROOM_MIXIN"]?.Price || 1;

const moneyLuminousBracelet = (((((L20*12)/10)*A16)-(((L20*12)/10)*A10*2))/1000000).toFixed(2);

return `${moneyLuminousBracelet}M`; 
}

function updateLuminousBracelet(data) {
const LuminousBraceletMoney = calculateLuminousBracelet(data); 
document.getElementById('luminous-bracelet').innerHTML = LuminousBraceletMoney;
    localStorage.setItem('cached-luminous-bracelet', LuminousBraceletMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateChumRod(data) {


const L20 = 470; // Glowing mushrooms in 5 minutes
const O20 = 17; // Time to fill 10 buckets (in seconds)
const A7 = data["CHUM"]?.Price || 1;
const A10 = data["FULL_CHUM_BUCKET"]?.Price || 1;
const A13 = data["EMPTY_CHUM_BUCKET"]?.Price || 1;
const A16 = data["LUMINOUS_BRACELET"]?.Price || 1;
const A19 = data["CHUM_SINKER"]?.Price || 1;
const A22 = data["MOBYS_SHEARS"]?.Price || 1;
const A25 = data["CHUMMING_TALISMAN"]?.Price || 1;
const A28 = data["GLOWING_MUSHROOM"]?.Price || 1;
const A31 = data["MUSHED_MUSHROOM_MIXIN"]?.Price || 1;

const moneyChumRod = (((((L20*12)/15)*A19)-(((L20*12)/15)*A10*4))/1000000).toFixed(2);

return `${moneyChumRod}M`; 
}

function updateChumRod(data) {
const ChumRodMoney = calculateChumRod(data); 
document.getElementById('chum-rod').innerHTML = ChumRodMoney;
    localStorage.setItem('cached-chum-rod', ChumRodMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMobysShears(data) {


const L20 = 470; // Glowing mushrooms in 5 minutes
const O20 = 17; // Time to fill 10 buckets (in seconds)
const A7 = data["CHUM"]?.Price || 1;
const A10 = data["FULL_CHUM_BUCKET"]?.Price || 1;
const A13 = data["EMPTY_CHUM_BUCKET"]?.Price || 1;
const A16 = data["LUMINOUS_BRACELET"]?.Price || 1;
const A19 = data["CHUM_SINKER"]?.Price || 1;
const A22 = data["MOBYS_SHEARS"]?.Price || 1;
const A25 = data["CHUMMING_TALISMAN"]?.Price || 1;
const A28 = data["GLOWING_MUSHROOM"]?.Price || 1;
const A31 = data["MUSHED_MUSHROOM_MIXIN"]?.Price || 1;

const moneyMobysShears = (((((L20*12)/15)*A22)-(((L20*12)/15)*A10*5))/1000000).toFixed(2);

return `${moneyMobysShears}M`; 
}

function updateMobysShears(data) {
const mobyShearMoney = calculateMobysShears(data); 
document.getElementById('moby-shears').innerHTML = mobyShearMoney;
    localStorage.setItem('cached-moby-shears', mobyShearMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateGlowingMushroom(data) {


const L20 = 470; // Glowing mushrooms in 5 minutes
const O20 = 17; // Time to fill 10 buckets (in seconds)
const A7 = data["CHUM"]?.Price || 1;
const A10 = data["FULL_CHUM_BUCKET"]?.Price || 1;
const A13 = data["EMPTY_CHUM_BUCKET"]?.Price || 1;
const A16 = data["LUMINOUS_BRACELET"]?.Price || 1;
const A19 = data["CHUM_SINKER"]?.Price || 1;
const A22 = data["MOBYS_SHEARS"]?.Price || 1;
const A25 = data["CHUMMING_TALISMAN"]?.Price || 1;
const A28 = data["GLOWING_MUSHROOM"]?.Price || 1;
const A31 = data["MUSHED_MUSHROOM_MIXIN"]?.Price || 1;

const moneyGlowingMushroom = (((L20*12)*A28)/1000000).toFixed(2);

return `${moneyGlowingMushroom}M`; 
}

function updateGlowingMushroom(data) {
const glowingMushroomMoney = calculateGlowingMushroom(data); 
document.getElementById('glowing-mushroom').innerHTML = glowingMushroomMoney;
    localStorage.setItem('cached-glowing-mushroom', glowingMushroomMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateChummingTalisman(data) {


const L20 = 470; // Glowing mushrooms in 5 minutes
const O20 = 17; // Time to fill 10 buckets (in seconds)
const A7 = data["CHUM"]?.Price || 1;
const A10 = data["FULL_CHUM_BUCKET"]?.Price || 1;
const A13 = data["EMPTY_CHUM_BUCKET"]?.Price || 1;
const A16 = data["LUMINOUS_BRACELET"]?.Price || 1;
const A19 = data["CHUM_SINKER"]?.Price || 1;
const A22 = data["MOBYS_SHEARS"]?.Price || 1;
const A25 = data["CHUMMING_TALISMAN"]?.Price || 1;
const A28 = data["GLOWING_MUSHROOM"]?.Price || 1;
const A31 = data["MUSHED_MUSHROOM_MIXIN"]?.Price || 1;

const moneyChummingTalisman = (((((((((L20*12)/8)/32)*A25)-((((L20*12)/8)*A7*10)+((L20*12)/8)*2000)))/(60+((((L20*12)/8)*(O20/10))/60)))*60)/1000000).toFixed(2);

return `${moneyChummingTalisman}M`; 
}

function updateChummingTalisman(data) {
const chummingTalismanMoney = calculateChummingTalisman(data); 
document.getElementById('chumming-talisman').innerHTML = chummingTalismanMoney;
    localStorage.setItem('cached-chumming-talisman', chummingTalismanMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateGlowingMushMixin(data) {


const L20 = 470; // Glowing mushrooms in 5 minutes
const O20 = 17; // Time to fill 10 buckets (in seconds)
const A7 = data["CHUM"]?.Price || 1;
const A10 = data["FULL_CHUM_BUCKET"]?.Price || 1;
const A13 = data["EMPTY_CHUM_BUCKET"]?.Price || 1;
const A16 = data["LUMINOUS_BRACELET"]?.Price || 1;
const A19 = data["CHUM_SINKER"]?.Price || 1;
const A22 = data["MOBYS_SHEARS"]?.Price || 1;
const A25 = data["CHUMMING_TALISMAN"]?.Price || 1;
const A28 = data["GLOWING_MUSHROOM"]?.Price || 1;
const A31 = data["MUSHED_MUSHROOM_MIXIN"]?.Price || 1;

const moneyGlowingMushMixin = (((((L20*12)/80)*A31)-(((L20*12)/80)*A10*64))/1000000).toFixed(2);

return `${moneyGlowingMushMixin}M`; 
}

function updateGlowingMushMixin(data) {
const glowingMushMixinMoney = calculateGlowingMushMixin(data); 
document.getElementById('glowing-mush-mixin').innerHTML = glowingMushMixinMoney;
    localStorage.setItem('cached-glowing-mush-mixin', glowingMushMixinMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateZealots(data) {


const K23 = 0; // eman kill in 30 minutes
const K20 = 2215; // bruiser kills in 30 minutes
const K29 = 100; //eman Pet lvl
const K26 = 0.15; //Means they have eman 9 buff
const K32 = 5; // Zealuck lvl
const A57 = data["SUMMONING_EYE"]?.Price || 1;
const A60 = data["FINAL_DESTINATION_BOOTS"]?.Price || 1;
const A63 = data["FINAL_DESTINATION_LEGGINGS"]?.Price || 1;
const A66 = data["FINAL_DESTINATION_CHESTPLATE"]?.Price || 1;
const A69 = data["FINAL_DESTINATION_HELMET"]?.Price || 1;
const K40 = data["FINAL_DESTINATION_BOOTS;10K"]?.Price || 1;
const K43 = data["FINAL_DESTINATION_LEGGINGS;10K"]?.Price || 1;
const N40 = data["FINAL_DESTINATION_CHESTPLATE;10K"]?.Price || 1;
const N43 = data["FINAL_DESTINATION_HELMET;10K"]?.Price || 1;


const moneyZealots = ((((((K20*2)/((380/((1+K26+(K29*0.25)/100)+((K32*2)/100)))))+((K23*2)/((420/((1+K26+(K29*0.25)/100)+((K32*2)/100))))))*A57))/1000000).toFixed(2);


return `${moneyZealots}M`; 
}

function updateZealots(data) {
const zealotMoney = calculateZealots(data); 
document.getElementById('zealot').innerHTML = zealotMoney;
    localStorage.setItem('cached-zealot', zealotMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateZealotsFinalDestination(data) {


const K23 = 0; // eman kill in 30 minutes
const K20 = 2215; // bruiser kills in 30 minutes
const K29 = 100; //eman Pet lvl
const K26 = 0.15; //Means they have eman 9 buff
const K32 = 5; // Zealuck lvl
const A57 = data["SUMMONING_EYE"]?.Price || 1;
const A60 = data["FINAL_DESTINATION_BOOTS"]?.Price || 1;
const A63 = data["FINAL_DESTINATION_LEGGINGS"]?.Price || 1;
const A66 = data["FINAL_DESTINATION_CHESTPLATE"]?.Price || 1;
const A69 = data["FINAL_DESTINATION_HELMET"]?.Price || 1;
const K40 = data["FINAL_DESTINATION_BOOTS;10K"]?.Price || 1;
const K43 = data["FINAL_DESTINATION_LEGGINGS;10K"]?.Price || 1;
const N40 = data["FINAL_DESTINATION_CHESTPLATE;10K"]?.Price || 1;
const N43 = data["FINAL_DESTINATION_HELMET;10K"]?.Price || 1;


const moneyZealotsFinalDestination = ((((((K20*2)/((380/((1+K26+(K29*0.25)/100)+((K32*2)/100)))))+((K23*2)/((420/((1+K26+(K29*0.25)/100)+((K32*2)/100))))))*A57)+(((K40-A60)+(K43-A63)+(N40-A66)+(N43-A69))/(10000/(2*(K20+K23)))))/1000000).toFixed(2);


return `${moneyZealotsFinalDestination}M`; 
}

function updateZealotsFinalDestination(data) {
const ZealotsFinalDestinationMoney = calculateZealotsFinalDestination(data); 
document.getElementById('zealot-final-destination').innerHTML = ZealotsFinalDestinationMoney;
    localStorage.setItem('cached-zealot-final-destination', ZealotsFinalDestinationMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateTreasureHoarders(data) {


const A4 = 127; // Kills in 5 minutes
const A16 = 4; // Looting
const A19 = 218; // Magic Find
const A7 = data["STARFALL"]?.Price || 1;
const A13 = data["TREASURITE"]?.Price || 1;


const moneyTreasureHoarders = ((((A4*12)*(A7*(1+(A16*0.15))))+((A4*12)*(A7*0.5*(1+(A16*0.15))))+(((((A4*12)/100)*0.5)*(1+(A19/100))*(1+(A16*0.15)))*A13))/1000000).toFixed(2);


return `${moneyTreasureHoarders}M`; 
}

function updateTreasureHoarders(data) {
const TreasureHoardersMoney = calculateTreasureHoarders(data); 
document.getElementById('treasure-hoarders').innerHTML = TreasureHoardersMoney;
    localStorage.setItem('cached-treasure-hoarders', TreasureHoardersMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateFragRunning(data) {


const A30 = 1; //Minutes to frag run
const L20 = 35; //Seconds to frag run
const A7 = data["GIANT_FRAGMENT_DIAMOND"]?.Price || 1;
const A10 = data["GIANT_FRAGMENT_LASER"]?.Price || 1;
const A13 = data["GIANT_FRAGMENT_BIGFOOT"]?.Price || 1;
const A16 = data["GIANT_FRAGMENT_BOULDER"]?.Price || 1;


const moneyFragRunning = ((((((3600/((A30*60)+L20))/4)/2)*A7)+ ((((3600/((A30*60)+L20))/4)/2)*A10)+ ((((3600/((A30*60)+L20))/4)/2)*A13)+ ((((3600/((A30*60)+L20))/4)/2)*A16))/1000000).toFixed(2);


return `${moneyFragRunning}M`; 
}

function updateFragRunning(data) {
const FragRunningMoney = calculateFragRunning(data); 
document.getElementById('frag-running').innerHTML = FragRunningMoney;
    localStorage.setItem('cached-frag-running', FragRunningMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateGlaciteWalker(data) {


const L20 = 383; // kills in 5 minutes
const L23 = 5; // Looting
const L26 = 400; // Magic Find
const A7 = data["GLACITE_JEWEL"]?.Price || 1;
const A10 = 0;
const A13 = 0;
const A16 = 0;
const A19 = 0;


const moneyGlaciteWalker = (((A7*((L20*12)*(0.5*((1+(L26/100))))*(1+((L23*15)/100)))/100)+(A10*((L20*12)*(0.25*((1+(L26/100))))*(1+((L23*15)/100)))/100)+(A13*((L20*12)*(0.25*((1+(L26/100))))*(1+((L23*15)/100)))/100)+(A16*((L20*12)*(0.25*((1+(L26/100))))*(1+((L23*15)/100)))/100)+(A19*((L20*12)*(0.25*((1+(L26/100))))*(1+((L23*15)/100)))/100))/1000000).toFixed(2);


return `${moneyGlaciteWalker}M`; 
}

function updateGlaciteWalker(data) {
const GlaciteWalkerMoney = calculateGlaciteWalker(data); 
document.getElementById('glacite-walker').innerHTML = GlaciteWalkerMoney;
    localStorage.setItem('cached-glacite-walker', GlaciteWalkerMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateF1(data) {


const T20 = 3; // Minutes for 1 run;
const A30 = 0; // Seconds for 1 run
const A7 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A10 = data["BONZO_STAFF"]?.Price || 1;
const A13 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A16 = data["BONZO_MASK"]?.Price || 1;

const I7 = Math.max((A7-6000000),0);
const J10 = Math.max((A10-2250000),0);
const I13 = Math.max((A13-1250000),0);
const J13 = Math.max((A13-1100000),0);
const I16 = Math.max((A16-1250000),0);
const J16 = Math.max((A16-1100000),0);

var moneyF1 = ((((((((3600/((T20*60)+A30))*2.94)/100)*I7))+(((((3600/((((A30*60)+T20)*60)+A30))*2.99)/100)*I13))+(((((3600/((T20*60)+A30))*4.93)/100)*I16))+(((((3600/((T20*60)+A30))*0.98)/100)*J10))+(((((3600/((T20*60)+A30))*1.42)/100)*J13))+(((((3600/((T20*60)+A30))*1.42)/100)*J16))+(((3600/((T20*60)+A30))/(10000/300))*I7))/1000000)).toFixed(2);


return `${moneyF1}M`; 
}

function updateF1(data) {
const F1Money = calculateF1(data); 
document.getElementById('f1').innerHTML = F1Money;
    localStorage.setItem('cached-f1', F1Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateF2(data) {


const T20 = 0; //seconds
const A30 = 3; //minutes
const A7 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A10 = data["STONE_BLADE"]?.Price || 1;
const A13 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A16 = data["SCARF_STUDIES"]?.Price || 1;
const A19 = data["RED_SCARF"]?.Price || 1;
const A22 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;

const I7 = Math.max((A7-6000000),0);
const I10 = Math.max((A10-1500000),0);
const I13 = Math.max((A13-1250000),0);
const I16 = Math.max((A16-500000),0);
const I19 = Math.max((A19-500000),0);
const I22 = Math.max((A22-500000),0);
const J10 = Math.max((A10-1250000),0);
const J13 = Math.max((A13-1000000),0);
const J16 = Math.max((A16-250000),0);
const J19 = Math.max((A19-250000),0);
const J22 = Math.max((A22-250000),0);

var moneyF2 = (((((((3600/((A30*60)+T20))*4.47)/100)*I7)+((((3600/((A30*60)+T20))*4.47)/100)*I10)+((((3600/((A30*60)+T20))*8.5)/100)*I13)+((((3600/((A30*60)+T20))*13.48)/100)*I16)+((((3600/((A30*60)+T20))*3.19)/100)*I19)+((((3600/((A30*60)+T20))*33.38)/100)*I22)+((((3600/((A30*60)+T20))*0.89)/100)*J10)+((((3600/((A30*60)+T20))*1.79)/100)*J13)+((((3600/((A30*60)+T20))*5.2)/100)*J16)+((((3600/((A30*60)+T20))*0.89)/100)*J19)+((((3600/((A30*60)+T20))*35.23)/100)*J22))+(((3600/((A30*60)+T20))/(9000/300))*I7))/1000000).toFixed(2);



return `${moneyF2}M`; 
}

function updateF2(data) {
const F2Money = calculateF2(data); 
document.getElementById('f2').innerHTML = F2Money;
    localStorage.setItem('cached-f2', F2Money); 
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateF3(data) {


const T20 = 0; //seconds
const A30 = 3; //minutes
const A7 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A10 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A13 = data["ADAPTIVE_CHESTPLATE"]?.Price || 1;
const A16 = data["ADAPTIVE_LEGGINGS"]?.Price || 1;
const A19 = data["ADAPTIVE_BOOTS"]?.Price || 1;
const A22 = data["ADAPTIVE_HELMET"]?.Price || 1;
const A25 = data["SUSPICIOUS_VIAL"]?.Price || 1;
const A28 = data["ENCHANTMENT_ULTIMATE_LAST_STAND_1"]?.Price || 1;
const A31 = data["ENCHANTMENT_ULTIMATE_WISDOM_1"]?.Price || 1;
const A34 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;

const H7 = Math.max((A7-6000000),0);
const H10 = Math.max((A10-1500000),0);
const H13 = Math.max((A13-4000000),0);
const H16 = Math.max((A16-3000000),0);
const H19 = Math.max((A19-2000000),0);
const H22 = Math.max((A22-2500000),0);
const H25 = Math.max((A25-1000000),0);
const H28 = Math.max((A28-1000000),0);
const H31 = Math.max((A31-1000000),0);
const H34 = Math.max((A34-1000000),0);

const I10 = Math.max((A10-1000000),0);
const I13 = Math.max((A13-3500000),0);
const I16 = Math.max((A16-2500000),0);
const I19 = Math.max((A19-1500000),0);
const I22 = Math.max((A22-2000000),0);
const I25 = Math.max((A25-500000),0);
const I28 = Math.max((A28-500000),0);
const I31 = Math.max((A31-500000),0);
const I34 = Math.max((A34-500000),0);

var moneyF3 = ((((((3600/((A30*60)+T20))*2.4)/100)*H7)+((((3600/((A30*60)+T20))*3.36)/100)*H10)+((((3600/((A30*60)+T20))*0.6)/100)*H13)+((((3600/((A30*60)+T20))*1.12)/100)*H16)+((((3600/((A30*60)+T20))*2.41)/100)*H19)+((((3600/((A30*60)+T20))*2.41)/100)*H22)+((((3600/((A30*60)+T20))*5.98)/100)*H25)+((((3600/((A30*60)+T20))*14.05)/100)*H28)+((((3600/((A30*60)+T20))*9.68)/100)*H31)+((((3600/((A30*60)+T20))*9.68)/100)*H34)+((((3600/((A30*60)+T20))*0.73)/100)*I10)+((((3600/((A30*60)+T20))*0.73)/100)*I13)+((((3600/((A30*60)+T20))*0.73)/100)*I16)+((((3600/((A30*60)+T20))*2.47)/100)*I19)+((((3600/((A30*60)+T20))*1.86)/100)*I22)+((((3600/((A30*60)+T20))*6.97)/100)*I25)+((((3600/((A30*60)+T20))*15.13)/100)*I28)+((((3600/((A30*60)+T20))*15.13)/100)*I31)+((((3600/((A30*60)+T20))*15.13)/100)*I34))/1000000).toFixed(2);


return `${moneyF3}M`; 
}

function updateF3(data) {
const F3Money = calculateF3(data); 
document.getElementById('f3').innerHTML = F3Money;
    localStorage.setItem('cached-f3', F3Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateF4(data) {


const T20 = 0; //seconds
const A30 = 3; //minutes
const A7 = data["SPIRIT_BONE"]?.Price || 1;
const A10 = data["SPIRIT_WING"]?.Price || 1;
const A13 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A16 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A19 = data["ITEM_SPIRIT_BOW"]?.Price || 1;
const A22 = data["SPIRIT_SWORD"]?.Price || 1;
const A25 = data["THORNS_BOOTS"]?.Price || 1;
const A28 = data["SPIRIT;4"]?.Price || 1;
const A31 = data["SPIRIT_DECOY"]?.Price || 1;
const A34 = data["ENCHANTMENT_ULTIMATE_REND_1"]?.Price || 1;
const A37 = data["ENCHANTMENT_ULTIMATE_LAST_STAND_1"]?.Price || 1;
const A40 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;
const A43 = data["ENCHANTMENT_ULTIMATE_WISDOM_1"]?.Price || 1;
const A46 = data["SPIRIT;3"]?.Price || 1;



const H7 = Math.max((A7-1500000),0);
const H10 = Math.max((A10-2000000),0);
const H13 = Math.max((A13-6000000),0);
const H16 = Math.max((A16-1500000),0);
const H19 = Math.max((A19-4000000),0);
const H22 = Math.max((A22-3000000),0);
const H25 = Math.max((A25-4000000),0);
const H28 = Math.max((A28-5000000),0);
const H31 = Math.max((A31-1500000),0);
const H34 = Math.max((A34-1000000),0);
const H37 = Math.max((A37-1000000),0);
const H40 = Math.max((A40-1000000),0);
const H43 = Math.max((A43-1000000),0);
const I7 = Math.max((A7-1500000),0);
const I16 = Math.max((A16-1000000),0);
const I25 = Math.max((A25-3500000),0);
const I28 = Math.max((A28-5000000),0);
const I31 = Math.max((A31-1000000),0);
const I34 = Math.max((A34-500000),0);
const I37 = Math.max((A37-500000),0);
const I40 = Math.max((A40-500000),0);
const I43 = Math.max((A43-500000),0);
const J46 = Math.max((A46-1000000),0);

var moneyF4 = ((((((3600/((A30*60)+T20))*4.25)/100)*H7)+((((3600/((A30*60)+T20))*2.41)/100)*H10)+((((3600/((A30*60)+T20))*3.61)/100)*H13)+((((3600/((A30*60)+T20))*6.92)/100)*H16)+((((3600/((A30*60)+T20))*1.2)/100)*H19)+((((3600/((A30*60)+T20))*1.2)/100)*H22)+((((3600/((A30*60)+T20))*1.2)/100)*H25)+((((3600/((A30*60)+T20))*2.31)/100)*H28)+((((3600/((A30*60)+T20))*4.8)/100)*H31)+((((3600/((A30*60)+T20))*4.8)/100)*H34)+((((3600/((A30*60)+T20))*28.49)/100)*H37)+((((3600/((A30*60)+T20))*9.69)/100)*H40)+((((3600/((A30*60)+T20))*9.69)/100)*H43)+((((3600/((A30*60)+T20))*0.9)/100)*I7)+((((3600/((A30*60)+T20))*0.9)/100)*I16)+((((3600/((A30*60)+T20))*0.9)/100)*I25)+((((3600/((A30*60)+T20))*0.9)/100)*I28)+((((3600/((A30*60)+T20))*2.06)/100)*I31)+((((3600/((A30*60)+T20))*3.03)/100)*I34)+((((3600/((A30*60)+T20))*18.9)/100)*I37)+((((3600/((A30*60)+T20))*18.9)/100)*I40)+((((3600/((A30*60)+T20))*18.9)/100)*I43)+((((3600/((A30*60)+T20))*1.03)/100)*J46)+(((3600/((A30*60)+T20))/(12000/300))*H10))/1000000).toFixed(2);


return `${moneyF4}M`; 
}

function updateF4(data) {
const F4Money = calculateF4(data); 
document.getElementById('f4').innerHTML = F4Money;
    localStorage.setItem('cached-f4', F4Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateF5(data) {


const T20 = 0; //seconds
const A30 = 3; //minutes
const A7 = data["SHADOW_FURY"]?.Price || 1;
const A10 = data["LAST_BREATH"]?.Price || 1;
const A13 = data["LIVID_DAGGER"]?.Price || 1;
const A16 = data["SHADOW_ASSASSIN_LEGGINGS"]?.Price || 1;
const A19 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A22 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A25 = data["AOTE_STONE"]?.Price || 1;
const A28 = data["SHADOW_ASSASSIN_HELMET"]?.Price || 1;
const A31 = data["SHADOW_ASSASSIN_BOOTS"]?.Price || 1;
const A34 = data["ENCHANTMENT_ULTIMATE_LEGION_1"]?.Price || 1;
const A37 = data["ENCHANTMENT_OVERLOAD_1"]?.Price || 1;
const A40 = data["ENCHANTMENT_LETHALITY_6"]?.Price || 1;
const A43 = data["ENCHANTMENT_ULTIMATE_LAST_STAND_1"]?.Price || 1;
const A46 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;
const A49 = data["ENCHANTMENT_ULTIMATE_WISDOM_1"]?.Price || 1;
const A55 = data["SHADOW_ASSASSIN_CHESTPLATE"]?.Price || 1;



const I7 = Math.max((A7-15000000),0);
const I10 = Math.max((A10-7000000),0);
const I13 = Math.max((A13-7000000),0);
const I16 = Math.max((A16-4000000),0);
const I19 = Math.max((A19-6000000),0);
const I22 = Math.max((A22-2000000),0);
const I25 = Math.max((A25-5000000),0);
const I28 = Math.max((A28-2000000),0);
const I31 = Math.max((A31-2000000),0);
const I34 = Math.max((A34-2000000),0);
const I37 = Math.max((A37-2000000),0);
const I40 = Math.max((A40-2000000),0);
const I43 = Math.max((A43-2000000),0);
const I46 = Math.max((A46-2000000),0);
const I49 = Math.max((A49-2000000),0);
const I55 = Math.max((A55-6000000),0);
const J13 = Math.max((A13-7000000),0);
const J16 = Math.max((A16-4000000),0);
const J19 = Math.max((A19-6000000),0);
const J22 = Math.max((A22-1000000),0);
const J25 = Math.max((A25-5000000),0);
const J28 = Math.max((A28-2000000),0);
const J31 = Math.max((A31-1500000),0);
const J34 = Math.max((A34-1000000),0);
const J37 = Math.max((A37-1000000),0);
const J40 = Math.max((A40-1000000),0);
const J43 = Math.max((A43-1000000),0);
const J46 = Math.max((A46-1000000),0);
const J49 = Math.max((A49-1000000),0);


var moneyF5 = ((((((3600/((A30*60)+T20))*0.29)/100)*I7)+((((3600/((A30*60)+T20))*0.29)/100)*I10)+((((3600/((A30*60)+T20))*0.58)/100)*I55)+((((3600/((A30*60)+T20))*1.16)/100)*I13)+((((3600/((A30*60)+T20))*2.31)/100)*I16)+((((3600/((A30*60)+T20))*3)/100)*I19)+((((3600/((A30*60)+T20))*11.45)/100)*I22)+((((3600/((A30*60)+T20))*0.92)/100)*I25)+((((3600/((A30*60)+T20))*4.99)/100)*I28)+((((3600/((A30*60)+T20))*8.67)/100)*I31)+((((3600/((A30*60)+T20))*11.45)/100)*I34)+((((3600/((A30*60)+T20))*11.45)/100)*I37)+((((3600/((A30*60)+T20))*11.45)/100)*I40)+((((3600/((A30*60)+T20))*26.11)/100)*I43)+((((3600/((A30*60)+T20))*23.43)/100)*I46)+((((3600/((A30*60)+T20))*15.04)/100)*I49)+((((3600/((A30*60)+T20))*0.31)/100)*J13)+((((3600/((A30*60)+T20))*1.24)/100)*J16)+((((3600/((A30*60)+T20))*1.86)/100)*J19)+((((3600/((A30*60)+T20))*4.93)/100)*J22)+((((3600/((A30*60)+T20))*0.31)/100)*J25)+((((3600/((A30*60)+T20))*4.03)/100)*J28)+((((3600/((A30*60)+T20))*6.57)/100)*J31)+((((3600/((A30*60)+T20))*9.74)/100)*J34)+((((3600/((A30*60)+T20))*9.74)/100)*J37)+((((3600/((A30*60)+T20))*9.74)/100)*J40)+((((3600/((A30*60)+T20))*25.06)/100)*J43)+((((3600/((A30*60)+T20))*19.18)/100)*J46)+((((3600/((A30*60)+T20))*19.18)/100)*J49))/1000000).toFixed(2);

return `${moneyF5}M`; 
}

function updateF5(data) {
const F5Money = calculateF5(data); 
document.getElementById('f5').innerHTML = F5Money;
    localStorage.setItem('cached-f5', F5Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateF6(data) {


const T20 = 0; //seconds
const A30 = 4; //minutes
const A7 = data["PRECURSOR_EYE"]?.Price || 1;
const A10 = data["GIANTS_SWORD"]?.Price || 1;
const A13 = data["NECROMANCER_LORD_CHESTPLATE"]?.Price || 1;
const A16 = data["SUMMONING_RING"]?.Price || 1;
const A19 = data["NECROMANCER_SWORD"]?.Price || 1;
const A22 = data["NECROMANCER_LORD_LEGGINGS"]?.Price || 1;
const A25 = data["NECROMANCER_LORD_HELMET"]?.Price || 1;
const A28 = data["SADAN_BROOCH"]?.Price || 1;
const A31 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A34 = data["NECROMANCER_LORD_BOOTS"]?.Price || 1;
const A37 = data["GOLEM_POPPY"]?.Price || 1;
const A40 = data["ENCHANTMENT_ULTIMATE_SWARM_1"]?.Price || 1;
const A43 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A46 = data["GIANT_TOOTH"]?.Price || 1;
const A49 = data["ENCHANTMENT_ULTIMATE_LAST_STAND_1"]?.Price || 1;
const A52 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;
const A55 = data["ENCHANTMENT_ULTIMATE_WISDOM_1"]?.Price || 1;



const I7 = Math.max((A7-30000000),0);
const I10 = Math.max((A10-25000000),0);
const I13 = Math.max((A13-10000000),0);
const I16 = Math.max((A16-12000000),0);
const I19 = Math.max((A19-10000000),0);
const I22 = Math.max((A22-4000000),0);
const I25 = Math.max((A25-2000000),0);
const I28 = Math.max((A28-2000000),0);
const I31 = Math.max((A31-6000000),0);
const I34 = Math.max((A34-2000000),0);
const I37 = Math.max((A37-2000000),0);
const I40 = Math.max((A40-2000000),0);
const I43 = Math.max((A43-2000000),0);
const I46 = Math.max((A46-2000000),0);
const I49 = Math.max((A49-2000000),0);
const I52 = Math.max((A52-2000000),0);
const I55 = Math.max((A55-2000000),0);

const J16 = Math.max((A16-12000000),0);
const J19 = Math.max((A19-10000000),0);
const J22 = Math.max((A22-4000000),0);
const J25 = Math.max((A25-2000000),0);
const J28 = Math.max((A28-1500000),0);
const J31 = Math.max((A31-6000000),0);
const J34 = Math.max((A34-1500000),0);
const J37 = Math.max((A37-1000000),0);
const J40 = Math.max((A40-1000000),0);
const J43 = Math.max((A43-1000000),0);
const J46 = Math.max((A46-1000000),0);
const J49 = Math.max((A49-1000000),0);
const J52 = Math.max((A52-1000000),0);
const J55 = Math.max((A55-1000000),0);


var moneyF6 = (((((((3600/((A30*60)+T20))*0.07)/100)*I7)+(((((3600/((A30*60)+T20))*0.11)/100)*I10)+(((((3600/((A30*60)+T20))*0.29)/100)*I13)+(((((3600/((A30*60)+T20))*0.36)/100)*I16)+(((((3600/((A30*60)+T20))*1.18)/100)*I19)+(((((3600/((A30*60)+T20))*1.93)/100)*I22)+(((((3600/((A30*60)+T20))*2.57)/100)*I25)+(((((3600/((A30*60)+T20))*2.6)/100)*I28)+(((((3600/((A30*60)+T20))*6.42)/100)*I31)+(((((3600/((A30*60)+T20))*4.22)/100)*I34)+(((((3600/((A30*60)+T20))*10.55)/100)*I37)+(((((3600/((A30*60)+T20))*10.7)/100)*I40)+(((((3600/((A30*60)+T20))*3.68)/100)*I43)+(((((3600/((A30*60)+T20))*14.1)/100)*I46)+(((((3600/((A30*60)+T20))*27.46)/100)*I49)+(((((3600/((A30*60)+T20))*24.13)/100)*I52)+(((((3600/((A30*60)+T20))*16.84)/100)*I55)+(((((3600/((A30*60)+T20))*0.22)/100)*J16)+(((((3600/((A30*60)+T20))*0.43)/100)*J19)+(((((3600/((A30*60)+T20))*0.65)/100)*J22)+(((((3600/((A30*60)+T20))*1.44)/100)*J25)+(((((3600/((A30*60)+T20))*1.61)/100)*J28)+(((((3600/((A30*60)+T20))*1.3)/100)*J31)+(((((3600/((A30*60)+T20))*3.98)/100)*J34)+(((((3600/((A30*60)+T20))*2.42)/100)*J37)+(((((3600/((A30*60)+T20))*6.58)/100)*J40)+(((((3600/((A30*60)+T20))*3.98)/100)*J43)+(((((3600/((A30*60)+T20))*6.58)/100)*J46)+(((((3600/((A30*60)+T20))*25.95)/100)*J49)+(((((3600/((A30*60)+T20))*19.89)/100)*J52)+(((((3600/((A30*60)+T20))*19.89)/100)*J55)))))))))))))))))))))))))))))))))/1000000).toFixed(2);

return `${moneyF6}M`; 
}

function updateF6(data) {
const F6Money = calculateF6(data); 
document.getElementById('f6').innerHTML = F6Money;
    localStorage.setItem('cached-f6', F6Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateF7(data) {


const T20 = 0; //seconds
const A30 = 7; //minutes
const A7 = data["NECRON_HANDLE"]?.Price || 1;
const A10 = data["IMPLOSION_SCROLL"]?.Price || 1;
const A13 = data["SHADOW_WARP_SCROLL"]?.Price || 1;
const A16 = data["WITHER_SHIELD_SCROLL"]?.Price || 1;
const A19 = data["AUTO_RECOMBOBULATOR"]?.Price || 1;
const A22 = data["WITHER_CHESTPLATE"]?.Price || 1;
const A25 = data["ENCHANTMENT_ULTIMATE_ONE_FOR_ALL_1"]?.Price || 1;
const A28 = data["WITHER_LEGGINGS"]?.Price || 1;
const A31 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A34 = data["WITHER_CLOAK"]?.Price || 1;
const A37 = data["WITHER_BLOOD"]?.Price || 1;
const A40 = data["WITHER_HELMET"]?.Price || 1;
const A43 = data["ENCHANTMENT_ULTIMATE_SOUL_EATER_1"]?.Price || 1;
const A46 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A49 = data["WITHER_BOOTS"]?.Price || 1;
const A52 = data["WITHER_CATALYST"]?.Price || 1;
const A55 = data["PRECURSOR_GEAR"]?.Price || 1;
const A58 = data["ENCHANTMENT_ULTIMATE_LAST_STAND_1"]?.Price || 1;
const A61 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;
const A64 = data["ENCHANTMENT_ULTIMATE_WISDOM_1"]?.Price || 1;
const A67 = data["KISMET_FEATHER"]?.Price || 1;



const I7 = Math.max((A7-100000000),0);
const I10 = Math.max((A10-50000000),0);
const I13 = Math.max((A13-50000000),0);
const I16 = Math.max((A16-50000000),0);
const I19 = Math.max((A19-10000000),0);
const I22 = Math.max((A22-10000000),0);
const I25 = Math.max((A25-2000000),0);
const I28 = Math.max((A28-6000000),0);
const I31 = Math.max((A31-6000000),0);
const I34 = Math.max((A34-4500000),0);
const I37 = Math.max((A37-3000000),0);
const I40 = Math.max((A40-4000000),0);
const I43 = Math.max((A43-2000000),0);
const I46 = Math.max((A46-2000000),0);
const I49 = Math.max((A49-2500000),0);
const I52 = Math.max((A52-2000000),0);
const I55 = Math.max((A55-2000000),0);
const I58 = Math.max((A58-2000000),0);
const I61 = Math.max((A61-2000000),0);
const I64 = Math.max((A64-2000000),0);
const J22 = Math.max((A22-10000000),0);
const J25 = Math.max((A25-2000000),0);
const J28 = Math.max((A28-6000000),0);
const J31 = Math.max((A31-6000000),0);
const J34 = Math.max((A34-4500000),0);
const J37 = Math.max((A37-2500000),0);
const J40 = Math.max((A40-4000000),0);
const J43 = Math.max((A43-1000000),0);
const J46 = Math.max((A46-1000000),0);
const J49 = Math.max((A49-2500000),0);
const J52 = Math.max((A52-1000000),0);
const J55 = Math.max((A55-1000000),0);
const J58 = Math.max((A58-1000000),0);
const J61 = Math.max((A61-1000000),0);
const J64 = Math.max((A64-1000000),0);


var moneyF7 = ((((((3600/((A30*60)+T20))*0.1)/100)*I7)+((((3600/((A30*60)+T20))*0.13)/100)*I10)+((((3600/((A30*60)+T20))*0.13)/100)*I13)+((((3600/((A30*60)+T20))*0.13)/100)*I16)+((((3600/((A30*60)+T20))*0.53)/100)*I19)+((((3600/((A30*60)+T20))*0.53)/100)*I22)+((((3600/((A30*60)+T20))*0.59)/100)*I25)+((((3600/((A30*60)+T20))*3.43)/100)*I28)+((((3600/((A30*60)+T20))*4.29)/100)*I31)+((((3600/((A30*60)+T20))*5.44)/100)*I34)+((((3600/((A30*60)+T20))*5.95)/100)*I37)+((((3600/((A30*60)+T20))*5.95)/100)*I40)+((((3600/((A30*60)+T20))*9.91)/100)*I43)+((((3600/((A30*60)+T20))*5.27)/100)*I46)+((((3600/((A30*60)+T20))*6.3)/100)*I49)+((((3600/((A30*60)+T20))*5.27)/100)*I52)+((((3600/((A30*60)+T20))*15.7)/100)*I55)+((((3600/((A30*60)+T20))*16.41)/100)*I58)+((((3600/((A30*60)+T20))*11.1)/100)*I61)+((((3600/((A30*60)+T20))*11.1)/100)*I64)+((((3600/((A30*60)+T20))*0.31)/100)*J22)+((((3600/((A30*60)+T20))*0.31)/100)*J25)+((((3600/((A30*60)+T20))*1.25)/100)*J28)+((((3600/((A30*60)+T20))*0.63)/100)*J31)+((((3600/((A30*60)+T20))*3.03)/100)*J34)+((((3600/((A30*60)+T20))*3.32)/100)*J37)+((((3600/((A30*60)+T20))*3.32)/100)*J40)+((((3600/((A30*60)+T20))*8.37)/100)*J43)+((((3600/((A30*60)+T20))*8.6)/100)*J46)+((((3600/((A30*60)+T20))*8.6)/100)*J49)+((((3600/((A30*60)+T20))*8.86)/100)*J52)+((((3600/((A30*60)+T20))*10.09)/100)*J55)+((((3600/((A30*60)+T20))*19.33)/100)*J58)+((((3600/((A30*60)+T20))*25.26)/100)*J61)+((((3600/((A30*60)+T20))*13.12)/100)*J64))/1000000).toFixed(2);


return `${moneyF7}M`; 
}

function updateF7(data) {
const F7Money = calculateF7(data); 
document.getElementById('f7').innerHTML = F7Money;
    localStorage.setItem('cached-f7', F7Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateF7Kismets(data) {


const T20 = 0; //seconds
const A30 = 7; //minutes
const A7 = data["NECRON_HANDLE"]?.Price || 1;
const A10 = data["IMPLOSION_SCROLL"]?.Price || 1;
const A13 = data["SHADOW_WARP_SCROLL"]?.Price || 1;
const A16 = data["WITHER_SHIELD_SCROLL"]?.Price || 1;
const A19 = data["AUTO_RECOMBOBULATOR"]?.Price || 1;
const A22 = data["WITHER_CHESTPLATE"]?.Price || 1;
const A25 = data["ENCHANTMENT_ULTIMATE_ONE_FOR_ALL_1"]?.Price || 1;
const A28 = data["WITHER_LEGGINGS"]?.Price || 1;
const A31 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A34 = data["WITHER_CLOAK"]?.Price || 1;
const A37 = data["WITHER_BLOOD"]?.Price || 1;
const A40 = data["WITHER_HELMET"]?.Price || 1;
const A43 = data["ENCHANTMENT_ULTIMATE_SOUL_EATER_1"]?.Price || 1;
const A46 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A49 = data["WITHER_BOOTS"]?.Price || 1;
const A52 = data["WITHER_CATALYST"]?.Price || 1;
const A55 = data["PRECURSOR_GEAR"]?.Price || 1;
const A58 = data["ENCHANTMENT_ULTIMATE_LAST_STAND_1"]?.Price || 1;
const A61 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;
const A64 = data["ENCHANTMENT_ULTIMATE_WISDOM_1"]?.Price || 1;
const A67 = data["KISMET_FEATHER"]?.Price || 1;



const I7 = Math.max((A7-100000000),0);
const I10 = Math.max((A10-50000000),0);
const I13 = Math.max((A13-50000000),0);
const I16 = Math.max((A16-50000000),0);
const I19 = Math.max((A19-10000000),0);
const I22 = Math.max((A22-10000000),0);
const I25 = Math.max((A25-2000000),0);
const I28 = Math.max((A28-6000000),0);
const I31 = Math.max((A31-6000000),0);
const I34 = Math.max((A34-4500000),0);
const I37 = Math.max((A37-3000000),0);
const I40 = Math.max((A40-4000000),0);
const I43 = Math.max((A43-2000000),0);
const I46 = Math.max((A46-2000000),0);
const I49 = Math.max((A49-2500000),0);
const I52 = Math.max((A52-2000000),0);
const I55 = Math.max((A55-2000000),0);
const I58 = Math.max((A58-2000000),0);
const I61 = Math.max((A61-2000000),0);
const I64 = Math.max((A64-2000000),0);
const J22 = Math.max((A22-10000000),0);
const J25 = Math.max((A25-2000000),0);
const J28 = Math.max((A28-6000000),0);
const J31 = Math.max((A31-6000000),0);
const J34 = Math.max((A34-4500000),0);
const J37 = Math.max((A37-2500000),0);
const J40 = Math.max((A40-4000000),0);
const J43 = Math.max((A43-1000000),0);
const J46 = Math.max((A46-1000000),0);
const J49 = Math.max((A49-2500000),0);
const J52 = Math.max((A52-1000000),0);
const J55 = Math.max((A55-1000000),0);
const J58 = Math.max((A58-1000000),0);
const J61 = Math.max((A61-1000000),0);
const J64 = Math.max((A64-1000000),0);


var moneyF7Kismets = ((((((((3600/((A30*60)+T20))*0.1*2)/100)*I7)+((((3600/((A30*60)+T20))*0.13*2)/100)*I10)+((((3600/((A30*60)+T20))*0.13*2)/100)*I13)+((((3600/((A30*60)+T20))*0.13*2)/100)*I16)+((((3600/((A30*60)+T20))*0.53*2)/100)*I19)+((((3600/((A30*60)+T20))*0.53*2)/100)*I22)+((((3600/((A30*60)+T20))*0.59*2)/100)*I25)+((((3600/((A30*60)+T20))*3.43*2)/100)*I28)+((((3600/((A30*60)+T20))*4.29*2)/100)*I31)+((((3600/((A30*60)+T20))*5.44)/100)*I34)+((((3600/((A30*60)+T20))*5.95)/100)*I37)+((((3600/((A30*60)+T20))*5.95)/100)*I40)+((((3600/((A30*60)+T20))*9.91)/100)*I43)+((((3600/((A30*60)+T20))*5.27)/100)*I46)+((((3600/((A30*60)+T20))*6.3)/100)*I49)+((((3600/((A30*60)+T20))*5.27)/100)*I52)+((((3600/((A30*60)+T20))*15.7)/100)*I55)+((((3600/((A30*60)+T20))*16.41)/100)*I58)+((((3600/((A30*60)+T20))*11.1)/100)*I61)+((((3600/((A30*60)+T20))*11.1)/100)*I64)+((((3600/((A30*60)+T20))*0.31)/100)*J22)+((((3600/((A30*60)+T20))*0.31)/100)*J25)+((((3600/((A30*60)+T20))*1.25)/100)*J28)+((((3600/((A30*60)+T20))*0.63)/100)*J31)+((((3600/((A30*60)+T20))*3.03)/100)*J34)+((((3600/((A30*60)+T20))*3.32)/100)*J37)+((((3600/((A30*60)+T20))*3.32)/100)*J40)+((((3600/((A30*60)+T20))*8.37)/100)*J43)+((((3600/((A30*60)+T20))*8.6)/100)*J46)+((((3600/((A30*60)+T20))*8.6)/100)*J49)+((((3600/((A30*60)+T20))*8.86)/100)*J52)+((((3600/((A30*60)+T20))*10.09)/100)*J55)+((((3600/((A30*60)+T20))*19.33)/100)*J58)+((((3600/((A30*60)+T20))*25.26)/100)*J61)+((((3600/((A30*60)+T20))*13.12)/100)*J64)))-((3600/((A30*60)+T20))*A67))/1000000).toFixed(2);


return `${moneyF7Kismets}M`; 
}

function updateF7Kismets(data) {
const F7KismetsMoney = calculateF7Kismets(data); 
document.getElementById('f7-kismets').innerHTML = F7KismetsMoney;
    localStorage.setItem('cached-f7-kismets', F7KismetsMoney); 
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateM1(data) {


const T20 = 0; //seconds
const A30 = 3; //minutes
const A7 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A10 = data["BONZO_STAFF"]?.Price || 1;
const A13 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A16 = data["BONZO_MASK"]?.Price || 1;
const A19 = data["MASTER_SKULL_TIER;1"]?.Price || 1;

const I7 = Math.max((A7-6000000),0);
const I10 = Math.max((A10-2250000),0);
const I13 = Math.max((A13-1250000),0);
const I16 = Math.max((A16-1250000),0);
const I19 = Math.max((A19-250000),0);
const J10 = Math.max((A10-2100000),0);
const J13 = Math.max((A13-1100000),0);
const J16 = Math.max((A16-1100000),0);

var moneyM1 = (((((((3600/((A30*60)+T20))*6.77)/100)*I7))+(((((3600/((A30*60)+T20))*1.74)/100)*I10))+(((((3600/((A30*60)+T20))*4.65)/100)*I13))+(((((3600/((A30*60)+T20))*6.97)/100)*I16))+(((((3600/((A30*60)+T20))*5.08)/100)*I19))+(((((3600/((A30*60)+T20))*0.88)/100)*J10))+(((((3600/((A30*60)+T20))*1.77)/100)*J13))+(((((3600/((A30*60)+T20))*1.77)/100)*J16))+(((3600/((A30*60)+T20))/(6150/300))*I7))/1000000).toFixed(2);


return `${moneyM1}M`; 
}

function updateM1(data) {
const M1Money = calculateM1(data); 
document.getElementById('m1').innerHTML = M1Money;
    localStorage.setItem('cached-m1', M1Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateM2(data) {


const T20 = 0; //seconds
const A30 = 3; //minutes
const A7 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A10 = data["STONE_BLADE"]?.Price || 1;
const A13 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A16 = data["SCARF_STUDIES"]?.Price || 1;
const A19 = data["RED_SCARF"]?.Price || 1;
const A22 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;
const A25 = data["MASTER_SKULL_TIER_2"]?.Price || 1;

const I7 = Math.max((A7-6000000),0);
const I10 = Math.max((A10-1500000),0);
const I13 = Math.max((A13-1250000),0);
const I16 = Math.max((A16-500000),0);
const I19 = Math.max((A19-500000),0);
const I22 = Math.max((A22-500000),0);
const I25 = Math.max((A25-500000),0);
const J10 = Math.max((A10-1250000),0);
const J13 = Math.max((A13-1000000),0);
const J16 = Math.max((A16-250000),0);
const J19 = Math.max((A19-250000),0);
const J22 = Math.max((A22-250000),0);

var moneyM2 = ((((((3600/((A30*60)+T20))*7.86)/100)*I7)+((((3600/((A30*60)+T20))*5.24)/100)*I10)+((((3600/((A30*60)+T20))*8.99)/100)*I13)+((((3600/((A30*60)+T20))*12.82)/100)*I16)+((((3600/((A30*60)+T20))*3)/100)*I19)+((((3600/((A30*60)+T20))*36.99)/100)*I22)+((((3600/((A30*60)+T20))*0.93)/100)*J10)+((((3600/((A30*60)+T20))*1.87)/100)*J13)+((((3600/((A30*60)+T20))*6.8)/100)*J16)+((((3600/((A30*60)+T20))*0.93)/100)*J19)+((((3600/((A30*60)+T20))*36.16)/100)*J22)+((((3600/((A30*60)+T20))*7.86)/100)*I25))/1000000).toFixed(2);


return `${moneyM2}M`; 
}

function updateM2(data) {
const M2Money = calculateM2(data); 
document.getElementById('m2').innerHTML = M2Money;
    localStorage.setItem('cached-m2', M2Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateM3(data) {


const T20 = 0; //seconds
const A30 = 3; //minutes
const A7 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A10 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A13 = data["ADAPTIVE_CHESTPLATE"]?.Price || 1;
const A16 = data["ADAPTIVE_LEGGINGS"]?.Price || 1;
const A19 = data["ADAPTIVE_BOOTS"]?.Price || 1;
const A22 = data["ADAPTIVE_HELMET"]?.Price || 1;
const A25 = data["SUSPICIOUS_VIAL"]?.Price || 1;
const A28 = data["ENCHANTMENT_ULTIMATE_LAST_STAND_1"]?.Price || 1;
const A31 = data["ENCHANTMENT_ULTIMATE_WISDOM_1"]?.Price || 1;
const A34 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;
const A37 = data["MASTER_SKULL_TIER_3"]?.Price || 1;
const A40  = data["FIRST_MASTER_STAR"]?.Price || 1;

const H7 = Math.max((A7-6000000),0);
const H10 = Math.max((A10-1500000),0);
const H13 = Math.max((A13-4000000),0);
const H16 = Math.max((A16-3000000),0);
const H19 = Math.max((A19-2000000),0);
const H22 = Math.max((A22-2500000),0);
const H25 = Math.max((A25-1000000),0);
const H28 = Math.max((A28-1000000),0);
const H31 = Math.max((A31-1000000),0);
const H34 = Math.max((A34-1000000),0);
const H37 = Math.max((A37-2000000),0);
const H40 = Math.max((A40-5000000),0);

const I10 = Math.max((A10-1000000),0);
const I13 = Math.max((A13-3500000),0);
const I16 = Math.max((A16-2500000),0);
const I19 = Math.max((A19-1500000),0);
const I22 = Math.max((A22-2000000),0);
const I25 = Math.max((A25-500000),0);
const I28 = Math.max((A28-500000),0);
const I31 = Math.max((A31-500000),0);
const I34 = Math.max((A34-500000),0);

var moneyM3 = ((((((3600/((A30*60)+T20))*8.63)/100)*H7)+((((3600/((A30*60)+T20))*6.78)/100)*H10)+((((3600/((A30*60)+T20))*1.98)/100)*H13)+((((3600/((A30*60)+T20))*2.37)/100)*H16)+((((3600/((A30*60)+T20))*4.82)/100)*H19)+((((3600/((A30*60)+T20))*4.82)/100)*H22)+((((3600/((A30*60)+T20))*12.2)/100)*H25)+((((3600/((A30*60)+T20))*21.05)/100)*H28)+((((3600/((A30*60)+T20))*16.03)/100)*H31)+((((3600/((A30*60)+T20))*16.03)/100)*H34)+((((3600/((A30*60)+T20))*0.93)/100)*I10)+((((3600/((A30*60)+T20))*0.73)/100)*I13)+((((3600/((A30*60)+T20))*0.93)/100)*I16)+((((3600/((A30*60)+T20))*2.87)/100)*I19)+((((3600/((A30*60)+T20))*2.51)/100)*I22)+((((3600/((A30*60)+T20))*7.18)/100)*I25)+((((3600/((A30*60)+T20))*14.81)/100)*I28)+((((3600/((A30*60)+T20))*14.81)/100)*I31)+((((3600/((A30*60)+T20))*14.81)/100)*I34)+((((3600/((A30*60)+T20))*8.63)/100)*H37)+((((3600/((A30*60)+T20))*2.53)/100)*H40))/1000000).toFixed(2);


return `${moneyM3}M`; 
}

function updateM3(data) {
const M3Money = calculateM3(data); 
document.getElementById('m3').innerHTML = M3Money;
    localStorage.setItem('cached-m3', M3Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateM4(data) {


const T20 = 0; //seconds
const A30 = 4; //minutes
const A7 = data["SPIRIT_BONE"]?.Price || 1;
const A10 = data["SPIRIT_WING"]?.Price || 1;
const A13 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A16 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A19 = data["ITEM_SPIRIT_BOW"]?.Price || 1;
const A22 = data["SPIRIT_SWORD"]?.Price || 1;
const A25 = data["THORNS_BOOTS"]?.Price || 1;
const A28 = data["SPIRIT;4"]?.Price || 1;
const A31 = data["SPIRIT_DECOY"]?.Price || 1;
const A34 = data["ENCHANTMENT_ULTIMATE_REND_1"]?.Price || 1;
const A37 = data["ENCHANTMENT_ULTIMATE_LAST_STAND_1"]?.Price || 1;
const A40 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;
const A43 = data["ENCHANTMENT_ULTIMATE_WISDOM_1"]?.Price || 1;
const A49 = data["MASTER_SKULL_TIER_3"]?.Price || 1;
const A52 = data["SECOND_MASTER_STAR"]?.Price || 1;



const H7 = Math.max((A7-1500000),0);
const H10 = Math.max((A10-2000000),0);
const H13 = Math.max((A13-6000000),0);
const H16 = Math.max((A16-1500000),0);
const H19 = Math.max((A19-4000000),0);
const H22 = Math.max((A22-3000000),0);
const H25 = Math.max((A25-4000000),0);
const H28 = Math.max((A28-5000000),0);
const H31 = Math.max((A31-1500000),0);
const H34 = Math.max((A34-1000000),0);
const H37 = Math.max((A37-1000000),0);
const H40 = Math.max((A40-1000000),0);
const H43 = Math.max((A43-1000000),0);
const H49 = Math.max((A49-2000000),0);
const H52 = Math.max((A52-6000000),0);

const I7 = Math.max((A7-1500000),0);
const I16 = Math.max((A16-1000000),0);
const I25 = Math.max((A25-3500000),0);
const I28 = Math.max((A28-5000000),0);
const I31 = Math.max((A31-1000000),0);
const I34 = Math.max((A34-500000),0);
const I37 = Math.max((A37-500000),0);
const I40 = Math.max((A40-500000),0);
const I43 = Math.max((A43-500000),0);


var moneyM4 = (((((((3600/((A30*60)+T20))*4.59)/100)*H7)+((((3600/((A30*60)+T20))*4.59)/100)*H10)+((((3600/((A30*60)+T20))*6.88)/100)*H13)+((((3600/((A30*60)+T20))*7.28)/100)*H16)+((((3600/((A30*60)+T20))*2.29)/100)*H19)+((((3600/((A30*60)+T20))*2.29)/100)*H22)+((((3600/((A30*60)+T20))*2.29)/100)*H25)+((((3600/((A30*60)+T20))*2.48)/100)*H28)+((((3600/((A30*60)+T20))*4.96)/100)*H31)+((((3600/((A30*60)+T20))*5.01)/100)*H34)+((((3600/((A30*60)+T20))*23.63)/100)*H37)+((((3600/((A30*60)+T20))*18.01)/100)*H40)+((((3600/((A30*60)+T20))*18.01)/100)*H43)+((((3600/((A30*60)+T20))*6.88)/100)*H49)+((((3600/((A30*60)+T20))*4.21)/100)*H52)+((((3600/((A30*60)+T20))*0.9)/100)*I7)+((((3600/((A30*60)+T20))*1.03)/100)*I16)+((((3600/((A30*60)+T20))*0.9)/100)*I25)+((((3600/((A30*60)+T20))*1.03)/100)*I28)+((((3600/((A30*60)+T20))*3)/100)*I31)+((((3600/((A30*60)+T20))*3.62)/100)*I34)+((((3600/((A30*60)+T20))*18.31)/100)*I37)+((((3600/((A30*60)+T20))*18.31)/100)*I40)+((((3600/((A30*60)+T20))*18.31)/100)*I43))/1000000)).toFixed(2);


return `${moneyM4}M`; 
}

function updateM4(data) {
const M4Money = calculateM4(data); 
document.getElementById('m4').innerHTML = M4Money;
    localStorage.setItem('cached-m4', M4Money); 
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateM5(data) {


const T20 = 0; //seconds
const A30 = 3; //minutes
const A7 = data["SHADOW_FURY"]?.Price || 1;
const A10 = data["LAST_BREATH"]?.Price || 1;
const A13 = data["LIVID_DAGGER"]?.Price || 1;
const A16 = data["SHADOW_ASSASSIN_LEGGINGS"]?.Price || 1;
const A19 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A22 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A25 = data["AOTE_STONE"]?.Price || 1;
const A28 = data["SHADOW_ASSASSIN_HELMET"]?.Price || 1;
const A31 = data["SHADOW_ASSASSIN_BOOTS"]?.Price || 1;
const A34 = data["ENCHANTMENT_ULTIMATE_LEGION_1"]?.Price || 1;
const A37 = data["ENCHANTMENT_OVERLOAD_1"]?.Price || 1;
const A40 = data["ENCHANTMENT_LETHALITY_6"]?.Price || 1;
const A43 = data["ENCHANTMENT_ULTIMATE_LAST_STAND_1"]?.Price || 1;
const A46 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;
const A49 = data["ENCHANTMENT_ULTIMATE_WISDOM_1"]?.Price || 1;
const A55 = data["MASTER_SKULL_TIER_3"]?.Price || 1;
const A58 = data["MASTER_SKULL_TIER_4"]?.Price || 1;
const A61 = data["THIRD_MASTER_STAR"]?.Price || 1;
const A64 = data["SHADOW_ASSASSIN_CHESTPLATE"]?.Price || 1;




const I7 = Math.max((A7-15000000),0);
const I10 = Math.max((A10-7000000),0);
const I13 = Math.max((A13-7000000),0);
const I16 = Math.max((A16-4000000),0);
const I19 = Math.max((A19-6000000),0);
const I22 = Math.max((A22-2000000),0);
const I25 = Math.max((A25-5000000),0);
const I28 = Math.max((A28-2000000),0);
const I31 = Math.max((A31-2000000),0);
const I34 = Math.max((A34-2000000),0);
const I37 = Math.max((A37-2000000),0);
const I40 = Math.max((A40-2000000),0);
const I43 = Math.max((A43-2000000),0);
const I46 = Math.max((A46-2000000),0);
const I49 = Math.max((A49-2000000),0);
const I58 = Math.max((A58-8000000),0);
const I61 = Math.max((A61-7000000),0);
const I64 = Math.max((A64-6000000),0);

const J13 = Math.max((A13-7000000),0);
const J16 = Math.max((A16-4000000),0);
const J19 = Math.max((A19-6000000),0);
const J22 = Math.max((A22-1000000),0);
const J25 = Math.max((A25-5000000),0);
const J28 = Math.max((A28-2000000),0);
const J31 = Math.max((A31-1500000),0);
const J34 = Math.max((A34-1000000),0);
const J37 = Math.max((A37-1000000),0);
const J40 = Math.max((A40-1000000),0);
const J43 = Math.max((A43-1000000),0);
const J46 = Math.max((A46-1000000),0);
const J49 = Math.max((A49-1000000),0);
const J55 = Math.max((A55-2000000),0);
const J61 = Math.max((A61-7000000),0);


var moneyM5 = (((((((3600/((A30*60)+T20))*0.34)/100)*I7)+((((3600/((A30*60)+T20))*0.34)/100)*I10)+((((3600/((A30*60)+T20))*2.21)/100)*I13)+((((3600/((A30*60)+T20))*2.89)/100)*I16)+((((3600/((A30*60)+T20))*3.96)/100)*I19)+((((3600/((A30*60)+T20))*13.67)/100)*I22)+((((3600/((A30*60)+T20))*1.26)/100)*I25)+((((3600/((A30*60)+T20))*6.81)/100)*I28)+((((3600/((A30*60)+T20))*10.1)/100)*I31)+((((3600/((A30*60)+T20))*13.73)/100)*I34)+((((3600/((A30*60)+T20))*13.73)/100)*I37)+((((3600/((A30*60)+T20))*13.94)/100)*I40)+((((3600/((A30*60)+T20))*24.31)/100)*I43)+((((3600/((A30*60)+T20))*21.06)/100)*I46)+((((3600/((A30*60)+T20))*8.73)/100)*I49)+((((3600/((A30*60)+T20))*3.3)/100)*I58)+((((3600/((A30*60)+T20))*1.1)/100)*I61)+((((3600/((A30*60)+T20))*1.03)/100)*I64)+((((3600/((A30*60)+T20))*0.3)/100)*J13)+((((3600/((A30*60)+T20))*1.95)/100)*J16)+((((3600/((A30*60)+T20))*3.16)/100)*J19)+((((3600/((A30*60)+T20))*5.09)/100)*J22)+((((3600/((A30*60)+T20))*0.53)/100)*J25)+((((3600/((A30*60)+T20))*4.21)/100)*J28)+((((3600/((A30*60)+T20))*7.21)/100)*J31)+((((3600/((A30*60)+T20))*9.54)/100)*J34)+((((3600/((A30*60)+T20))*9.54)/100)*J37)+((((3600/((A30*60)+T20))*9.72)/100)*J40)+((((3600/((A30*60)+T20))*24.65)/100)*J43)+((((3600/((A30*60)+T20))*18.84)/100)*J46)+((((3600/((A30*60)+T20))*18.84)/100)*J49)+((((3600/((A30*60)+T20))*2.11)/100)*J55)+((((3600/((A30*60)+T20))*0.3)/100)*J61))/1000000)).toFixed(2);


return `${moneyM5}M`; 
}

function updateM5(data) {
const M5Money = calculateM5(data); 
document.getElementById('m5').innerHTML = M5Money;
    localStorage.setItem('cached-m5', M5Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateM6(data) {


const T20 = 0; //seconds
const A30 = 5; //minutes
const A7 = data["PRECURSOR_EYE"]?.Price || 1;
const A10 = data["GIANTS_SWORD"]?.Price || 1;
const A13 = data["NECROMANCER_LORD_CHESTPLATE"]?.Price || 1;
const A16 = data["SUMMONING_RING"]?.Price || 1;
const A19 = data["NECROMANCER_SWORD"]?.Price || 1;
const A22 = data["NECROMANCER_LORD_LEGGINGS"]?.Price || 1;
const A25 = data["NECROMANCER_LORD_HELMET"]?.Price || 1;
const A28 = data["SADAN_BROOCH"]?.Price || 1;
const A31 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A34 = data["NECROMANCER_LORD_BOOTS"]?.Price || 1;
const A37 = data["GOLEM_POPPY"]?.Price || 1;
const A40 = data["ENCHANTMENT_ULTIMATE_SWARM_1"]?.Price || 1;
const A43 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A46 = data["GIANT_TOOTH"]?.Price || 1;
const A49 = data["ENCHANTMENT_ULTIMATE_LAST_STAND_1"]?.Price || 1;
const A52 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;
const A55 = data["ENCHANTMENT_ULTIMATE_WISDOM_1"]?.Price || 1;
const A58 = data["MASTER_SKULL_TIER_4"]?.Price || 1;
const A61 = data["FOURTH_MASTER_STAR"]?.Price || 1;



const I7 = Math.max((A7-30000000),0);
const I10 = Math.max((A10-25000000),0);
const I13 = Math.max((A13-10000000),0);
const I16 = Math.max((A16-12000000),0);
const I19 = Math.max((A19-10000000),0);
const I22 = Math.max((A22-4000000),0);
const I25 = Math.max((A25-2000000),0);
const I28 = Math.max((A28-2000000),0);
const I31 = Math.max((A31-6000000),0);
const I34 = Math.max((A34-2000000),0);
const I37 = Math.max((A37-2000000),0);
const I40 = Math.max((A40-2000000),0);
const I43 = Math.max((A43-2000000),0);
const I46 = Math.max((A46-2000000),0);
const I49 = Math.max((A49-2000000),0);
const I52 = Math.max((A52-2000000),0);
const I55 = Math.max((A55-2000000),0);
const I58 = Math.max((A58-8000000),0);
const I61 = Math.max((A61-8000000),0);

const J16 = Math.max((A16-12000000),0);
const J19 = Math.max((A19-10000000),0);
const J22 = Math.max((A22-4000000),0);
const J25 = Math.max((A25-2000000),0);
const J28 = Math.max((A28-1500000),0);
const J31 = Math.max((A31-6000000),0);
const J34 = Math.max((A34-1500000),0);
const J37 = Math.max((A37-1000000),0);
const J40 = Math.max((A40-1000000),0);
const J43 = Math.max((A43-1000000),0);
const J46 = Math.max((A46-1000000),0);
const J49 = Math.max((A49-1000000),0);
const J52 = Math.max((A52-1000000),0);
const J55 = Math.max((A55-1000000),0);
const J58 = Math.max((A58-8000000),0);
const J61 = Math.max((A61-8000000),0);


var moneyM6 = ((((((((3600/((A30*60)+T20))*0.07)/100)*I7)+(((((3600/((A30*60)+T20))*0.17)/100)*I10)+(((((3600/((A30*60)+T20))*0.5)/100)*I13)+(((((3600/((A30*60)+T20))*0.63)/100)*I16)+(((((3600/((A30*60)+T20))*1.26)/100)*I19)+(((((3600/((A30*60)+T20))*2.04)/100)*I22)+(((((3600/((A30*60)+T20))*2.04)/100)*I25)+(((((3600/((A30*60)+T20))*2.81)/100)*I28)+(((((3600/((A30*60)+T20))*8.17)/100)*I31)+(((((3600/((A30*60)+T20))*4.25)/100)*I34)+(((((3600/((A30*60)+T20))*10.51)/100)*I37)+(((((3600/((A30*60)+T20))*10.9)/100)*I40)+(((((3600/((A30*60)+T20))*14.39)/100)*I43)+(((((3600/((A30*60)+T20))*3.72)/100)*I46)+(((((3600/((A30*60)+T20))*26.64)/100)*I49)+(((((3600/((A30*60)+T20))*23.41)/100)*I52)+(((((3600/((A30*60)+T20))*16.33)/100)*I55)+(((((3600/((A30*60)+T20))*0.68)/100)*I58)+(((((3600/((A30*60)+T20))*0.63)/100)*I61)+(((((3600/((A30*60)+T20))*0.21)/100)*J16)+(((((3600/((A30*60)+T20))*0.69)/100)*J19)+(((((3600/((A30*60)+T20))*1.16)/100)*J22)+(((((3600/((A30*60)+T20))*1.55)/100)*J25)+(((((3600/((A30*60)+T20))*1.71)/100)*J28)+(((((3600/((A30*60)+T20))*2.33)/100)*J31)+(((((3600/((A30*60)+T20))*2.57)/100)*J34)+(((((3600/((A30*60)+T20))*6.42)/100)*J37)+(((((3600/((A30*60)+T20))*6.5)/100)*J40)+(((((3600/((A30*60)+T20))*3.93)/100)*J43)+(((((3600/((A30*60)+T20))*6.5)/100)*J46)+(((((3600/((A30*60)+T20))*25.36)/100)*J49)+(((((3600/((A30*60)+T20))*19.42)/100)*J52)+(((((3600/((A30*60)+T20))*19.42)/100)*J55)+(((((3600/((A30*60)+T20))*2.33)/100)*J58)+(((((3600/((A30*60)+T20))*0.64)/100)*J61)))))))))))))))))))))))))))))))))))))/1000000)).toFixed(2);


return `${moneyM6}M`; 
}

function updateM6(data) {
const M6Money = calculateM6(data); 
document.getElementById('m6').innerHTML = M6Money;
    localStorage.setItem('cached-m6', M6Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateM7(data) {


const T20 = 0; //seconds
const A30 = 6; //minutes
const A7 = data["NECRON_HANDLE"]?.Price || 1;
const A10 = data["IMPLOSION_SCROLL"]?.Price || 1;
const A13 = data["SHADOW_WARP_SCROLL"]?.Price || 1;
const A16 = data["WITHER_SHIELD_SCROLL"]?.Price || 1;
const A19 = data["AUTO_RECOMBOBULATOR"]?.Price || 1;
const A22 = data["WITHER_CHESTPLATE"]?.Price || 1;
const A25 = data["ENCHANTMENT_ULTIMATE_ONE_FOR_ALL_1"]?.Price || 1;
const A28 = data["WITHER_LEGGINGS"]?.Price || 1;
const A31 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A34 = data["WITHER_CLOAK"]?.Price || 1;
const A37 = data["WITHER_BLOOD"]?.Price || 1;
const A40 = data["WITHER_HELMET"]?.Price || 1;
const A43 = data["ENCHANTMENT_ULTIMATE_SOUL_EATER_1"]?.Price || 1;
const A46 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A49 = data["WITHER_BOOTS"]?.Price || 1;
const A52 = data["WITHER_CATALYST"]?.Price || 1;
const A55 = data["PRECURSOR_GEAR"]?.Price || 1;
const A58 = data["ENCHANTMENT_ULTIMATE_LAST_STAND_1"]?.Price || 1;
const A61 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;
const A64 = data["ENCHANTMENT_ULTIMATE_WISDOM_1"]?.Price || 1;
const A67 = data["KISMET_FEATHER"]?.Price || 1;
const A70 = data["ENCHANTMENT_THUNDERLORD_7"]?.Price || 1;
const A73 = data["DARK_CLAYMORE"]?.Price || 1;
const A76 = data["DYE_NECRON"]?.Price || 1;
const A79 = data["MASTER_SKULL_TIER_5"]?.Price || 1;
const A82 = data["FIFTH_MASTER_STAR"]?.Price || 1;
const A85 = data["MASTER_SKULL_TIER_4"]?.Price || 1;



const I7 = Math.max((A7-100000000),0);
const I10 = Math.max((A10-50000000),0);
const I13 = Math.max((A13-50000000),0);
const I16 = Math.max((A16-50000000),0);
const I19 = Math.max((A19-10000000),0);
const I22 = Math.max((A22-10000000),0);
const I25 = Math.max((A25-2000000),0);
const I28 = Math.max((A28-6000000),0);
const I31 = Math.max((A31-6000000),0);
const I34 = Math.max((A34-4500000),0);
const I37 = Math.max((A37-3000000),0);
const I40 = Math.max((A40-4000000),0);
const I43 = Math.max((A43-2000000),0);
const I46 = Math.max((A46-2000000),0);
const I49 = Math.max((A49-2500000),0);
const I52 = Math.max((A52-2000000),0);
const I55 = Math.max((A55-2000000),0);
const I58 = Math.max((A58-2000000),0);
const I61 = Math.max((A61-2000000),0);
const I64 = Math.max((A64-2000000),0);
const I70 = Math.max((A70-2000000),0);
const I73 = Math.max((A73-150000000),0);
const I76 = Math.max((A76-10000000),0);
const I79 = Math.max((A79-32000000),0);
const I82 = Math.max((A82-9000000),0);

const J22 = Math.max((A22-10000000),0);
const J25 = Math.max((A25-2000000),0);
const J28 = Math.max((A28-6000000),0);
const J31 = Math.max((A31-6000000),0);
const J34 = Math.max((A34-4500000),0);
const J37 = Math.max((A37-2500000),0);
const J40 = Math.max((A40-4000000),0);
const J43 = Math.max((A43-1000000),0);
const J46 = Math.max((A46-1000000),0);
const J49 = Math.max((A49-2500000),0);
const J52 = Math.max((A52-1000000),0);
const J55 = Math.max((A55-1000000),0);
const J58 = Math.max((A58-1000000),0);
const J61 = Math.max((A61-1000000),0);
const J64 = Math.max((A64-1000000),0);
const J82 = Math.max((A82-9000000),0);
const J85 = Math.max((A85-8000000),0);


var moneyM7 = (((((((3600/((A30*60)+T20))*0.13)/100)*I7)+((((3600/((A30*60)+T20))*0.18)/100)*I10)+((((3600/((A30*60)+T20))*0.18)/100)*I13)+((((3600/((A30*60)+T20))*0.18)/100)*I16)+((((3600/((A30*60)+T20))*0.89)/100)*I19)+((((3600/((A30*60)+T20))*0.95)/100)*I22)+((((3600/((A30*60)+T20))*1)/100)*I25)+((((3600/((A30*60)+T20))*4.32)/100)*I28)+((((3600/((A30*60)+T20))*6.73)/100)*I31)+((((3600/((A30*60)+T20))*6.73)/100)*I34)+((((3600/((A30*60)+T20))*6.73)/100)*I37)+((((3600/((A30*60)+T20))*6.73)/100)*I40)+((((3600/((A30*60)+T20))*11.52)/100)*I43)+((((3600/((A30*60)+T20))*5.85)/100)*I46)+((((3600/((A30*60)+T20))*7)/100)*I49)+((((3600/((A30*60)+T20))*5.88)/100)*I52)+((((3600/((A30*60)+T20))*17.15)/100)*I55)+((((3600/((A30*60)+T20))*14.53)/100)*I58)+((((3600/((A30*60)+T20))*11.72)/100)*I61)+((((3600/((A30*60)+T20))*7.41)/100)*I64)+((((3600/((A30*60)+T20))*0.3)/100)*I70)+((((3600/((A30*60)+T20))*0.08)/100)*I73)+((((3600/((A30*60)+T20))*0.04)/100)*I76)+((((3600/((A30*60)+T20))*0.32)/100)*I79)+((((3600/((A30*60)+T20))*0.33)/100)*I82)+((((3600/((A30*60)+T20))*0.32)/100)*J22)+((((3600/((A30*60)+T20))*0.5)/100)*J25)+((((3600/((A30*60)+T20))*2.26)/100)*J28)+((((3600/((A30*60)+T20))*11.3)/100)*J31)+((((3600/((A30*60)+T20))*3.65)/100)*J34)+((((3600/((A30*60)+T20))*3.84)/100)*J37)+((((3600/((A30*60)+T20))*3.84)/100)*J40)+((((3600/((A30*60)+T20))*8.92)/100)*J43)+((((3600/((A30*60)+T20))*8.92)/100)*J46)+((((3600/((A30*60)+T20))*9.03)/100)*J49)+((((3600/((A30*60)+T20))*0.03)/100)*J52)+((((3600/((A30*60)+T20))*10.53)/100)*J55)+((((3600/((A30*60)+T20))*19.31)/100)*J58)+((((3600/((A30*60)+T20))*25.22)/100)*J61)+((((3600/((A30*60)+T20))*9.92)/100)*J64)+((((3600/((A30*60)+T20))*0.32)/100)*J82)+((((3600/((A30*60)+T20))*2.26)/100)*J85))/1000000)).toFixed(2);


return `${moneyM7}M`; 
}

function updateM7(data) {
const M7Money = calculateM7(data); 
document.getElementById('m7').innerHTML = M7Money;
    localStorage.setItem('cached-m7', M7Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateM7Kismets(data) {


const T20 = 0; //seconds
const A30 = 6; //minutes
const A7 = data["NECRON_HANDLE"]?.Price || 1;
const A10 = data["IMPLOSION_SCROLL"]?.Price || 1;
const A13 = data["SHADOW_WARP_SCROLL"]?.Price || 1;
const A16 = data["WITHER_SHIELD_SCROLL"]?.Price || 1;
const A19 = data["AUTO_RECOMBOBULATOR"]?.Price || 1;
const A22 = data["WITHER_CHESTPLATE"]?.Price || 1;
const A25 = data["ENCHANTMENT_ULTIMATE_ONE_FOR_ALL_1"]?.Price || 1;
const A28 = data["WITHER_LEGGINGS"]?.Price || 1;
const A31 = data["RECOMBOBULATOR_3000"]?.Price || 1;
const A34 = data["WITHER_CLOAK"]?.Price || 1;
const A37 = data["WITHER_BLOOD"]?.Price || 1;
const A40 = data["WITHER_HELMET"]?.Price || 1;
const A43 = data["ENCHANTMENT_ULTIMATE_SOUL_EATER_1"]?.Price || 1;
const A46 = data["FUMING_POTATO_BOOK"]?.Price || 1;
const A49 = data["WITHER_BOOTS"]?.Price || 1;
const A52 = data["WITHER_CATALYST"]?.Price || 1;
const A55 = data["PRECURSOR_GEAR"]?.Price || 1;
const A58 = data["ENCHANTMENT_ULTIMATE_LAST_STAND_1"]?.Price || 1;
const A61 = data["ENCHANTMENT_ULTIMATE_WISE_1"]?.Price || 1;
const A64 = data["ENCHANTMENT_ULTIMATE_WISDOM_1"]?.Price || 1;
const A67 = data["KISMET_FEATHER"]?.Price || 1;
const A70 = data["ENCHANTMENT_THUNDERLORD_7"]?.Price || 1;
const A73 = data["DARK_CLAYMORE"]?.Price || 1;
const A76 = data["DYE_NECRON"]?.Price || 1;
const A79 = data["MASTER_SKULL_TIER_5"]?.Price || 1;
const A82 = data["FIFTH_MASTER_STAR"]?.Price || 1;
const A85 = data["MASTER_SKULL_TIER_4"]?.Price || 1;



const I7 = Math.max((A7-100000000),0);
const I10 = Math.max((A10-50000000),0);
const I13 = Math.max((A13-50000000),0);
const I16 = Math.max((A16-50000000),0);
const I19 = Math.max((A19-10000000),0);
const I22 = Math.max((A22-10000000),0);
const I25 = Math.max((A25-2000000),0);
const I28 = Math.max((A28-6000000),0);
const I31 = Math.max((A31-6000000),0);
const I34 = Math.max((A34-4500000),0);
const I37 = Math.max((A37-3000000),0);
const I40 = Math.max((A40-4000000),0);
const I43 = Math.max((A43-2000000),0);
const I46 = Math.max((A46-2000000),0);
const I49 = Math.max((A49-2500000),0);
const I52 = Math.max((A52-2000000),0);
const I55 = Math.max((A55-2000000),0);
const I58 = Math.max((A58-2000000),0);
const I61 = Math.max((A61-2000000),0);
const I64 = Math.max((A64-2000000),0);
const I70 = Math.max((A70-2000000),0);
const I73 = Math.max((A73-150000000),0);
const I76 = Math.max((A76-10000000),0);
const I79 = Math.max((A79-32000000),0);
const I82 = Math.max((A82-9000000),0);

const J22 = Math.max((A22-10000000),0);
const J25 = Math.max((A25-2000000),0);
const J28 = Math.max((A28-6000000),0);
const J31 = Math.max((A31-6000000),0);
const J34 = Math.max((A34-4500000),0);
const J37 = Math.max((A37-2500000),0);
const J40 = Math.max((A40-4000000),0);
const J43 = Math.max((A43-1000000),0);
const J46 = Math.max((A46-1000000),0);
const J49 = Math.max((A49-2500000),0);
const J52 = Math.max((A52-1000000),0);
const J55 = Math.max((A55-1000000),0);
const J58 = Math.max((A58-1000000),0);
const J61 = Math.max((A61-1000000),0);
const J64 = Math.max((A64-1000000),0);
const J82 = Math.max((A82-9000000),0);
const J85 = Math.max((A85-8000000),0);


var moneyM7Kismets = ((((((((3600/((A30*60)+T20))*0.13*2)/100)*I7)+((((3600/((A30*60)+T20))*0.18*2)/100)*I10)+((((3600/((A30*60)+T20))*0.18*2)/100)*I13)+((((3600/((A30*60)+T20))*0.18*2)/100)*I16)+((((3600/((A30*60)+T20))*0.89*2)/100)*I19)+((((3600/((A30*60)+T20))*0.95)/100)*I22)+((((3600/((A30*60)+T20))*1)/100)*I25)+((((3600/((A30*60)+T20))*4.32)/100)*I28)+((((3600/((A30*60)+T20))*6.73)/100)*I31)+((((3600/((A30*60)+T20))*6.73)/100)*I34)+((((3600/((A30*60)+T20))*6.73)/100)*I37)+((((3600/((A30*60)+T20))*6.73)/100)*I40)+((((3600/((A30*60)+T20))*11.52)/100)*I43)+((((3600/((A30*60)+T20))*5.85)/100)*I46)+((((3600/((A30*60)+T20))*7)/100)*I49)+((((3600/((A30*60)+T20))*5.88)/100)*I52)+((((3600/((A30*60)+T20))*17.15)/100)*I55)+((((3600/((A30*60)+T20))*14.53)/100)*I58)+((((3600/((A30*60)+T20))*11.72)/100)*I61)+((((3600/((A30*60)+T20))*7.41)/100)*I64)+((((3600/((A30*60)+T20))*0.3*2)/100)*I70)+((((3600/((A30*60)+T20))*0.08*2)/100)*I73)+((((3600/((A30*60)+T20))*0.04*2)/100)*I76)+((((3600/((A30*60)+T20))*0.32)/100)*I79)+((((3600/((A30*60)+T20))*0.33*2)/100)*I82)+((((3600/((A30*60)+T20))*0.32)/100)*J22)+((((3600/((A30*60)+T20))*0.5)/100)*J25)+((((3600/((A30*60)+T20))*2.26)/100)*J28)+((((3600/((A30*60)+T20))*11.3)/100)*J31)+((((3600/((A30*60)+T20))*3.65)/100)*J34)+((((3600/((A30*60)+T20))*3.84)/100)*J37)+((((3600/((A30*60)+T20))*3.84)/100)*J40)+((((3600/((A30*60)+T20))*8.92)/100)*J43)+((((3600/((A30*60)+T20))*8.92)/100)*J46)+((((3600/((A30*60)+T20))*9.03)/100)*J49)+((((3600/((A30*60)+T20))*0.03)/100)*J52)+((((3600/((A30*60)+T20))*10.53)/100)*J55)+((((3600/((A30*60)+T20))*19.31)/100)*J58)+((((3600/((A30*60)+T20))*25.22)/100)*J61)+((((3600/((A30*60)+T20))*9.92)/100)*J64)+((((3600/((A30*60)+T20))*0.32)/100)*J82)+((((3600/((A30*60)+T20))*2.26)/100)*J85))-((3600/((A30*60)+T20))*A67))/1000000)).toFixed(2);


return `${moneyM7Kismets}M`; 
}

function updateM7Kismets(data) {
const M7KismetsMoney = calculateM7Kismets(data); 
document.getElementById('m7-kismets').innerHTML = M7KismetsMoney;
    localStorage.setItem('cached-m7-kismets', M7KismetsMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateSludgeMining(data) {




const A4 = 1150; //Sludge Juice in 5 minutes
const A10 = 1150; //Enchanted Hard Stone in 5 minutes
const A7 = data["SLUDGE_JUICE"]?.Price || 1;
const A13 = data["ENCHANTED_HARD_STONE"]?.Price || 1;

var moneySludgeMining = (((A4*A7*12)+(A10*A13*12))/1000000).toFixed(2);



return `${moneySludgeMining}M`; 
}

function updateSludgeMining(data) {
const SludgeMiningMoney = calculateSludgeMining(data); 
document.getElementById('sludge-mining').innerHTML = SludgeMiningMoney;
    localStorage.setItem('cached-sludge-mining', SludgeMiningMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateVanquishedGlowstoneGauntlet(data) {


const A4 = 8616; 
const D2 = 45;
const A7 = data["VANQUISHED_GLOWSTONE_GAUNTLET"]?.Price || 1;
const A10 = data["VANQUISHED_MAGMA_NECKLACE"]?.Price || 1;
const A13 = data["VANQUISHED_GHAST_CLOAK"]?.Price || 1;
const A16 = data["VANQUISHED_BLAZE_BELT"]?.Price || 1;
const A19 = data["ENCHANTED_MAGMA_CREAM"]?.Price || 1;
const A22 = data["ENCHANTED_GLOWSTONE"]?.Price || 1;
const A25 = data["ENCHANTED_GHAST_TEAR"]?.Price || 1;
const A28 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1;
const A31 = data["GLOWSTONE_GAUNTLET"]?.Price || 1;
const A34 = data["MAGMA_NECKLACE"]?.Price || 1;
const A37 = data["GHAST_CLOAK"]?.Price || 1;
const A40 = data["BLAZE_BELT"]?.Price || 1;

var moneyVanquishedGlowstoneGauntlet = ((((((A4/640)*(1+(D2/100)))*A7)-(((A4/640)*(1+(D2/100)))*A22*4))-(((A4/640)*(1+(D2/100)))*A31))/1000000).toFixed(2);

return `${moneyVanquishedGlowstoneGauntlet}M`; 
}

function updateVanquishedGlowstoneGauntlet(data) {
const VanquishedGlowstoneGauntletMoney = calculateVanquishedGlowstoneGauntlet(data); 
document.getElementById('vanquished-glowstone-gauntlet').innerHTML = VanquishedGlowstoneGauntletMoney;
    localStorage.setItem('cached-vanquished-glowstone-gauntlet', VanquishedGlowstoneGauntletMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateVanquishedMagmaNecklace(data) {


const A4 = 8616;
const D2 = 45;
const A7 = data["VANQUISHED_GLOWSTONE_GAUNTLET"]?.Price || 1;
const A10 = data["VANQUISHED_MAGMA_NECKLACE"]?.Price || 1;
const A13 = data["VANQUISHED_GHAST_CLOAK"]?.Price || 1;
const A16 = data["VANQUISHED_BLAZE_BELT"]?.Price || 1;
const A19 = data["ENCHANTED_MAGMA_CREAM"]?.Price || 1;
const A22 = data["ENCHANTED_GLOWSTONE"]?.Price || 1;
const A25 = data["ENCHANTED_GHAST_TEAR"]?.Price || 1;
const A28 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1;
const A31 = data["GLOWSTONE_GAUNTLET"]?.Price || 1;
const A34 = data["MAGMA_NECKLACE"]?.Price || 1;
const A37 = data["GHAST_CLOAK"]?.Price || 1;
const A40 = data["BLAZE_BELT"]?.Price || 1;


var moneyVanquishedMagmaNecklace = ((((((A4/640)*(1+(D2/100)))*A10)-(((A4/640)*(1+(D2/100)))*A19*64*4))-(((A4/640)*(1+(D2/100)))*A34))/1000000).toFixed(2);





return `${moneyVanquishedMagmaNecklace}M`; 
}

function updateVanquishedMagmaNecklace(data) {
const VanquishedMagmaNecklaceMoney = calculateVanquishedMagmaNecklace(data); 
document.getElementById('vanquished-magma-necklace').innerHTML = VanquishedMagmaNecklaceMoney;
    localStorage.setItem('cached-vanquished-magma-necklace', VanquishedMagmaNecklaceMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateVanquishedGhastCloak(data) {


const A4 = 8616;
const D2 = 45;
const A7 = data["VANQUISHED_GLOWSTONE_GAUNTLET"]?.Price || 1;
const A10 = data["VANQUISHED_MAGMA_NECKLACE"]?.Price || 1;
const A13 = data["VANQUISHED_GHAST_CLOAK"]?.Price || 1;
const A16 = data["VANQUISHED_BLAZE_BELT"]?.Price || 1;
const A19 = data["ENCHANTED_MAGMA_CREAM"]?.Price || 1;
const A22 = data["ENCHANTED_GLOWSTONE"]?.Price || 1;
const A25 = data["ENCHANTED_GHAST_TEAR"]?.Price || 1;
const A28 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1;
const A31 = data["GLOWSTONE_GAUNTLET"]?.Price || 1;
const A34 = data["MAGMA_NECKLACE"]?.Price || 1;
const A37 = data["GHAST_CLOAK"]?.Price || 1;
const A40 = data["BLAZE_BELT"]?.Price || 1;

var moneyVanquishedGhastCloak = ((((((A4/640)*(1+(D2/100)))*A13)-(((A4/640)*(1+(D2/100)))*A25*25*64*4))-((A4/640)*(1+(D2/100)))*A37)/1000000).toFixed(2);


return `${moneyVanquishedGhastCloak}M`; 
}

function updateVanquishedGhastCloak(data) {
const VanquishedGhastCloakMoney = calculateVanquishedGhastCloak(data); 
document.getElementById('vanquished-ghast-cloak').innerHTML = VanquishedGhastCloakMoney;
    localStorage.setItem('cached-vanquished-ghast-cloak', VanquishedGhastCloakMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateVanquishedBlazeBelt(data) {


const A4 = 8616;
const D2 = 45;
const A7 = data["VANQUISHED_GLOWSTONE_GAUNTLET"]?.Price || 1;
const A10 = data["VANQUISHED_MAGMA_NECKLACE"]?.Price || 1;
const A13 = data["VANQUISHED_GHAST_CLOAK"]?.Price || 1;
const A16 = data["VANQUISHED_BLAZE_BELT"]?.Price || 1;
const A19 = data["ENCHANTED_MAGMA_CREAM"]?.Price || 1;
const A22 = data["ENCHANTED_GLOWSTONE"]?.Price || 1;
const A25 = data["ENCHANTED_GHAST_TEAR"]?.Price || 1;
const A28 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1;
const A31 = data["GLOWSTONE_GAUNTLET"]?.Price || 1;
const A34 = data["MAGMA_NECKLACE"]?.Price || 1;
const A37 = data["GHAST_CLOAK"]?.Price || 1;
const A40 = data["BLAZE_BELT"]?.Price || 1;

var moneyVanquishedBlazeBelt = ((((((A4/640)*(1+(D2/100)))*A16)-(((A4/640)*(1+(D2/100)))*A28*2))-((A4/640)*(1+(D2/100)))*A40)/1000000).toFixed(2);


return `${moneyVanquishedBlazeBelt}M`; 
}

function updateVanquishedBlazeBelt(data) {
const VanquishedBlazeBeltMoney = calculateVanquishedBlazeBelt(data); 
document.getElementById('vanquished-blaze-belt').innerHTML = VanquishedBlazeBeltMoney;
    localStorage.setItem('cached-vanquished-blaze-belt', VanquishedBlazeBeltMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateCinderBat(data) {


const A4 = 19;
const A22 = 5;
const A7 = 220;
const A10 = data["PLASMA_BUCKET"]?.Price || 1;
const A13 = data["ENCHANTED_RED_SAND_CUBE"]?.Price || 1;
const A16 = data["ENCHANTED_SULPHUR_CUBE"]?.Price || 1;
const A19 = data["EVERBURNING_FLAME"]?.Price || 1;



var moneyCinderBat = (((((((A4*12)/100)*(1+(A7/100))*(1+(A22*0.15)))/16)*A19)-((((((A4*12)/100)*(1+(A7/100))*(1+(A22*0.15)))/16)*A10)+(((((A4*12)/100)*(1+(A7/100))*(1+(A22*0.15)))/16)*A13*2)+(((((A4*12)/100)*(1+(A7/100))*(1+(A22*0.15)))/16)*A16*2)))/1000000).toFixed(2);


return `${moneyCinderBat}M`; 
}

function updateCinderBat(data) {
const CinderBatMoney = calculateCinderBat(data); 
document.getElementById('cinder-bat').innerHTML = CinderBatMoney;
    localStorage.setItem('cached-cinder-bat', CinderBatMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMithrilMining(data) {



const A4 = 561; // enchanted mithril in 5 minutes
const A5 = 57; // enchanted titanium in 5 minutes
const A7 = data["ENCHANTED_MITHRIL"]?.Price || 1;
const A8 = data["ENCHANTED_TITANIUM"]?.Price || 1;



var moneyMithrilMining = (((A4*12*A7)+(A5*12*A8))/1000000).toFixed(2);




return `${moneyMithrilMining}M`; 
}

function updateMithrilMining(data) {
const MithrilMiningMoney = calculateMithrilMining(data); 
document.getElementById('mithril-mining').innerHTML = MithrilMiningMoney;
    localStorage.setItem('cached-mithril-mining', MithrilMiningMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBal(data) {


const a = 60; // time to kill (54 kills / hour when calculated)
const b = 7; 
const A4 = a+b;
const A7 = data["BAL;3"]?.Price || 1;
const A10 = data["BAL;4"]?.Price || 1;

var moneyBal = ((((((3600/A4)*200)/7936)*A7)+((((3600/A4)*200)/18518)*A10))/1000000).toFixed(2);


return `${moneyBal}M`; 
}

function updateBal(data) {
const BalMoney = calculateBal(data); 
document.getElementById('bal').innerHTML = BalMoney;
    localStorage.setItem('cached-bal', BalMoney); 
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateScatha(data) {


const D5 = 29; // worm + scatha / hour
const A16 = 5; // Looting
const A19 = 300; // Magic Find
const C20 = 110; // Pet Luck
const A7 = data["SCATHA;2"]?.Price || 1;
const A10 = data["SCATHA;3"]?.Price || 1;
const A13 = data["SCATHA;4"]?.Price || 1;
const A22 = data["DWARVEN_OS_BLOCK_BRAN"]?.Price || 1;



var moneyScatha = (((((((D5)/5)*((0.24*(1+((A19+C20)/100)))))/100)*A7)+(((((D5)/5)*((0.12*(1+((A19+C20)/100)))))/100)*A10)+(((((D5)/5)*((0.04*(1+((A19+C20)/100)))))/100)*A13)+((((D5/5)*0.1)*(1+(0.15*A16)))*A22))/1000000).toFixed(2);


return `${moneyScatha}M`; 
}

function updateScatha(data) {
const ScathaMoney = calculateScatha(data); 
document.getElementById('scatha').innerHTML = ScathaMoney;
    localStorage.setItem('cached-scatha', ScathaMoney); 
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateGhost(data) {


const A4 = 398; //kills in 5 minutes
const A25 = 5; //looting
const A22 = 401; //magic find
const A7 = data["VOLTA"]?.Price || 1;
const A11 = data["SORROW"]?.Price || 1;
const A15 = data["PLASMA"]?.Price || 1;




var moneyGhost = (((((A4*12)/10000)*1000000)+(((A4*12)/10000)*(1+(A22/100))*(1+(A25*0.15))*77777)+(((A4*12)/500)*(1+(A22/100))*(1+(A25*0.15))*A7)+(((A4*12)/833)*(1+(A22/100))*(1+(A25*0.15))*A11)+(((A4*12)/1000)*(1+(A22/100))*(1+(A25*0.15))*A15))/1000000).toFixed(2);


return `${moneyGhost}M`; 
}

function updateGhost(data) {
const GhostMoney = calculateGhost(data); 
document.getElementById('ghost').innerHTML = GhostMoney;
    localStorage.setItem('cached-ghost', GhostMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateAshfang(data) {



const A3 = 45;
const A6 = data["FIRE_VEIL_WAND"]?.Price || 1;
const A9 = data["MAGMA_URCHIN"]?.Price || 1;




var moneyAshfang = ((((A3/10)*A6)+((((A3/4)*5)/100)*2*A9)+(((A3)/100)*0.5*A6))/1000000).toFixed(2);




return `${moneyAshfang}M`; 
}

function updateAshfang(data) {
const AshfangMoney = calculateAshfang(data); 
document.getElementById('ashfang').innerHTML = AshfangMoney;
    localStorage.setItem('cached-ashfang', AshfangMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateSynthesizerV3(data) {


const A4 = 19; // x in 5 minutes
const B4 = 6; // y in 5 minutes
const C4 = 7; //z in 5 minutes
const A8 = data["SYNTHESIZER_V3"]?.Price || 1;
const A11 = data["ENCHANTED_MYCELIUM_CUBE"]?.Price || 1;
const A14 = data["SHIMMERING_LIGHT_SLIPPERS"]?.Price || 1;
const A17 = data["SHIMMERING_LIGHT_TROUSERS"]?.Price || 1;
const A20 = data["SHIMMERING_LIGHT_TUNIC"]?.Price || 1;
const A23 = data["SHIMMERING_LIGHT_HOOD"]?.Price || 1;


var moneySynthesizerV3 = ((A8/((((3600/(A4*12))*320)+((3600/(B4*12))*512)+((3600/(C4*12))*512))/3600))/1000000).toFixed(2);


return `${moneySynthesizerV3}M`; 
}

function updateSynthesizerV3(data) {
const SynthesizerV3Money = calculateSynthesizerV3(data); 
document.getElementById('synthesizer-v3').innerHTML = SynthesizerV3Money;
    localStorage.setItem('cached-synthesizer-v3', SynthesizerV3Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateShimmeringLightSlippers(data) {


const A4 = 19; // x in 5 minutes
const B4 = 6; // y in 5 minutes
const C4 = 7; //z in 5 minutes
const A15 = data["Y"]?.Price || 1;
const A18 = data["Z"]?.Price || 1;
const A8 = data["SYNTHESIZER_V3"]?.Price || 1;
const A11 = data["ENCHANTED_MYCELIUM_CUBE"]?.Price || 1;
const A14 = data["SHIMMERING_LIGHT_SLIPPERS"]?.Price || 1;
const A17 = data["SHIMMERING_LIGHT_TROUSERS"]?.Price || 1;
const A20 = data["SHIMMERING_LIGHT_TUNIC"]?.Price || 1;
const A23 = data["SHIMMERING_LIGHT_HOOD"]?.Price || 1;

var moneyShimmeringLightSlippers = ((((((3600/((3600/(A4*12))*100))*A14)-((3600/((3600/(A4*12))*150))*A11*2)))+((B4*12*A15)+(C4*12*A18)))/1000000).toFixed(2);



return `${moneyShimmeringLightSlippers}M`; 
}

function updateShimmeringLightSlippers(data) {
const ShimmeringLightSlippersMoney = calculateShimmeringLightSlippers(data); 
document.getElementById('shimmering-light-slippers').innerHTML = ShimmeringLightSlippersMoney;
    localStorage.setItem('cached-shimmering-light-slippers', ShimmeringLightSlippersMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateShimmeringLightTrousers(data) {


const A4 = 19; // x in 5 minutes
const B4 = 6; // y in 5 minutes
const C4 = 7; //z in 5 minutes
const A12 = data["X"]?.Price || 1;
const A8 = data["SYNTHESIZER_V3"]?.Price || 1;
const A11 = data["ENCHANTED_MYCELIUM_CUBE"]?.Price || 1;
const A14 = data["SHIMMERING_LIGHT_SLIPPERS"]?.Price || 1;
const A17 = data["SHIMMERING_LIGHT_TROUSERS"]?.Price || 1;
const A20 = data["SHIMMERING_LIGHT_TUNIC"]?.Price || 1;
const A23 = data["SHIMMERING_LIGHT_HOOD"]?.Price || 1;


var moneyShimmeringLightTrousers = ((((((3600/(((3600/(B4*12))*60)+((3600/(C4*12))*10)))*A17)-((3600/(((3600/(B4*12))*60)+((3600/(C4*12))*10)))*A11*4)))+((A4*12*A12)))/1000000).toFixed(2);


return `${moneyShimmeringLightTrousers}M`; 
}

function updateShimmeringLightTrousers(data) {
const ShimmeringLightTrousersMoney = calculateShimmeringLightTrousers(data); 
document.getElementById('shimmering-light-trousers').innerHTML = ShimmeringLightTrousersMoney;
    localStorage.setItem('cached-shimmering-light-trousers', ShimmeringLightTrousersMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateShimmeringLightTunic(data) {


const A4 = 19; // x in 5 minutes
const B4 = 6; // y in 5 minutes
const C4 = 7; //z in 5 minutes
const A12 = data["X"]?.Price || 1;
const A8 = data["SYNTHESIZER_V3"]?.Price || 1;
const A11 = data["ENCHANTED_MYCELIUM_CUBE"]?.Price || 1;
const A14 = data["SHIMMERING_LIGHT_SLIPPERS"]?.Price || 1;
const A17 = data["SHIMMERING_LIGHT_TROUSERS"]?.Price || 1;
const A20 = data["SHIMMERING_LIGHT_TUNIC"]?.Price || 1;
const A23 = data["SHIMMERING_LIGHT_HOOD"]?.Price || 1;


var moneyShimmeringLightTunic = ((((((3600/(((3600/(B4*12))*60)+((3600/(C4*12))*10)))*A20)-((3600/(((3600/(B4*12))*60)+((3600/(C4*12))*10)))*A11*5)))+((A4*12*A12)))/1000000).toFixed(2);


return `${moneyShimmeringLightTunic}M`; 
}

function updateShimmeringLightTunic(data) {
const ShimmeringLightTunicMoney = calculateShimmeringLightTunic(data); 
document.getElementById('shimmering-light-tunic').innerHTML = ShimmeringLightTunicMoney;
    localStorage.setItem('cached-shimmering-light-tunic', ShimmeringLightTunicMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateShimmeringLightHood(data) {


const A4 = 56; // x in 5 minutes
const B4 = 18; // y in 5 minutes
const C4 = 7; //z in 5 minutes
const A15 = data["Y"]?.Price || 1;
const A18 = data["Z"]?.Price || 1;
const A8 = data["SYNTHESIZER_V3"]?.Price || 1;
const A11 = data["ENCHANTED_MYCELIUM_CUBE"]?.Price || 1;
const A14 = data["SHIMMERING_LIGHT_SLIPPERS"]?.Price || 1;
const A17 = data["SHIMMERING_LIGHT_TROUSERS"]?.Price || 1;
const A20 = data["SHIMMERING_LIGHT_TUNIC"]?.Price || 1;
const A23 = data["SHIMMERING_LIGHT_HOOD"]?.Price || 1;


var moneyShimmeringLightHood = ((((((3600/((3600/(A4*12))*150))*A23)-((3600/((3600/(A4*12))*150))*A11*2)))+((B4*12*A15)+(C4*12*A18)))/1000000).toFixed(2);


return `${moneyShimmeringLightHood}M`; 
}

function updateShimmeringLightHood(data) {
const ShimmeringLightHoodMoney = calculateShimmeringLightHood(data); 
document.getElementById('shimmering-light-hood').innerHTML = ShimmeringLightHoodMoney;
    localStorage.setItem('cached-shimmering-light-hood', ShimmeringLightHoodMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateFlare(data) {


const A2 = 2700; // Kills in 1 hour
const A5 = 5; // Looting
const A8 = data["ENCHANTED_GLOWSTONE_DUST"]?.Price || 1;
const A11 = data["SHINY_PRISM"]?.Price || 1;


var moneyFlare = (((((((A2/3)/100)*((0.1*(1+(A5*0.15)))*100))/10)*A11)-(80*A8*((((A2/3)/100)*((0.1*(1+(A5*0.15)))*100))/10)))/1000000).toFixed(2);


return `${moneyFlare}M`; 
}

function updateFlare(data) {
const FlareMoney = calculateFlare(data); 
document.getElementById('flare').innerHTML = FlareMoney;
    localStorage.setItem('cached-flare', FlareMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateGold(data) {



const A10 = 2847; // Enchanted gold in 5 minutes
const A13 = 0; // Enchanted gold Block in 5 minutes
const A4 = data["ENCHANTED_GOLD"]?.Price || 1;
const A7 = data["ENCHANTED_GOLD_BLOCK"]?.Price || 1;




var moneyGold = (((A4*A10*12)+(A7*A13*12))/1000000).toFixed(2);




return `${moneyGold}M`; 
}

function updateGold(data) {
const GoldMoney = calculateGold(data); 
document.getElementById('gold').innerHTML = GoldMoney;
    localStorage.setItem('cached-gold', GoldMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateShareCore(data) {


const A4 = 158; // kills in 5 minutes
const A10 = 5; // looting
const A13 = 367; // Magic find
const A7 = data["PET_ITEM_EXP_SHARE_DROP"]?.Price || 1;




var moneyShareCore = (((((A4*12)*0.0001)*((1+(A13/100))*(1+((A10*15)/100))))*A7)/1000000).toFixed(2);





return `${moneyShareCore}M`; 
}

function updateShareCore(data) {
const ShareCoreMoney = calculateShareCore(data); 
document.getElementById('exp-share-core').innerHTML = ShareCoreMoney;
    localStorage.setItem('cached-exp-share-core', ShareCoreMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateNetherWart(data) {



const A10 = 1637; // Enchanted nether wart in 5 minutes
const A13 = 0; // Mutant netherwart in 5 minutes
const A4 = data["ENCHANTED_NETHER_STALK"]?.Price || 1;
const A7 = data["MUTANT_NETHER_STALK"]?.Price || 1;





var moneyNetherWart = (((A4*A10*12)+(A7*A13*12))/1000000).toFixed(2);




return `${moneyNetherWart}M`; 
}

function updateNetherWart(data) {
const NetherWartMoney = calculateNetherWart(data); 
document.getElementById('nether-wart').innerHTML = NetherWartMoney;
    localStorage.setItem('cached-nether-wart', NetherWartMoney); 
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateCactus(data) {


const A10 = 1637; // Enchanted cactus green in 5 minutes
const A13 = 0; // Enchanted cactus in 5 minutes
const A4 = data["ENCHANTED_CACTUS_GREEN"]?.Price || 1;
const A7 = data["ENCHANTED_CACTUS"]?.Price || 1;





var moneyCactus = (((A4*A10*12)+(A7*A13*12))/1000000).toFixed(2);





return `${moneyCactus}M`; 
}

function updateCactus(data) {
const CactusMoney = calculateCactus(data); 
document.getElementById('cactus').innerHTML = CactusMoney;
    localStorage.setItem('cached-cactus', CactusMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateCarrot(data) {


const A4 = 2013; // Enchanted carrot in 5 minutes
const A7 = data["ENCHANTED_CARROT"]?.Price || 1;


var moneyCarrot = ((A4*12*A7)/1000000).toFixed(2);


return `${moneyCarrot}M`; 
}

function updateCarrot(data) {
const CarrotMoney = calculateCarrot(data); 
document.getElementById('carrot').innerHTML = CarrotMoney;
    localStorage.setItem('cached-carrot', CarrotMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateSugarCane(data) {


const A10 = 1277; // Enchanted sugar in 5 minutes
const A13 = 0; // Enchanted sugar cane in 5 minutes
const A4 = data["ENCHANTED_SUGAR"]?.Price || 1;
const A7 = data["ENCHANTED_SUGAR_CANE"]?.Price || 1;


var moneySugarCane = (((A4*A10*12)+(A7*A13*12))/1000000).toFixed(2);

return `${moneySugarCane}M`; 
}

function updateSugarCane(data) {
const SugarCaneMoney = calculateSugarCane(data); 
document.getElementById('sugar-cane').innerHTML = SugarCaneMoney;
    localStorage.setItem('cached-sugar-cane', SugarCaneMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMelon(data) {


const A10 = 3252; // Enchanted melon in 5 minutes
const A13 = 2; // Enchanted melon block in 5 minutes
const A4 = data["ENCHANTED_MELON"]?.Price || 1;
const A7 = data["ENCHANTED_MELON_BLOCK"]?.Price || 1;


var moneyMelon = (((A4*A10*12)+(A7*A13*12))/1000000).toFixed(2);

return `${moneyMelon}M`; 
}

function updateMelon(data) {
const MelonMoney = calculateMelon(data); 
document.getElementById('melon').innerHTML = MelonMoney;
    localStorage.setItem('cached-melon', MelonMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculatePumpkin(data) {


const A10 = 741; // Enchanted pumpkin in 5 minutes
const A13 = 0; // Enchanted pumpkin block in 5 minutes
const A4 = data["ENCHANTED_PUMPKIN"]?.Price || 1;
const A7 = data["POLISHED_PUMPKIN"]?.Price || 1;


var moneyPumpkin = (((A4*A10*12)+(A7*A13*12))/1000000).toFixed(2);

return `${moneyPumpkin}M`; 
}

function updatePumpkin(data) {
const PumpkinMoney = calculatePumpkin(data); 
document.getElementById('pumpkin').innerHTML = PumpkinMoney;
    localStorage.setItem('cached-pumpkin', PumpkinMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateCocoa(data) {


const A10 = 1888; // Enchanted cocoa in 5 minutes
const A4 = data["ENCHANTED_COCOA"]?.Price || 1;


var moneyCocoa = (((A4*A10*12))/1000000).toFixed(2);

return `${moneyCocoa}M`; 
}

function updateCocoa(data) {
const CocoaMoney = calculateCocoa(data); 
document.getElementById('cocoa-bean').innerHTML = CocoaMoney;
    localStorage.setItem('cached-cocoa-bean', CocoaMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMushrooms(data) {


const A16 = 511; // Enchanted red mushroom in 5 minutes
const A22 = 0; // Enchanted red mushroom block in 5 minutes
const A19 = 15; // Enchanted brown mushroom in 5 minutes
const A25 = 0; // Enchanted brown mushroom block in 5 minutes
const A4 = data["ENCHANTED_RED_MUSHROOM"]?.Price || 1;
const A7 = data["ENCHANTED_BROWN_MUSHROOM"]?.Price || 1;
const A10 = data["ENCHANTED_HUGE_MUSHROOM_2"]?.Price || 1;
const A13 = data["ENCHANTED_HUGE_MUSHROOM_1"]?.Price || 1;


var moneyMushrooms = (((A4*A16*12)+(A7*A19*12)+(A10*A22*12)+(A13*A25*12))/1000000).toFixed(2);



return `${moneyMushrooms}M`; 
}

function updateMushrooms(data) {
const MushroomsMoney = calculateMushrooms(data); 
document.getElementById('mushrooms').innerHTML = MushroomsMoney;
    localStorage.setItem('cached-mushrooms', MushroomsMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculatePotato(data) {


const A10 = 1950; // Enchanted potato in 5 minutes
const A13 = 0; // Enchanted baked potato in 5 minutes
const A4 = data["ENCHANTED_POTATO"]?.Price || 1;
const A7 = data["ENCHANTED_BAKED_POTATO"]?.Price || 1;


var moneyPotato = (((A4*A10*12)+(A7*A13*12))/1000000).toFixed(2);

return `${moneyPotato}M`; 
}

function updatePotato(data) {
const PotatoMoney = calculatePotato(data); 
document.getElementById('potato').innerHTML = PotatoMoney;
    localStorage.setItem('cached-potato', PotatoMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateWheat(data) {


const A4 = 651; // Enchanted wheat in 5 minutes
const A7 = 901; // Enchanted seeds in 5 minutes
const A10 = data["ENCHANTED_WHEAT"]?.Price || 1;
const A13 = data["ENCHANTED_SEEDS"]?.Price || 1;


var moneyWheat = (((A4*A10*12)+(A7*A13*12))/1000000).toFixed(2);


return `${moneyWheat}M`; 
}

function updateWheat(data) {
const WheatMoney = calculateWheat(data); 
document.getElementById('wheat').innerHTML = WheatMoney;
    localStorage.setItem('cached-wheat', WheatMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateObsidian(data) {


const A4 = 767; // Enchanted obsidian in 5 minutes
const A7 = data["ENCHANTED_OBSIDIAN"]?.Price || 1;


var moneyObsidian = ((A4*12*A7)/1000000).toFixed(2);


return `${moneyObsidian}M`; 
}

function updateObsidian(data) {
const ObsidianMoney = calculateObsidian(data); 
document.getElementById('obsidian').innerHTML = ObsidianMoney;
    localStorage.setItem('cached-obsidian', ObsidianMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMiteGel(data) {


const A4 = 34.5; // endstone nodes in 5 minutes   (69 totaL 5 min)
const A7 = 34.5; // obsidiana nodes in 5 minutes
const A10 = data["MITE_GEL"]?.Price || 1;
const A13 = data["ENCHANTED_ENDSTONE"]?.Price || 1;
const A16 = data["ENDER_STONE"]?.Price || 1;
const A19 = data["ENCHANTED_ENDER_PEARL"]?.Price || 1;
const A22 = data["ENDER_PEARL"]?.Price || 1;
const A25 = data["GRAND_EXP_BOTTLE"]?.Price || 1;
var A28 = 10000;
const A31 = data["END_STONE_SHULKER"]?.Price || 1;
const A34 = data["ENDSTONE_GEODE"]?.Price || 1;
const A37 = data["SHRIMP_THE_FISH"]?.Price || 1;
const A40 = data["TITANIC_EXP_BOTTLE"]?.Price || 1;
const A43 = 0;
const A46 = data["ENCHANTED_OBSIDIAN"]?.Price || 1;
const A49 = data["OBSIDIAN"]?.Price || 1;
const N24 = 5; //Looting



var moneyMiteGel = (((((((A4*12)/100)*33.21)*(3*A10*(1+((N24*15)/100))))+((((A4*12)/100)*37.95)*A13)+((((A4*12)/100)*0.19)*A16*2)+((((A4*12)/100)*10.44)*A19*2)+((((A4*12)/100)*0.09)*A22*2)+((((A4*12)/100)*11.39)*A25)+((((A4*12)/100)*3.32)*A28)+((((A4*12)/100)*1.9)*A31)+((((A4*12)/100)*1.42)*A34)+((((A4*12)/100)*0.09)*A37))+((((A7*12)/100)*30.54)*(3*A10*(1+((N24*15)/100))))+((((A7*12)/100)*34.9)*A46)+((((A7*12)/100)*0.26)*A49*2)+((((A7*12)/100)*6.98)*A19*3)+((((A7*12)/100)*0.09)*A22*5)+((((A7*12)/100)*13.96)*A25*2)+((((A7*12)/100)*6.11)*A25*5)+((((A7*12)/100)*1.31)*A40)+((((A7*12)/100)*3.05)*A28)+((((A7*12)/100)*2.62)*A43)+((((A7*12)/100)*0.17)*A37))/1000000).toFixed(2);





return `${moneyMiteGel}M`; 
}

function updateMiteGel(data) {
const MiteGelMoney = calculateMiteGel(data); 
document.getElementById('mite-gel').innerHTML = MiteGelMoney;
    localStorage.setItem('cached-mite-gel', MiteGelMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateEndermanPet(data) {


const C4 = 0; // Voidling fanatic kills in 5 minutes 
const A4 = 516; // enderman kills in 5 minutes
const A31 = 106; // pet luck
const C31 = 5; // looting
const A34 = 341; // magic find
const C34 = 0; // luck
const C7 = data["ENDER_PEARL"]?.Price || 1;
const C10 = data["ENCHANTED_ENDER_PEARL"]?.Price || 1;
const A7 = data["ENDERMAN;4"]?.Price || 1;
const A10 = data["ENDERMAN;3"]?.Price || 1;
const A13 = data["ENDERMAN;2"]?.Price || 1;
var A16 = 0;
var A19 = 0;
var A22 = 0;
var A25 = 0;
var A28 = 0;
const A37 = data["FINAL_DESTINATION_BOOTS"]?.Price || 1;
const A40 = data["FINAL_DESTINATION_LEGGINGS"]?.Price || 1;
const A43 = data["FINAL_DESTINATION_CHESTPLATE"]?.Price || 1;
const A46 = data["FINAL_DESTINATION_HELMET"]?.Price || 1;
const E37 = data["FINAL_DESTINATION_BOOTS;10K"]?.Price || 1;
const E40 = data["FINAL_DESTINATION_LEGGINGS;10K"]?.Price || 1;
const E43 = data["FINAL_DESTINATION_CHESTPLATE;10K"]?.Price || 1;
const E46 = data["FINAL_DESTINATION_HELMET;10K"]?.Price || 1;


var moneyEndermanPet = (((((C4*12*((4*C7*(1+(0.15*C31)))+(0.75*C7*(1+(0.15*C31)))))+((C4*12*(0.01*(1+(0.15*C31))*(1+(A34/100))))*C10)+(((C4*12)/142857)*((1+(0.15*C31))*(1+((A34+A31)/100)))*A7)+(((((C4*12)/8333)*(1+(0.15*C31))*(1+((A34+A31)/100))))*A10))+((((((A4*12)/166667)*(1+(0.15*C31))*(1+((A34+A31)/100))))*A7)+(((((A4*12)/10000)*(1+(0.15*C31))*(1+((A34+A31)/100))))*A10)+(((((A4*12)/1000)*(1+(0.15*C31))*(1+((A34+A31)/100))))*A13)+(((A4*12*0.01)*(1+(0.15*C31))*(1+(A34/100))+(1+(0.05*C34)))*A16)+(((A4*12*0.01)*(1+(0.15*C31))*(1+(A34/100))+(1+(0.05*C34)))*A19)+(((A4*12*0.01)*(1+(0.15*C31))*(1+(A34/100))+(1+(0.05*C34)))*A22)+(((A4*12*0.01)*(1+(0.15*C31))*(1+(A34/100))+(1+(0.05*C34)))*A25)+(((A4*12*0.005)*(1+(0.15*C31))*(1+(A34/100))+(1+(0.05*C34)))*A28))))/1000000).toFixed(2);





return `${moneyEndermanPet}M`; 
}

function updateEndermanPet(data) {
const EndermanPetMoney = calculateEndermanPet(data); 
document.getElementById('enderman-pet').innerHTML = EndermanPetMoney;
    localStorage.setItem('cached-enderman-pet', EndermanPetMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateEndermanPetWithFinalDestination(data) {


const C4 = 0; // Voidling fanatic kills in 5 minutes 
const A4 = 516; // enderman kills in 5 minutes
const A31 = 106; // pet luck
const C31 = 5; // looting
const A34 = 341; // magic find
const C34 = 0; // luck
const C7 = data["ENDER_PEARL"]?.Price || 1;
const C10 = data["ENCHANTED_ENDER_PEARL"]?.Price || 1;
const A7 = data["ENDERMAN;4"]?.Price || 1;
const A10 = data["ENDERMAN;3"]?.Price || 1;
const A13 = data["ENDERMAN;2"]?.Price || 1;
var A16 = 0;
var A19 = 0;
var A22 = 0;
var A25 = 0;
var A28 = 0;
const A37 = data["FINAL_DESTINATION_BOOTS"]?.Price || 1;
const A40 = data["FINAL_DESTINATION_LEGGINGS"]?.Price || 1;
const A43 = data["FINAL_DESTINATION_CHESTPLATE"]?.Price || 1;
const A46 = data["FINAL_DESTINATION_HELMET"]?.Price || 1;
const E37 = data["FINAL_DESTINATION_BOOTS;10K"]?.Price || 1;
const E40 = data["FINAL_DESTINATION_LEGGINGS;10K"]?.Price || 1;
const E43 = data["FINAL_DESTINATION_CHESTPLATE;10K"]?.Price || 1;
const E46 = data["FINAL_DESTINATION_HELMET;10K"]?.Price || 1;


var moneyEndermanPetWithFinalDestination = (((((C4*12*((4*C7*(1+(0.15*C31)))+(0.75*C7*(1+(0.15*C31)))))+((C4*12*(0.01*(1+(0.15*C31))*(1+(A34/100))))*C10)+(((C4*12)/142857)*((1+(0.15*C31))*(1+((A34+A31)/100)))*A7)+(((((C4*12)/8333)*(1+(0.15*C31))*(1+((A34+A31)/100))))*A10))+((((((A4*12)/166667)*(1+(0.15*C31))*(1+((A34+A31)/100))))*A7)+(((((A4*12)/10000)*(1+(0.15*C31))*(1+((A34+A31)/100))))*A10)+(((((A4*12)/1000)*(1+(0.15*C31))*(1+((A34+A31)/100))))*A13)+(((A4*12*0.01)*(1+(0.15*C31))*(1+(A34/100))+(1+(0.05*C34)))*A16)+(((A4*12*0.01)*(1+(0.15*C31))*(1+(A34/100))+(1+(0.05*C34)))*A19)+(((A4*12*0.01)*(1+(0.15*C31))*(1+(A34/100))+(1+(0.05*C34)))*A22)+(((A4*12*0.01)*(1+(0.15*C31))*(1+(A34/100))+(1+(0.05*C34)))*A25)+(((A4*12*0.005)*(1+(0.15*C31))*(1+(A34/100))+(1+(0.05*C34)))*A28)))+(((E37-A37)+(E40-A40)+(E43-A43)+(E46-A46))/(10000/((A4*12)+(C4*12)))))/1000000).toFixed(2);





return `${moneyEndermanPetWithFinalDestination}M`; 
}

function updateEndermanPetWithFinalDestination(data) {
const EndermanPetWithFinalDestinationMoney = calculateEndermanPetWithFinalDestination(data); 
document.getElementById('enderman-pet-with-final-destination').innerHTML = EndermanPetWithFinalDestinationMoney;
    localStorage.setItem('cached-enderman-pet-with-final-destination', EndermanPetWithFinalDestinationMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateReflection(data) {


const A3 = 51; // shadow crux in 5 minutes
const A6 = 35714; // motes in 5 minutes
const A9 = data["ENCHANTMENT_REFLECTION_5"]?.Price || 1;


var moneyReflection = (((((((A3*12)/16)/16)*A9)/(60+(((((A3*12)/16)*5000)/A6)*5)))*60)/1000000).toFixed(2);

return `${moneyReflection}M`; 
}

function updateReflection(data) {
const ReflectionMoney = calculateReflection(data); 
document.getElementById('reflection').innerHTML = ReflectionMoney;
    localStorage.setItem('cached-reflection', ReflectionMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBerberisBunch(data) {


const A3 = 142; // Wilted Berberis in 5 minutes
const A6 = data["WILTED_BERBERIS_BUNCH"]?.Price || 1;
const A9 = data["BERBERIS_FUEL_INJECTOR"]?.Price || 1;


var moneyBerberisBunch = ((((A3*12)/20)*A6)/1000000).toFixed(2);

return `${moneyBerberisBunch}M`; 
}

function updateBerberisBunch(data) {
const BerberisBunchMoney = calculateBerberisBunch(data); 
document.getElementById('berberisBunch').innerHTML = BerberisBunchMoney;
    localStorage.setItem('cached-berberisBunch', BerberisBunchMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateFuelInjector(data) {


const A3 = 142; // Wilted Berberis in 5 minutes
const A6 = data["WILTED_BERBERIS_BUNCH"]?.Price || 1;
const A9 = data["BERBERIS_FUEL_INJECTOR"]?.Price || 1;

var moneyFuelInjector = ((((A3*12)/336)*A9)/1000000).toFixed(2);


return `${moneyFuelInjector}M`; 
}

function updateFuelInjector(data) {
const FuelInjectorMoney = calculateFuelInjector(data); 
document.getElementById('fuel-injector').innerHTML = FuelInjectorMoney;
    localStorage.setItem('cached-fuel-injector', FuelInjectorMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateCaducousFeeder(data) {


const A3 = 109; // Caducous stem in 5 minutes
const A6 = data["CADUCOUS_FEEDER"]?.Price || 1;


var moneyCaducousFeeder = ((((A3*12)/448)*A6)/1000000).toFixed(2);


return `${moneyCaducousFeeder}M`; 
}

function updateCaducousFeeder(data) {
const CaducousFeederMoney = calculateCaducousFeeder(data); 
document.getElementById('caducous-feeder').innerHTML = CaducousFeederMoney;
    localStorage.setItem('cached-caducous-feeder', CaducousFeederMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateEmptyChumCapBucket(data) {


const A3 = 41; // agaricus cap in 5 minutes
const A6 = 35714; // motes in 5 minutes
const A9 = data["EMPTY_CHUMCAP_BUCKET"]?.Price || 1;


var moneyEmptyChumCapBucket = (((((((A3*12)/8)*A9)/(60+(((((((A3*12)/8)*1000)/A6)*5)))))*60)/1000000)).toFixed(2);


return `${moneyEmptyChumCapBucket}M`; 
}

function updateEmptyChumCapBucket(data) {
const EmptyChumCapBucketMoney = calculateEmptyChumCapBucket(data); 
document.getElementById('chum-cap-bucket').innerHTML = EmptyChumCapBucketMoney;
    localStorage.setItem('cached-chum-cap-bucket', EmptyChumCapBucketMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateExportableCarrots(data) {


const A3 = 441; // Half-Eaten Carrots in 5 Minutes
const A9 = 27; // Scribe Crux in 5 Minutes
const A12 = 43; // Volt Crux in 5 Minutes
const A6 = data["EXPORTABLE_CARROTS"]?.Price || 1;


var moneyExportableCarrots = (((((((A3*12)/80)/2)*64*A6)/(60+((((((A3*12)/80)/2))/A9)*5)+((((((A3*12)/80)/2))/A12)*5)))*60)/1000000).toFixed(2);


return `${moneyExportableCarrots}M`; 
}

function updateExportableCarrots(data) {
const ExportableCarrotsMoney = calculateExportableCarrots(data); 
document.getElementById('exportable-carrots').innerHTML = ExportableCarrotsMoney;
    localStorage.setItem('cached-exportable-carrots', ExportableCarrotsMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBluetoothRing(data) {


const A3 = 22; // Living Metal Heart in 5 minutes
const A12 = 62; // Frosty Crux in 5 minutes
const A6 = data["BLUETOOTH_RING"]?.Price || 1;
const A9 = data["POLARVOID_BOOK"]?.Price || 1;



var moneyBluetoothRing = ((((A3*12)/32)*A6)/1000000).toFixed(2);


return `${moneyBluetoothRing}M`; 
}

function updateBluetoothRing(data) {
const BluetoothRingMoney = calculateBluetoothRing(data); 
document.getElementById('bluetooth-ring').innerHTML = BluetoothRingMoney;
    localStorage.setItem('cached-bluetooth-ring', BluetoothRingMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculatePolarvoid(data) {


const A3 = 22; // Living Metal Heart in 5 minutes
const A12 = 62; // Frosty Crux in 5 minutes
const A6 = data["BLUETOOTH_RING"]?.Price || 1;
const A9 = data["POLARVOID_BOOK"]?.Price || 1;

var moneyPolarvoid = ((((((A3*12)/20)*A9)/(60+((((((A3*12)/20))*3)/A12)*5)))*60)/1000000).toFixed(2);

return `${moneyPolarvoid}M`; 
}

function updatePolarvoid(data) {
const PolarvoidMoney = calculatePolarvoid(data); 
document.getElementById('polarvoid').innerHTML = PolarvoidMoney;
    localStorage.setItem('cached-polarvoid', PolarvoidMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateWeirderTuba(data) {


const A3 = 22; // Living Metal Heart in 5 Minutes
const A6 = 10; // Time to kill Bact
const A9 = 2.5; // Time to kill Supreme Leech
const A12 = 4; // Time to kill Riftstalker Bloodfiend
const C12 = 52; // Riftstalker Bloodfiend Tier (was A15)
const A15 = 62; // Frosty Crux in 5 minutes (was A12)
const A18 = 53; // Volt Crux in 5 minutes
const A21 = 32; // Scribe Crux in 5 minutes (was A18)
const A23 = 57; // Shadow Crux in 5 minutes (was A24)
const A27 = 53; // Shy Crux in 5 minutes
const A30 = 60; // Splatter Crux in 5 minutes
const A33 = data["WEIRD_TUBA"].Price || 0;
const A36 = data["WEIRDER_TUBA"].Price || 0;

var moneyWeirderTuba = (((((((A3 * 12) / 16) * A36) - (((A3 * 12) / 16) * A33)) /
((60 + ((((A3 * 12) / 16) * (A6 / 4))) + ((((A3 * 12) / 16) * (A9 / 4))) +
((((A3 * 12) / 16) * 64) / C12) * A12 + ((((A3 * 12) / 16) * 2) / A15) * 5 +
((((A3 * 12) / 16) * 2) / A18) * 5 + ((((A3 * 12) / 16) * 2) / A21) * 5 +
((((A3 * 12) / 16) * 2) / A23) * 5 + ((((A3 * 12) / 16) * 2) / A27) * 5 +
((((A3 * 12) / 16) * 2) / A30) * 5)) * 60) / 1000000)).toFixed(2);


return `${moneyWeirderTuba}M`; 
}

function updateWeirderTuba(data) {
const WeirderTubaMoney = calculateWeirderTuba(data); 
document.getElementById('weirder-tuba').innerHTML = WeirderTubaMoney;
    localStorage.setItem('cached-weirder-tuba', WeirderTubaMoney); 
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateCoal(data) {


const A4 = 981; // Enchanted coal in 5 minutes
const A7 = data["ENCHANTED_COAL"]?.Price || 1;


var moneyCoal = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyCoal}M`; 
}

function updateCoal(data) {
const CoalMoney = calculateCoal(data); 
document.getElementById('coal').innerHTML = CoalMoney;
    localStorage.setItem('cached-coal', CoalMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateLapis(data) {


const A4 = 1451; // Enchanted lapis in 5 minutes
const A7 = data["ENCHANTED_LAPIS_LAZULI"]?.Price || 1;


var moneyLapis = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyLapis}M`; 
}

function updateLapis(data) {
const LapisMoney = calculateLapis(data); 
document.getElementById('lapis').innerHTML = LapisMoney;
    localStorage.setItem('cached-lapis', LapisMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateDiamonds(data) {


const A4 = 1117; // Enchanted Diamond in 5 minutes
const A7 = data["ENCHANTED_DIAMOND"]?.Price || 1;

var moneyDiamonds = ((A4*12*A7)/1000000).toFixed(2);


return `${moneyDiamonds}M`; 
}

function updateDiamonds(data) {
const DiamondsMoney = calculateDiamonds(data); 
document.getElementById('diamonds').innerHTML = DiamondsMoney;
    localStorage.setItem('cached-diamonds', DiamondsMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateRedstone(data) {


const A4 = 1373; // Enchanted Redstone in 5 minutes
const A7 = data["ENCHANTED_REDSTONE"]?.Price || 1;

var moneyRedstone = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyRedstone}M`; 
}

function updateRedstone(data) {
const RedstoneMoney = calculateRedstone(data); 
document.getElementById('redstone').innerHTML = RedstoneMoney;
    localStorage.setItem('cached-redstone', RedstoneMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateIron(data) {


const A4 = 1075; // Enchanted iron in 5 minutes
const A7 = data["ENCHANTED_IRON"]?.Price || 1;


var moneyIron = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyIron}M`; 
}

function updateIron(data) {
const IronMoney = calculateIron(data); 
document.getElementById('iron').innerHTML = IronMoney;
    localStorage.setItem('cached-iron', IronMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateEmerald(data) {


const A4 = 1297; // Enchanted Emerald in 5 minutes
const A7 = data["ENCHANTED_EMERALD"]?.Price || 1;

var moneyEmerald = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyEmerald}M`; 
}

function updateEmerald(data) {
const EmeraldMoney = calculateEmerald(data); 
document.getElementById('emerald').innerHTML = EmeraldMoney;
    localStorage.setItem('cached-emerald', EmeraldMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateQuartz(data) {


const A4 = 1117; // Enchanted Quartz in 5 minutes
const A7 = data["ENCHANTED_QUARTZ"]?.Price || 1;


var moneyQuartz = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyQuartz}M`; 
}

function updateQuartz(data) {
const QuartzMoney = calculateQuartz(data); 
document.getElementById('quartz').innerHTML = QuartzMoney;
    localStorage.setItem('cached-quartz', QuartzMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateRedSand(data) {


const A4 = 1244; // Enchanted Red Sand in 5 minutes
const A7 = data["ENCHANTED_RED_SAND"]?.Price || 1;


var moneyRedSand = ((A4*12*A7)/1000000).toFixed(2);


return `${moneyRedSand}M`; 
}

function updateRedSand(data) {
const RedSandMoney = calculateRedSand(data); 
document.getElementById('red-sand').innerHTML = RedSandMoney;
    localStorage.setItem('cached-red-sand', RedSandMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMycelium(data) {


const A4 = 1418; // Enchanted Mycelium in 5 minutes
const A7 = data["ENCHANTED_MYCELIUM"]?.Price || 1;


var moneyMycelium = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyMycelium}M`; 
}

function updateMycelium(data) {
const MyceliumMoney = calculateMycelium(data); 
document.getElementById('mycelium').innerHTML = MyceliumMoney;
    localStorage.setItem('cached-mycelium', MyceliumMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateSand(data) {


const A4 = 1635; // Enchanted Sand in 5 minutes
const A7 = data["ENCHANTED_SAND"]?.Price || 1;


var moneySand = ((A4*12*A7)/1000000).toFixed(2);

return `${moneySand}M`; 
}

function updateSand(data) {
const SandMoney = calculateSand(data); 
document.getElementById('sand').innerHTML = SandMoney;
    localStorage.setItem('cached-sand', SandMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateOak(data) {


const A4 = 63; // Enchanted Oak Log in 5 minutes
const A7 = data["ENCHANTED_OAK_LOG"]?.Price || 1;


var moneyOak = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyOak}M`; 
}

function updateOak(data) {
const MoneyOak = calculateOak(data); 
document.getElementById('oak').innerHTML = MoneyOak;
    localStorage.setItem('cached-oak', MoneyOak); 
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateSpruce(data) {


const A4 = 46; // Enchanted Spruce Log in 5 minutes
const A7 = data["ENCHANTED_SPRUCE_LOG"]?.Price || 1;


var moneySpruce = ((A4*12*A7)/1000000).toFixed(2);

return `${moneySpruce}M`; 
}

function updateSpruce(data) {
const SpruceMoney = calculateSpruce(data); 
document.getElementById('spruce').innerHTML = SpruceMoney;
    localStorage.setItem('cached-spruce', SpruceMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBirch(data) {


const A4 = 49; // Enchanted Birch Log in 5 minutes
const A7 = data["ENCHANTED_BIRCH_LOG"]?.Price || 1;


var moneyBirch = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyBirch}M`; 
}

function updateBirch(data) {
const BirchMoney = calculateBirch(data); 
document.getElementById('birch').innerHTML = BirchMoney;
    localStorage.setItem('cached-birch', BirchMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateDarkOak(data) {


const A4 = 88; // Enchanted Dark Oak Log in 5 minutes
const A7 = data["ENCHANTED_DARK_OAK_LOG"]?.Price || 1;


var moneyDarkOak = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyDarkOak}M`; 
}

function updateDarkOak(data) {
const DarkOakMoney = calculateDarkOak(data); 
document.getElementById('dark-oak').innerHTML = DarkOakMoney;
    localStorage.setItem('cached-dark-oak', DarkOakMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateAcacia(data) {


const A4 = 87; // Enchanted Acacia Log in 5 minutes
const A7 = data["ENCHANTED_ACACIA_LOG"]?.Price || 1;


var moneyAcacia = ((A4*12*A7)/1000000).toFixed(2);



return `${moneyAcacia}M`; 
}

function updateAcacia(data) {
const AcaciaMoney = calculateAcacia(data); 
document.getElementById('acacia').innerHTML = AcaciaMoney;
    localStorage.setItem('cached-acacia', AcaciaMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateJungle(data) {


const A4 = 64; // Enchanted Jungle Log in 5 minutes
const A7 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1;


var moneyJungle = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyJungle}M`; 
}

function updateJungle(data) {
const JungleMoney = calculateJungle(data); 
document.getElementById('jungle').innerHTML = JungleMoney;
    localStorage.setItem('cached-jungle', JungleMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateAmber(data) {


const A4 = 67; // Fine Amber in 5 minutes
const A7 = data["FINE_AMBER_GEM"]?.Price || 1;

var moneyAmber = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyAmber}M`; 
}

function updateAmber(data) {
const AmberMoney = calculateAmber(data); 
document.getElementById('amber').innerHTML = AmberMoney;
    localStorage.setItem('cached-amber', AmberMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateTopaz(data) {


const A4 = 43; // fine topaz in 5 minutes
const A7 = data["FINE_TOPAZ_GEM"]?.Price || 1;


var moneyTopaz = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyTopaz}M`; 
}

function updateTopaz(data) {
const TopazMoney = calculateTopaz(data); 
document.getElementById('topaz').innerHTML = TopazMoney;
    localStorage.setItem('cached-topaz', TopazMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateSapphire(data) {


const A4 = 74; // Fine Sapphire in 5 minutes
const A7 = data["FINE_SAPPHIRE_GEM"]?.Price || 1;


var moneySapphire = ((A4*12*A7)/1000000).toFixed(2);

return `${moneySapphire}M`; 
}

function updateSapphire(data) {
const SapphireMoney = calculateSapphire(data); 
document.getElementById('sapphire').innerHTML = SapphireMoney;
    localStorage.setItem('cached-sapphire', SapphireMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateAmethyst(data) {


const A4 = 59; // fine amethyst in 5 minutes
const A7 = data["FINE_AMETHYST_GEM"]?.Price || 1;


var moneyAmethyst = ((A4*12*A7)/1000000).toFixed(2);


return `${moneyAmethyst}M`; 
}

function updateAmethyst(data) {
const AmethystMoney = calculateAmethyst(data); 
document.getElementById('amethyst').innerHTML = AmethystMoney;
    localStorage.setItem('cached-amethyst', AmethystMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateJasper(data) {


const A4 = 61; // Fine Jasper in 5 minutes
const A7 = data["FINE_JASPER_GEM"]?.Price || 1;


var moneyJasper = ((A4*12*A7)/1000000).toFixed(2);


return `${moneyJasper}M`; 
}

function updateJasper(data) {
const JasperMoney = calculateJasper(data); 
document.getElementById('jasper').innerHTML = JasperMoney;
    localStorage.setItem('cached-jasper', JasperMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateRuby(data) {


const A4 = 86; // Fine Ruby in 5 minutes
const A7 = data["FINE_RUBY_GEM"]?.Price || 1;


var moneyRuby = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyRuby}M`; 
}

function updateRuby(data) {
const RubyMoney = calculateRuby(data); 
document.getElementById('Ruby').innerHTML = RubyMoney;
    localStorage.setItem('cached-Ruby', RubyMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateJade(data) {


const A4 = 78; // fine jade in 5 minutes
const A7 = data["FINE_JADE_GEM"]?.Price || 1;


var moneyJade = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyJade}M`; 
}

function updateJade(data) {
const JadeMoney = calculateJade(data); 
document.getElementById('jade').innerHTML = JadeMoney;
    localStorage.setItem('cached-jade', JadeMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateOpal(data) {


const A4 = 58; // fine opal in 5 minutes
const A7 = data["FINE_OPAL_GEM"]?.Price || 1;


var moneyOpal = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyOpal}M`; 
}

function updateOpal(data) {
const OpalMoney = calculateOpal(data); 
document.getElementById('opal').innerHTML = OpalMoney;
    localStorage.setItem('cached-opal', OpalMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateAquamarine(data) {


const A4 = 52; // fine aquamarine in 5 minutes
const A7 = data["FINE_AQUAMARINE_GEM"]?.Price || 1;


var moneyAquamarine = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyAquamarine}M`; 
}

function updateAquamarine(data) {
const AquamarineMoney = calculateAquamarine(data); 
document.getElementById('aquamarine').innerHTML = AquamarineMoney;
    localStorage.setItem('cached-aquamarine', AquamarineMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateCitrine(data) {


const A4 = 45; // Fine Citrine in 5 minutes
const A7 = data["FINE_CITRINE_GEM"]?.Price || 1;


var moneyCitrine = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyCitrine}M`; 
}

function updateCitrine(data) {
const CitrineMoney = calculateCitrine(data); 
document.getElementById('citrine').innerHTML = CitrineMoney;
    localStorage.setItem('cached-citrine', CitrineMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateOnyx(data) {


const A4 = 48; // Fine Onyx in 5 minutes
const A7 = data["FINE_ONYX_GEM"]?.Price || 1;

var moneyOnyx = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyOnyx}M`; 
}

function updateOnyx(data) {
const OnyxMoney = calculateOnyx(data); 
document.getElementById('onyx').innerHTML = OnyxMoney;
    localStorage.setItem('cached-onyx', OnyxMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculatePeridot(data) {


const A4 = 49; // fine peridot in 5 minutes
const A7 = data["FINE_PERIDOT_GEM"]?.Price || 1;


var moneyPeridot = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyPeridot}M`; 
}

function updatePeridot(data) {
const PeridotMoney = calculatePeridot(data); 
document.getElementById('peridot').innerHTML = PeridotMoney;
    localStorage.setItem('cached-peridot', PeridotMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateTungsten(data) {


const A4 = 172; // Enchanted Tungsten in 5 minutes
const A7 = data["ENCHANTED_TUNGSTEN"]?.Price || 1;

var moneyTungsten = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyTungsten}M`; 
}

function updateTungsten(data) {
const TungstenMoney = calculateTungsten(data); 
document.getElementById('tungsten').innerHTML = TungstenMoney;
    localStorage.setItem('cached-tungsten', TungstenMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateUmber(data) {


const A4 = 160; // Enchanted Umber in 5 minutes
const A7 = data["ENCHANTED_UMBER"]?.Price || 1;

var moneyUmber = ((A4*12*A7)/1000000).toFixed(2);


return `${moneyUmber}M`; 
}

function updateUmber(data) {
const UmberMoney = calculateUmber(data); 
document.getElementById('umber').innerHTML = UmberMoney;
    localStorage.setItem('cached-umber', UmberMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateGlacite(data) {


const A4 = 168; // Enchanted Glacite in 5 minutes
const A7 = data["ENCHANTED_GLACITE"]?.Price || 1;

var moneyGlacite = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyGlacite}M`; 
}

function updateGlacite(data) {
const GlaciteMoney = calculateGlacite(data); 
document.getElementById('glacite').innerHTML = GlaciteMoney;
    localStorage.setItem('cached-glacite', GlaciteMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateGravel(data) {


const A4 = 123; // Enchanted Flint in 5 minutes
const A7 = data["ENCHANTED_FLINT"]?.Price || 1;

var moneyGravel = ((A4*12*A7)/1000000).toFixed(2);

return `${moneyGravel}M`; 
}

function updateGravel(data) {
const GravelMoney = calculateGravel(data); 
document.getElementById('gravel').innerHTML = GravelMoney;
    localStorage.setItem('cached-gravel', GravelMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculatePowderPrecursorCity(data) {


const A4 = 208; // Treasure Chests in 5 minutes
const A7 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1;
const A10 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1;
const A13 = data["FINE_SAPPHIRE_GEM"]?.Price || 1;
const A16 = data["FLAWLESS_SAPPHIRE_GEM"]?.Price || 1;
const A19 = data["PREHISTORIC_EGG"]?.Price || 1;
const A22 = data["PICKONIMBUS"]?.Price || 1;
const A25 = data["CONTROL_SWITCH"]?.Price || 1;
const A28 = data["SUPERLITE_MOTOR"]?.Price || 1;
const A31 = data["ROBOTRON_REFLECTOR"]?.Price || 1;
const A34 = data["FTX_3070"]?.Price || 1;
const A37 = data["ELECTRON_TRANSMITTER"]?.Price || 1;
const A40 = data["SYNTHETIC_HEART"]?.Price || 1;
const A43 = data["WISHING_COMPASS"]?.Price || 1;
const A46 = data["ASCENSION_ROPE"]?.Price || 1;
const A49 = data["ROUGH_RUBY_GEM"]?.Price || 1;
const A52 = data["FLAWED_RUBY_GEM"]?.Price || 1;
const A55 = data["ESSENCE_GOLD"]?.Price || 1;
const A58 = data["ESSENCE_DIAMOND"]?.Price || 1;

var moneyPowderPrecursorCity = (((((((((A4*12)/100)*5)/2.72)*8)*A7)+((((((A4*12)/100)*5)/2.72)*16)*A7)+((((((A4*12)/100)*5)/2.72)*24)*A7)+((((((A4*12)/100)*5)/2.72)*40)*A7)+((((((A4*12)/100)*5)/5.52)*1)*A10)+((((((A4*12)/100)*5)/9.61)*2)*A10)+((((((A4*12)/100)*5)/23.42)*4)*A10)+((((((A4*12)/100)*5)/46.45)*7)*A10)+((((((A4*12)/100)*5)/2303.5)*8)*A13)+((((((A4*12)/100)*5)/1151.94)*8)*A13)+((((((A4*12)/100)*5)/2303.5)*1)*A16)+((((((A4*12)/100)*5)/461.01)*1)*A19)+((((((A4*12)/100)*5)/230.7)*1)*A22)+((((((A4*12)/100)*5)/115.54)*1)*A25)+((((((A4*12)/100)*5)/115.54)*1)*A28)+((((((A4*12)/100)*5)/115.54)*1)*A31)+((((((A4*12)/100)*5)/115.54)*1)*A34)+((((((A4*12)/100)*5)/115.54)*1)*A37)+((((((A4*12)/100)*5)/115.54)*1)*A40)+((((((A4*12)/100)*5)/18.81)*3)*A43)+((((((A4*12)/100)*5)/57.96)*1)*A46)+((((((A4*12)/100)*5)/23.42)*16)*A49)+((((((A4*12)/100)*5)/23.42)*32)*A49)+((((((A4*12)/100)*5)/23.42)*48)*A49)+((((((A4*12)/100)*5)/46.45)*1)*A52)+((((((A4*12)/100)*5)/115.54)*2)*A52)+((((((A4*12)/100)*5)/3.48)*1)*A55)+((((((A4*12)/100)*5)/6.54)*2)*A55)+((((((A4*12)/100)*5)/31.09)*3)*A55)+((((((A4*12)/100)*5)/3.48)*1)*A58)+((((((A4*12)/100)*5)/6.54)*2)*A58)+((((((A4*12)/100)*5)/31.09)*3)*A58))+(((((((A4*12)/100)*95)/2.5)*8)*A7)+((((((A4*12)/100)*95)/2.5)*16)*A7)+((((((A4*12)/100)*95)/2.5)*24)*A7)+((((((A4*12)/100)*95)/4.56)*40)*A7)+((((((A4*12)/100)*95)/10.77)*1)*A10)+((((((A4*12)/100)*95)/21.15)*2)*A10)+((((((A4*12)/100)*95)/69.59)*4)*A10)+((((((A4*12)/100)*95)/173.4)*7)*A10)+((((((A4*12)/100)*95)/2076.61)*1)*A13)+((((((A4*12)/100)*95)/415.63)*1)*A19)+((((((A4*12)/100)*95)/17)*3)*A43)+((((((A4*12)/100)*95)/104.2)*1)*A25)+((((((A4*12)/100)*95)/104.2)*1)*A28)+((((((A4*12)/100)*95)/104.2)*1)*A31)+((((((A4*12)/100)*95)/104.2)*1)*A34)+((((((A4*12)/100)*95)/104.2)*1)*A37)+((((((A4*12)/100)*95)/104.2)*1)*A40)+((((((A4*12)/100)*95)/52.29)*1)*A46)+((((((A4*12)/100)*95)/21.15)*8)*A49)+((((((A4*12)/100)*95)/21.15)*16)*A49)+((((((A4*12)/100)*95)/21.15)*24)*A49)+((((((A4*12)/100)*95)/41.91)*40)*A49)+((((((A4*12)/100)*95)/104.2)*1)*A52)+((((((A4*12)/100)*95)/3.18)*1)*A55)+((((((A4*12)/100)*95)/5.94)*2)*A55)+((((((A4*12)/100)*95)/28.07)*3)*A55)+((((((A4*12)/100)*95)/3.18)*1)*A58)+((((((A4*12)/100)*95)/5.94)*2)*A58)+((((((A4*12)/100)*95)/28.07)*3)*A58)))/1000000).toFixed(2);

return `${moneyPowderPrecursorCity}M`; 
}

function updatePowderPrecursorCity(data) {
const PowderPrecursorCityMoney = calculatePowderPrecursorCity(data); 
document.getElementById('precursor-city-powder').innerHTML = PowderPrecursorCityMoney;
    localStorage.setItem('cached-precursor-city-powder', PowderPrecursorCityMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculatePowderJungle(data) {


const A4 = 208;
const A7 = data["ROUGH_AMETHYST_GEM"]?.Price || 1;
const A10 = data["FLAWED_AMETHYST_GEM"]?.Price || 1;
const A13 = data["FINE_AMETHYST_GEM"]?.Price || 1;
const A16 = data["FLAWLESS_AMETHYST_GEM"]?.Price || 1;
const A19 = data["PREHISTORIC_EGG"]?.Price || 1;
const A22 = data["PICKONIMBUS"]?.Price || 1;
const A25 = data["SLUDGE_JUICE"]?.Price || 1;
const A28 = data["OIL_BARREL"]?.Price || 1;
const A31 = data["WISHING_COMPASS"]?.Price || 1;
const A34 = data["ASCENSION_ROPE"]?.Price || 1;
const A37 = data["ROUGH_RUBY_GEM"]?.Price || 1;
const A40 = data["FLAWED_RUBY_GEM"]?.Price || 1;
const A43 = data["ESSENCE_GOLD"]?.Price || 1;
const A46 = data["ESSENCE_DIAMOND"]?.Price || 1;
const A49 = data["JUNGLE_HEART"]?.Price || 1;

var moneyPowderJungle = (
// High Tier Loot
((((((A4*12)/100)*5)/2.8)*8*A7) +
(((((A4*12)/100)*5)/2.8)*16*A7) +
(((((A4*12)/100)*5)/2.8)*24*A7) +
(((((A4*12)/100)*5)/2.8)*40*A7) +
(((((A4*12)/100)*5)/5.69)*1*A10) +
(((((A4*12)/100)*5)/9.92)*2*A10) +
(((((A4*12)/100)*5)/24.21)*4*A10) +
(((((A4*12)/100)*5)/48.03)*7*A10) +
(((((A4*12)/100)*5)/2382.38)*8*A13) +
(((((A4*12)/100)*5)/1191.38)*8*A13) +
(((((A4*12)/100)*5)/2382.38)*1*A16) +
(((((A4*12)/100)*5)/476.78)*1*A19) +
(((((A4*12)/100)*5)/238.58)*1*A22) +
(((((A4*12)/100)*5)/16.27)*10*A25) +
(((((A4*12)/100)*5)/95.66)*25*A25) +
(((((A4*12)/100)*5)/12.3)*1*A28) +
(((((A4*12)/100)*5)/19.44)*3*A31) +
(((((A4*12)/100)*5)/59.94)*1*A34) +
(((((A4*12)/100)*5)/24.21)*1*A49) +
(((((A4*12)/100)*5)/24.21)*16*A37) +
(((((A4*12)/100)*5)/24.21)*32*A37) +
(((((A4*12)/100)*5)/24.21)*48*A37) +
(((((A4*12)/100)*5)/48.03)*1*A40) +
(((((A4*12)/100)*5)/119.48)*2*A40) +
(((((A4*12)/100)*5)/3.59)*1*A43) +
(((((A4*12)/100)*5)/6.75)*2*A43) +
(((((A4*12)/100)*5)/32.15)*3*A43) +
(((((A4*12)/100)*5)/3.59)*1*A46) +
(((((A4*12)/100)*5)/6.75)*2*A46) +
(((((A4*12)/100)*5)/32.15)*3*A46) +
// Low Tier Loot
(((((A4*12)/100)*95)/2.56)*8*A7) +
(((((A4*12)/100)*95)/2.56)*16*A7) +
(((((A4*12)/100)*95)/2.56)*24*A7) +
(((((A4*12)/100)*95)/4.67)*40*A7) +
(((((A4*12)/100)*95)/11.06)*1*A10) +
(((((A4*12)/100)*95)/21.72)*2*A10) +
(((((A4*12)/100)*95)/71.48)*4*A10) +
(((((A4*12)/100)*95)/178.13)*7*A10) +
(((((A4*12)/100)*95)/2133.27)*1*A13) +
(((((A4*12)/100)*95)/426.96)*1*A19) +
(((((A4*12)/100)*95)/14.61)*10*A25) +
(((((A4*12)/100)*95)/85.7)*25*A25) +
(((((A4*12)/100)*95)/11.06)*1*A28) +
(((((A4*12)/100)*95)/17.45)*3*A31) +
(((((A4*12)/100)*95)/53.71)*1*A34) +
(((((A4*12)/100)*95)/21.72)*8*A37) +
(((((A4*12)/100)*95)/21.72)*16*A37) +
(((((A4*12)/100)*95)/21.72)*24*A37) +
(((((A4*12)/100)*95)/43.04)*40*A37) +
(((((A4*12)/100)*95)/107.03)*1*A40) +
(((((A4*12)/100)*95)/3.26)*1*A43) +
(((((A4*12)/100)*95)/6.09)*2*A43) +
(((((A4*12)/100)*95)/28.83)*3*A43) +
(((((A4*12)/100)*95)/3.26)*1*A46) +
(((((A4*12)/100)*95)/6.09)*2*A46) +
(((((A4*12)/100)*95)/28.83)*3*A46)
)/1000000).toFixed(2);

return `${moneyPowderJungle}M`; 
}

function updatePowderJungle(data) {
const PowderJungleMoney = calculatePowderJungle(data); 
document.getElementById('jungle-powder').innerHTML = PowderJungleMoney;
    localStorage.setItem('cached-jungle-powder', PowderJungleMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculatePowderGoblinHoldout(data) {
if (Object.keys(data).length === 0) {
console.error('Data not loaded. Please wait a moment and try again.');
return 'Data not available';
}

const A4 = 208; // Treasure chests opened in 5 minutes
const A7 = data["ROUGH_AMBER_GEM"]?.Price || 1;
const A10 = data["FLAWED_AMBER_GEM"]?.Price || 1;
const A13 = data["FINE_AMBER_GEM"]?.Price || 1;
const A16 = data["FLAWLESS_AMBER_GEM"]?.Price || 1;
const A19 = data["PREHISTORIC_EGG"]?.Price || 1;
const A22 = data["PICKONIMBUS"]?.Price || 1;
const A25 = data["WISHING_COMPASS"]?.Price || 1;
const A28 = data["ASCENSION_ROPE"]?.Price || 1;
const A31 = data["GOBLIN_EGG"]?.Price || 1;
const A34 = data["GOBLIN_EGG_GREEN"]?.Price || 1;
const A37 = data["GOBLIN_EGG_YELLOW"]?.Price || 1;
const A40 = data["GOBLIN_EGG_RED"]?.Price || 1;
const A43 = data["GOBLIN_EGG_BLUE"]?.Price || 1;
const A46 = data["ROUGH_RUBY_GEM"]?.Price || 1;
const A49 = data["FLAWED_RUBY_GEM"]?.Price || 1;
const A52 = data["ESSENCE_GOLD"]?.Price || 1;
const A55 = data["ESSENCE_DIAMOND"]?.Price || 1;


// Calculation based on the provided formula for Goblin Holdout
const moneyPowderGoblinHoldout = (
// High tier loot
((((((A4 * 12) / 100) * 5) / 2.79) * 8 * A7) +
(((((A4 * 12) / 100) * 5) / 2.79) * 16 * A7) +
(((((A4 * 12) / 100) * 5) / 2.79) * 24 * A7) +
(((((A4 * 12) / 100) * 5) / 2.79) * 40 * A7) +
(((((A4 * 12) / 100) * 5) / 5.66) * 1 * A10) +
(((((A4 * 12) / 100) * 5) / 9.86) * 2 * A10) +
(((((A4 * 12) / 100) * 5) / 24.06) * 4 * A10) +
(((((A4 * 12) / 100) * 5) / 47.74) * 7 * A10) +
(((((A4 * 12) / 100) * 5) / 2367.94) * 8 * A13) +
(((((A4 * 12) / 100) * 5) / 1184.16) * 8 * A13) +
(((((A4 * 12) / 100) * 5) / 2367.94) * 1 * A16) +
(((((A4 * 12) / 100) * 5) / 473.9) * 1 * A19) +
(((((A4 * 12) / 100) * 5) / 237.14) * 1 * A22) +
(((((A4 * 12) / 100) * 5) / 19.33) * 3 * A25) +
(((((A4 * 12) / 100) * 5) / 59.57) * 1 * A28) +
(((((A4 * 12) / 100) * 5) / 9.86) * 2 * A31) +
(((((A4 * 12) / 100) * 5) / 24.06) * 2 * A34) +
(((((A4 * 12) / 100) * 5) / 59.57) * 2 * A37) +
(((((A4 * 12) / 100) * 5) / 148.36) * 2 * A40) +
(((((A4 * 12) / 100) * 5) / 592.27) * 1 * A43) +
(((((A4 * 12) / 100) * 5) / 24.06) * 16 * A46) +
(((((A4 * 12) / 100) * 5) / 24.06) * 32 * A46) +
(((((A4 * 12) / 100) * 5) / 24.06) * 48 * A46) +
(((((A4 * 12) / 100) * 5) / 47.74) * 1 * A49) +
(((((A4 * 12) / 100) * 5) / 118.76) * 2 * A49) +
(((((A4 * 12) / 100) * 5) / 3.57) * 1 * A52) +
(((((A4 * 12) / 100) * 5) / 6.71) * 2 * A52) +
(((((A4 * 12) / 100) * 5) / 31.95) * 3 * A52) +
// Low tier loot
(((((A4 * 12) / 100) * 95) / 2.79) * 8 * A7) +
(((((A4 * 12) / 100) * 95) / 2.79) * 16 * A7) +
(((((A4 * 12) / 100) * 95) / 2.79) * 24 * A7) +
(((((A4 * 12) / 100) * 95) / 4.68) * 40 * A7) +
(((((A4 * 12) / 100) * 95) / 11.09) * 1 * A10) +
(((((A4 * 12) / 100) * 95) / 21.79) * 2 * A10) +
(((((A4 * 12) / 100) * 95) / 71.74) * 4 * A10) +
(((((A4 * 12) / 100) * 95) / 178.77) * 7 * A10) +
(((((A4 * 12) / 100) * 95) / 2141.05) * 1 * A13) +
(((((A4 * 12) / 100) * 95) / 428.52) * 1 * A19) +
(((((A4 * 12) / 100) * 95) / 17.51) * 3 * A25) +
(((((A4 * 12) / 100) * 95) / 53.9) * 1 * A28) +
(((((A4 * 12) / 100) * 95) / 8.96) * 1 * A31) +
(((((A4 * 12) / 100) * 95) / 21.79) * 1 * A34) +
(((((A4 * 12) / 100) * 95) / 53.9) * 1 * A37) +
(((((A4 * 12) / 100) * 95) / 1134.18) * 1 * A40) +
(((((A4 * 12) / 100) * 95) / 535.55) * 1 * A43) +
(((((A4 * 12) / 100) * 95) / 21.79) * 8 * A46) +
(((((A4 * 12) / 100) * 95) / 21.79) * 16 * A46) +
(((((A4 * 12) / 100) * 95) / 21.79) * 24 * A46) +
(((((A4 * 12) / 100) * 95) / 43.2) * 40 * A46) +
(((((A4 * 12) / 100) * 95) / 107.42) * 1 * A49) +
(((((A4 * 12) / 100) * 95) / 3.27) * 1 * A52) +
(((((A4 * 12) / 100) * 95) / 6.11) * 2 * A52) +
(((((A4 * 12) / 100) * 95) / 28.93) * 3 * A52)
) / 1000000).toFixed(2);

return `${moneyPowderGoblinHoldout}M`;
}

function updatePowderGoblinHoldout(data) {
const goblinHoldoutMoney = calculatePowderGoblinHoldout(data); 
document.getElementById('goblin-holdout-powder').innerHTML = goblinHoldoutMoney;
    localStorage.setItem('cached-goblin-holdout-powder', goblinHoldoutMoney);
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculatePowderMagmaFields(data) {
if (Object.keys(data).length === 0) {
console.error('Data not loaded. Please wait a moment and try again.');
return 'Data not available';
}

const A4 = 208; // Treasure chests opened in 5 minutes
const A7 = data["ROUGH_TOPAZ_GEM"]?.Price || 1;
const A10 = data["FLAWED_TOPAZ_GEM"]?.Price || 1;
const A13 = data["FINE_TOPAZ_GEM"]?.Price || 1;
const A16 = data["FLAWLESS_TOPAZ_GEM"]?.Price || 1;
const A19 = data["PREHISTORIC_EGG"]?.Price || 1;
const A22 = data["PICKONIMBUS"]?.Price || 1;
const A25 = data["YOGGIE"]?.Price || 1;
const A28 = data["WISHING_COMPASS"]?.Price || 1;
const A31 = data["ASCENSION_ROPE"]?.Price || 1; 
const A34 = data["ROUGH_RUBY_GEM"]?.Price || 1; 
const A37 = data["FLAWED_RUBY_GEM"]?.Price || 1;
const A40 = data["ESSENCE_GOLD"]?.Price || 1;
const A43 = data["ESSENCE_DIAMOND"]?.Price || 1;

// Calculation based on the provided formula for Mithril Deposits Powder Mining
const moneyPowderMagmaFields = ((((((((A4*12)/100)*5)/2.75)*8)*A7)+((((((A4*12)/100)*5)/2.75)*16)*A7)+((((((A4*12)/100)*5)/2.75)*24)*A7)+((((((A4*12)/100)*5)/2.75)*40)*A7)+((((((A4*12)/100)*5)/5.58)*1)*A10)+((((((A4*12)/100)*5)/9.72)*2)*A10)+((((((A4*12)/100)*5)/23.71)*4)*A10)+((((((A4*12)/100)*5)/47.03)*7)*A10)+((((((A4*12)/100)*5)/2332.38)*8)*A13)+((((((A4*12)/100)*5)/1166.38)*8)*A13)+((((((A4*12)/100)*5)/2332.38)*1)*A16)+((((((A4*12)/100)*5)/466.78)*1)*A19)+((((((A4*12)/100)*5)/233.58)*1)*A22)+((((((A4*12)/100)*5)/9.72)*1)*A25)+((((((A4*12)/100)*5)/19.04)*3)*A28)+((((((A4*12)/100)*5)/58.69)*1)*A31)+((((((A4*12)/100)*5)/23.71)*16)*A34)+((((((A4*12)/100)*5)/23.71)*32)*A34)+((((((A4*12)/100)*5)/23.71)*48)*A34)+((((((A4*12)/100)*5)/47.03)*1)*A37)+((((((A4*12)/100)*5)/116.98)*2)*A37)+((((((A4*12)/100)*5)/3.52)*1)*A40)+((((((A4*12)/100)*5)/6.62)*2)*A40)+((((((A4*12)/100)*5)/31.48)*3)*A40)+((((((A4*12)/100)*5)/3.52)*1)*A43)+((((((A4*12)/100)*5)/6.62)*2)*A43)+((((((A4*12)/100)*5)/31.48)*3)*A43)+((((((A4*12)/100)*95)/2.53)*8)*A7)+((((((A4*12)/100)*95)/2.53)*16)*A7)+((((((A4*12)/100)*95)/2.53)*24)*A7)+((((((A4*12)/100)*95)/4.61)*40)*A7)+((((((A4*12)/100)*95)/10.92)*1)*A10)+((((((A4*12)/100)*95)/21.44)*2)*A10)+((((((A4*12)/100)*95)/70.56)*4)*A10)+((((((A4*12)/100)*95)/175.81)*7)*A10)+((((((A4*12)/100)*95)/2105.5)*1)*A13)+((((((A4*12)/100)*95)/421.41)*1)*A19)+((((((A4*12)/100)*95)/17.23)*3)*A28)+((((((A4*12)/100)*95)/8.81)*1)*A25)+((((((A4*12)/100)*95)/53.01)*1)*A31)+((((((A4*12)/100)*95)/21.44)*8)*A34)+((((((A4*12)/100)*95)/21.44)*16)*A34)+((((((A4*12)/100)*95)/21.44)*24)*A34)+((((((A4*12)/100)*95)/42.49)*40)*A34)+((((((A4*12)/100)*95)/105.64)*1)*A37)+((((((A4*12)/100)*95)/3.22)*1)*A40)+((((((A4*12)/100)*95)/6.01)*2)*A40)+((((((A4*12)/100)*95)/28.45)*3)*A40)+((((((A4*12)/100)*95)/3.22)*1)*A43)+((((((A4*12)/100)*95)/6.01)*2)*A43)+((((((A4*12)/100)*95)/28.45)*3)*A43))/1000000).toFixed(2);

return `${moneyPowderMagmaFields}M`;
}

function updatePowderMagmaFields(data) {
const MagmaFieldsMoney = calculatePowderMagmaFields(data); 
document.getElementById('magma-fields-powder').innerHTML = MagmaFieldsMoney;
    localStorage.setItem('cached-magma-fields-powder', MagmaFieldsMoney);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculatePowderMithrilDeposits(data) {
if (Object.keys(data).length === 0) {
console.error('Data not loaded. Please wait a moment and try again.');
return 'Data not available';
}

const A4 = 208; // Treasure chests opened in 5 minutes
const A7 = data["ROUGH_JADE_GEM"]?.Price || 1;
const A10 = data["FLAWED_JADE_GEM"]?.Price || 1;
const A13 = data["FINE_JADE_GEM"]?.Price || 1;
const A16 = data["FLAWLESS_JADE_GEM"]?.Price || 1;
const A19 = data["PREHISTORIC_EGG"]?.Price || 1;
const A22 = data["PICKONIMBUS"]?.Price || 1;
const A25 = data["WISHING_COMPASS"]?.Price || 1;
const A28 = data["ASCENSION_ROPE"]?.Price || 1;
const A30 = data["TREASURITE"]?.Price || 1; 
const A33 = data["ROUGH_RUBY_GEM"]?.Price || 1; 
const A36 = data["FLAWED_RUBY_GEM"]?.Price || 1;
const A39 = data["ESSENCE_GOLD"]?.Price || 1;
const A42 = data["ESSENCE_DIAMOND"]?.Price || 1;

// Calculation based on the provided formula for Mithril Deposits Powder Mining
const moneyPowderMithrilDeposits = (
// High tier loot
(((((((A4*12)/100)*5)/2.74)*8)*A7)+((((((A4*12)/100)*5)/2.74)*16)*A7)+((((((A4*12)/100)*5)/2.74)*24)*A7)+((((((A4*12)/100)*5)/2.74)*40)*A7)+((((((A4*12)/100)*5)/5.56)*1)*A10)+((((((A4*12)/100)*5)/9.68)*2)*A10)+((((((A4*12)/100)*5)/23.6)*4)*A10)+((((((A4*12)/100)*5)/46.8)*7)*A10)+((((((A4*12)/100)*5)/2321.27)*8)*A13)+((((((A4*12)/100)*5)/1160.83)*8)*A13)+((((((A4*12)/100)*5)/2321.27)*1)*A16)+((((((A4*12)/100)*5)/464.56)*1)*A19)+((((((A4*12)/100)*5)/232.47)*1)*A22)+((((((A4*12)/100)*5)/18.96)*3)*A25)+((((((A4*12)/100)*5)/58.41)*1)*A28)+((((((A4*12)/100)*5)/12)*1)*A30)+((((((A4*12)/100)*5)/23.6)*16)*A33)+((((((A4*12)/100)*5)/23.6)*32)*A33)+((((((A4*12)/100)*5)/23.6)*48)*A33)+((((((A4*12)/100)*5)/46.8)*1)*A36)+((((((A4*12)/100)*5)/116.43)*2)*A36)+((((((A4*12)/100)*5)/3.5)*1)*A39)+((((((A4*12)/100)*5)/6.59)*2)*A39)+((((((A4*12)/100)*5)/31.33)*3)*A39)+((((((A4*12)/100)*5)/3.5)*1)*A42)+((((((A4*12)/100)*5)/6.59)*2)*A42)+((((((A4*12)/100)*5)/31.33)*3)*A42)+((((((A4*12)/100)*95)/2.52)*8)*A7)+((((((A4*12)/100)*95)/2.52)*16)*A7)+((((((A4*12)/100)*95)/2.52)*24)*A7)+((((((A4*12)/100)*95)/4.59)*40)*A7)+((((((A4*12)/100)*95)/10.86)*1)*A10)+((((((A4*12)/100)*95)/21.33)*2)*A10)+((((((A4*12)/100)*95)/70.19)*4)*A10)+((((((A4*12)/100)*95)/174.88)*7)*A10)+((((((A4*12)/100)*95)/2094.38)*1)*A13)+((((((A4*12)/100)*95)/419.18)*1)*A19)+((((((A4*12)/100)*95)/17.14)*3)*A25)+((((((A4*12)/100)*95)/52.74)*1)*A28)+((((((A4*12)/100)*95)/10.86)*1)*A30)+((((((A4*12)/100)*95)/21.33)*8)*A33)+((((((A4*12)/100)*95)/21.33)*16)*A33)+((((((A4*12)/100)*95)/21.33)*24)*A33)+((((((A4*12)/100)*95)/42.27)*40)*A33)+((((((A4*12)/100)*95)/105.08)*1)*A36)+((((((A4*12)/100)*95)/3.21)*1)*A39)+((((((A4*12)/100)*95)/5.98)*2)*A39)+((((((A4*12)/100)*95)/28.31)*3)*A39)+((((((A4*12)/100)*95)/3.21)*1)*A42)+((((((A4*12)/100)*95)/5.98)*2)*A42)+((((((A4*12)/100)*95)/28.31)*3)*A42))/1000000).toFixed(2);

return `${moneyPowderMithrilDeposits}M`;
}

function updatePowderMithrilDeposits(data) {
const mithrilDepositsMoney = calculatePowderMithrilDeposits(data); 
document.getElementById('mithril-deposits-powder').innerHTML = mithrilDepositsMoney;
    localStorage.setItem('cached-mithril-deposits-powder', mithrilDepositsMoney);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBladeSoul(data) {



const A3 = 108;
const A6 = data["RAGNAROCK_AXE"]?.Price || 1;
const A9 = data["MAGMA_URCHIN"]?.Price || 1;




var moneyBladeSoul = ((((A3/20)*A6)+((((A3/4)*5)/100)*2*A9)+(((A3)/100)*0.5*A6))/1000000).toFixed(2);




return `${moneyBladeSoul}M`; 
}

function updateBladeSoul(data) {
const BladeSoulMoney = calculateBladeSoul(data); 
document.getElementById('blade-soul').innerHTML = BladeSoulMoney;
    localStorage.setItem('cached-blade-soul', BladeSoulMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMageOutlaw(data) {



const A3 = 37; // kills / hour
const A5 = data["SPELL_POWDER"]?.Price || 1;
const A6 = data["FIRE_FREEZE_STAFF"]?.Price || 1;
const A9 = data["MAGMA_URCHIN"]?.Price || 1;
const A12 = data["WAND_OF_STRENGTH"]?.Price || 1;




var moneyMageOutlaw = (((A3*A5)+(((((A3/4)*5)/100)*2*A9)+(((A3/100)*0.5*A6))+((A3/100)*0.5*A12)))/1000000).toFixed(2);




return `${moneyMageOutlaw}M`; 
}


function updateMageOutlaw(data) {
const MageOutlawMoney = calculateMageOutlaw(data); 
document.getElementById('mage-outlaw').innerHTML = MageOutlawMoney;
    localStorage.setItem('cached-mage-outlaw', MageOutlawMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMagmaBoss(data) {



const A3 = 21;
const A5 = data["MAGMA_CUBE;3"]?.Price || 1;
const A6 = data["MAGMA_CUBE;4"]?.Price || 1;
const A9 = data["MAGMA_URCHIN"]?.Price || 1;
const A15 = data["FIRE_FURY_STAFF"]?.Price || 1;


var moneyMagmaBoss = ((((A3/20)*A15)+((((A3/4)*5)/100)*2*A9)+(((A3)/100)*0.4*A6)+(((A3)/100)*0.5*A15)+(((A3)/100)*1.5*A5))/1000000).toFixed(2);




return `${moneyMagmaBoss}M`; 
}

function updateMagmaBoss(data) {
const MagmaBossMoney = calculateMagmaBoss(data); 
document.getElementById('magma-boss').innerHTML = MagmaBossMoney;
    localStorage.setItem('cached-magma-boss', MagmaBossMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateT4Vampire(data) {


const A4 = 28; //time in seconds to kill & spawn
const A1 = 4;  //time in minutes to kill & spawn
const A25 = 20; // magic find
const A7 = data["ENCHANTMENT_QUANTUM_3"]?.Price || 1;
const A10 = data["RUNE_SOULTWIST;1"]?.Price || 1;
const A13 = data["BUBBA_BLISTER"]?.Price || 1;
const A16 = data["CHOCOLATE_CHIP"]?.Price || 1;
const A19 = data["GUARDIAN_LUCKY_BLOCK"]?.Price || 1;
const A28 = data["VAMPIRE_DENTIST_RELIC"]?.Price || 1;


var moneyVampire = ((((((3600/((A1*60)+A4))*12.195)/100)*A7)+((((3600/((A1*60)+A4))*10.87)/100)*A10)+((((3600/((A1*60)+A4))*9.146)/100)*A13)+((((3600/((A1*60)+A4))*9.146)/100)*A16)+((((3600/((A1*60)+A4))*6.098)/100)*A19)+(((((3600/((A1*60)+A4))*1.22)*(((1+(A25/100)))))/100)*A28))/1000000).toFixed(2);




return `${moneyVampire}M`; 
}

function updateT4Vampire(data) {
const VampireMoney = calculateT4Vampire(data); 
document.getElementById('t4-vampire').innerHTML = VampireMoney;
    localStorage.setItem('cached-t4-vampire', VampireMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateT5Vampire(data) {


const A4 = 20; //time in seconds to kill & spawn
const A1 = 5;  //time in minutes to kill & spawn
const A25 = 20; // magic find
const A7 = data["ENCHANTMENT_QUANTUM_3"]?.Price || 1;
const A10 = data["RUNE_SOULTWIST;1"]?.Price || 1;
const A13 = data["BUBBA_BLISTER"]?.Price || 1;
const A16 = data["CHOCOLATE_CHIP"]?.Price || 1;
const A19 = data["GUARDIAN_LUCKY_BLOCK"]?.Price || 1;
const A22 = data["ENCHANTMENT_ULTIMATE_THE_ONE_4"]?.Price || 1;
const A28 = data["VAMPIRE_DENTIST_RELIC"]?.Price || 1;


var moneyVampire = ((((((3600/((A1*60)+A4))*11.98)/100)*A7)+((((3600/((A1*60)+A4))*10.695)/100)*A10)+((((3600/((A1*60)+A4))*8.982)/100)*A13)+((((3600/((A1*60)+A4))*8.982)/100)*A16)+((((3600/((A1*60)+A4))*5.988)/100)*A19)+(((((3600/((A1*60)+A4))*1.796)*(((1+(A25/100)))))/100)*A22)+((((3600/((A1*60)+A4))*1.198)*(((1+(A25/100))))/100)*A28))/1000000).toFixed(2);




return `${moneyVampire}M`; 
}

function updateT5Vampire(data) {
const VampireMoney = calculateT5Vampire(data); 
document.getElementById('t5-vampire').innerHTML = VampireMoney;
    localStorage.setItem('cached-t5-vampire', VampireMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateT4Voidglooms(data) {


const N21 = 48; // avg time to kill and spawn in seconds
const N22 = 0; // avg time to kill and spawn in minutes
const N24 = 140; // magic find
const C23 = 0; // enderman kills in 1 hour
const A7 = data["NULL_SPHERE"]?.Price || 1;
const A10 = data["TWILIGHT_ARROW_POISON"]?.Price || 1;
const A13 = data["RUNE_ENDERSNAKE;1"]?.Price || 1;
const A16 = data["SUMMONING_EYE"]?.Price || 1;
const A19 = data["ENCHANTMENT_MANA_STEAL_1"]?.Price || 1;
const A22 = data["TRANSMISSION_TUNER"]?.Price || 1;
const A25 = data["NULL_ATOM"]?.Price || 1;
const A28 = data["HAZMAT_ENDERMAN"]?.Price || 1;
const A31 = data["POCKET_ESPRESSO_MACHINE"]?.Price || 1;
const A34 = data["ENCHANTMENT_SMARTY_PANTS_1"]?.Price || 1;
const A37 = data["RUNE_DRAGON;1"]?.Price || 1;
const A40 = data["HANDY_BLOOD_CHALICE"]?.Price || 1;
const A43 = data["SINFUL_DICE"]?.Price || 1;
const A46 = data["EXCEEDINGLY_RARE_ENDER_ARTIFACT_UPGRADER"]?.Price || 1;
const A49 = data["ETHERWARP_MERGER"]?.Price || 1;
const A52 = data["PET_SKIN_ENDERMAN_SLAYER"]?.Price || 1;
const A55 = data["JUDGEMENT_CORE"]?.Price || 1;
const A58 = data["RUNE_ENCHANT;1"]?.Price || 1;
const A61 = data["ENCHANTMENT_ENDER_SLAYER_7"]?.Price || 1;
const C11 = data["FINAL_DESTINATION_BOOTS"]?.Price || 1;
const C14 = data["FINAL_DESTINATION_LEGGINGS"]?.Price || 1;
const C17 = data["FINAL_DESTINATION_CHESTPLATE"]?.Price || 1;
const C20 = data["FINAL_DESTINATION_HELMET"]?.Price || 1;
const N32 = data["FINAL_DESTINATION_BOOTS;10K"]?.Price || 1;
const N35 = data["FINAL_DESTINATION_LEGGINGS;10K"]?.Price || 1;
const Q32 = data["FINAL_DESTINATION_CHESTPLATE;10K"]?.Price || 1;
const Q35 = data["FINAL_DESTINATION_HELMET;10K"]?.Price || 1;

var moneyVoid = (
(
(
(((3600 / ((N22*60)+N21)) * (A7 * 130)) +
((((3600 / ((N22*60)+N21)) * 12.704) / 100) * A10) +
((((3600 / ((N22*60)+N21)) * 5.298) / 100) * A13) +
((((3600 / ((N22*60)+N21)) * Math.min(0.565 * (1 + (N24 / 100)), 5)) / 100) * A16) +
((((3600 / ((N22*60)+N21)) * Math.min(4.235 * (1 + (N24 / 100)), 5)) / 100) * A19) +
((((3600 / ((N22*60)+N21)) * Math.min(2.177 * (1 + (N24 / 100)), 5)) / 100) * A22) +
((((3600 / ((N22*60)+N21)) * Math.min(4.94 * (1 + (N24 / 100)), 5)) / 100) * A25) +
((((3600 / ((N22*60)+N21)) * Math.min(1.553 * (1 + (N24 / 100)), 5)) / 100) * A28) +
((((3600 / ((N22*60)+N21)) * Math.min(0.388 * (1 + (N24 / 100)), 5)) / 100) * A31) +
((((3600 / ((N22*60)+N21)) * Math.min(1.764 * (1 + (N24 / 100)), 5)) / 100) * A34) +
((((3600 / ((N22*60)+N21)) * Math.min(0.662 * (1 + (N24 / 100)), 5)) / 100) * A37) +
((((3600 / ((N22*60)+N21)) * Math.min(0.176 * (1 + (N24 / 100)), 5)) / 100) * A40) +
((((3600 / ((N22*60)+N21)) * Math.min(0.459 * (1 + (N24 / 100)), 5)) / 100) * A43) +
((((3600 / ((N22*60)+N21)) * Math.min(0.028 * (1 + (N24 / 100)), 5)) / 100) * A46) +
((((3600 / ((N22*60)+N21)) * Math.min(0.423 * (1 + (N24 / 100)), 5)) / 100) * A49) +
((((3600 / ((N22*60)+N21)) * Math.min(0.166 * (1 + (N24 / 100)), 5)) / 100) * A52) +
((((3600 / ((N22*60)+N21)) * Math.min(0.056 * (1 + (N24 / 100)), 5)) / 100) * A55) +
((((3600 / ((N22*60)+N21)) * Math.min(0.046 * (1 + (N24 / 100)), 5)) / 100) * A58) +
((((3600 / ((N22*60)+N21)) * Math.min(0.014 * (1 + (N24 / 100)), 5)) / 100) * A61)) + 
((3600 / ((N22*60)+N21)) * (A55 / (885562 / 500)))) - ((3600 / ((N22*60)+N21)) * 50000)) / 1000000).toFixed(2);





return `${moneyVoid}M`; 
}

function updateT4Voidglooms(data) {
const VoidgloomsMoney = calculateT4Voidglooms(data); 
document.getElementById('t4-voidglooms').innerHTML = VoidgloomsMoney;
    localStorage.setItem('cached-t4-voidglooms', VoidgloomsMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateT4InfernoDemonlord(data) {


const L20 = 55; // avg time to kill and spawn in seconds
const L22 = 0; // avg time to kill and spawn in minutes 
const L23 = 310; // magic find
const A1 = data["ENCHANTED_BLAZE_POWDER"]?.Price || 1;
const A7 = data["DERELICT_ASHE"]?.Price || 1;
const A10 = data["RUNE_LAVATEARS;1"]?.Price || 1;
const A13 = 20000;
const A16 = data["ARROW_BUNDLE_MAGMA"]?.Price || 1;
const A19 = data["MANA_DISINTEGRATOR"]?.Price || 1;
const A22 = data["SCORCHED_BOOKS"]?.Price || 1;
const A25 = data["KELVIN_INVERTER"]?.Price || 1;
const A28 = data["BLAZE_ROD_DISTILLATE"]?.Price || 1;
const A31 = data["GLOWSTONE_DUST_DISTILLATE"]?.Price || 1;
const A34 = data["MAGMA_CREAM_DISTILLATE"]?.Price || 1;
const A37 = data["NETHER_STALK_DISTILLATE"]?.Price || 1;
const A40 = data["CRUDE_GABAGOOL_DISTILLATE"]?.Price || 1;
const A43 = data["SCORCHED_POWER_CRYSTAL"]?.Price || 1;
const A46 = data["ARCHFIEND_DICE"]?.Price || 1;
const A49 = data["ENCHANTMENT_FIRE_ASPECT_3"]?.Price || 1;
const A52 = data["RUNE_FIERY_BURST;1"]?.Price || 1;
const A55 = data["FLAWED_OPAL_GEM"]?.Price || 1;
const A58 = data["ENCHANTMENT_ULTIMATE_REITERATE_1"]?.Price || 1;
const A61 = data["HIGH_CLASS_ARCHFIEND_DICE"]?.Price || 1;
const A64 = data["WILSON_ENGINEERING_PLANS"]?.Price || 1;
const A67 = data["SUBZERO_INVERTER"]?.Price || 1;

var moneyBlaze = (
(
(
(((3600 / ((L22 * 60) + L20)) * (A7 * 132.5)) +
 ((((3600 / ((L22 * 60) + L20)) * 7.582) / 100) * A16) +
 ((((3600 / ((L22 * 60) + L20)) * 11.727) / 100) * A1 * 28) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(1.955 * (1 + (L23 / 100)), 5)) / 100) * A10) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(2.527 * (1 + (L23 / 100)), 5)) / 100) * A13 * 5) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(3.538 * (1 + (L23 / 100)), 5)) / 100) * A19) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(2.022 * (1 + (L23 / 100)), 5)) / 100) * A22) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(2.527 * (1 + (L23 / 100)), 5)) / 100) * A25) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(4.246 * (1 + (L23 / 100)), 5)) / 100) * A28 * 20) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(4.246 * (1 + (L23 / 100)), 5)) / 100) * A31 * 20) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(4.246 * (1 + (L23 / 100)), 5)) / 100) * A34 * 20) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(4.246 * (1 + (L23 / 100)), 5)) / 100) * A37 * 20) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(4.246 * (1 + (L23 / 100)), 5)) / 100) * A40 * 20) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(3.033 * (1 + (L23 / 100)), 5)) / 100) * A43) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(1.011 * (1 + (L23 / 100)), 5)) / 100) * A46) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(1.264 * (1 + (L23 / 100)), 5)) / 100) * A49) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(0.174 * (1 + (L23 / 100)), 5)) / 100) * A52) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(2.78 * (1 + (L23 / 100)), 5)) / 100) * A55) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(1.769 * (1 + (L23 / 100)), 5)) / 100) * A58) +
 ((((3600 / ((L22 * 60) + L20)) * Math.min(0.217 * (1 + (L23 / 100)), 5)) / 100) * A61)
) +
((((3600 / ((L22 * 60) + L20)) * Math.min(0.086 * (1 + (L23 / 100)), 5)) / 100) * A64) +
((((3600 / ((L22 * 60) + L20)) * Math.min(0.086 * (1 + (L23 / 100)), 5)) / 100) * A67) +
((3600 / ((L22 * 60) + L20)) * (A58 / (28119 / 500)))
) - ((3600 / ((L22 * 60) + L20)) * 50000)
) / 1000000).toFixed(2);





return `${moneyBlaze}M`; 
}

function updateT4InfernoDemonlord(data) {
const T4InfernoDemonlordMoney = calculateT4InfernoDemonlord(data); 
document.getElementById('t4-inferno-demonlord').innerHTML = T4InfernoDemonlordMoney;
    localStorage.setItem('cached-t4-inferno-demonlord', T4InfernoDemonlordMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateT4Revenant(data) {


const L20 = 12; // avg time to kill and spawn in seconds
const L23 = 230; // magic find
const A7 = data["REVENANT_FLESH"]?.Price || 1;
const A10 = data["FOUL_FLESH"]?.Price || 1;
const A13 = data["RUNE_ZOMBIE_SLAYER;1"]?.Price || 1;
const A16 = data["UNDEAD_CATALYST"]?.Price || 1;
const A19 = data["ENCHANTMENT_SMITE_6"]?.Price || 1;
const A22 = data["BEHEADED_HORROR"]?.Price || 1;
const A25 = data["REVENANT_CATALYST"]?.Price || 1;
const A28 = data["RUNE_SNAKE;1"]?.Price || 1;
const A31 = data["SCYTHE_BLADE"]?.Price || 1;

var moneyRev = (
(
(
(((3600 / L20) * (A7 * 57)) +
((((3600 / L20) * 16.225) / 100) * A10) +
((((3600 / L20) * Math.min(6.32 * (1 + (L23 / 100)), 5)) / 100) * A13) +
((((3600 / L20) * Math.min(0.608 * (1 + (L23 / 100)), 5)) / 100) * A16) +
((((3600 / L20) * Math.min(0.811 * (1 + (L23 / 100)), 5)) / 100) * A19) +
((((3600 / L20) * Math.min(0.162 * (1 + (L23 / 100)), 5)) / 100) * A22) +
((((3600 / L20) * Math.min(1.014 * (1 + (L23 / 100)), 5)) / 100) * A25) +
((((3600 / L20) * Math.min(0.152 * (1 + (L23 / 100)), 5)) / 100) * A28) +
((((3600 / L20) * Math.min(0.057 * (1 + (L23 / 100)), 5)) / 100) * A31) + 
((3600 / L20) * (A31 / (484233 / 500)))) - ((3600 / L20) * 50000)) / 1000000
)).toFixed(2);






return `${moneyRev}M`; 
}

function updateT4Revenant(data) {
const T4RevenantMoney = calculateT4Revenant(data); 
document.getElementById('t4-revenant').innerHTML = T4RevenantMoney;
    localStorage.setItem('cached-t4-revenant', T4RevenantMoney); 
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateT5Revenant(data) {


const L20 = 14; // avg time to kill and spawn in seconds
const L23 = 227; // magic find
const A7 = data["REVENANT_FLESH"]?.Price || 1;
const A10 = data["FOUL_FLESH"]?.Price || 1;
const A13 = data["UNDEAD_CATALYST"]?.Price || 1;
const A16 = data["ENCHANTMENT_SMITE_6"]?.Price || 1;
const A19 = data["BEHEADED_HORROR"]?.Price || 1;
const A22 = data["REVENANT_CATALYST"]?.Price || 1;
const A25 = data["REVENANT_VISCERA"]?.Price || 1;
const A28 = data["SCYTHE_BLADE"]?.Price || 1;
const A31 = data["SHARD_OF_THE_SHREDDED"]?.Price || 1;
const A34 = data["ENCHANTMENT_SMITE_7"]?.Price || 1;
const A37 = data["WARDEN_HEART"]?.Price || 1;

var moneyRev = (
(
(
(((3600 / L20) * (A7 * 63.5)) +
((((3600 / L20) * 13.77) / 100) * A10) +
((((3600 / L20) * Math.min(1.69 * (1 + (L23 / 100)), 5)) / 100) * A13) +
((((3600 / L20) * Math.min(0.69 * (1 + (L23 / 100)), 5)) / 100) * A16) +
((((3600 / L20) * Math.min(0.14 * (1 + (L23 / 100)), 5)) / 100) * A19) +
((((3600 / L20) * Math.min(0.86 * (1 + (L23 / 100)), 5)) / 100) * A22) +
((((3600 / L20) * 13.77) / 100) * A25) +
((((3600 / L20) * Math.min(0.1033 * (1 + (L23 / 100)), 5)) / 100) * A28) +
((((3600 / L20) * Math.min(0.055 * (1 + (L23 / 100)), 5)) / 100) * A31) +
((((3600 / L20) * Math.min(0.048 * (1 + (L23 / 100)), 5)) / 100) * A34) +
((((3600 / L20) * Math.min(0.01 * (1 + (L23 / 100)), 5)) / 100) * A37)
) + 
(((3600/L20)*(A37/(3631749/1500))))
) - 
((3600 / L20) * 100000)
) / 1000000
).toFixed(2);






return `${moneyRev}M`; 
}

function updateT5Revenant(data) {
const T5RevenantMoney = calculateT5Revenant(data); 
document.getElementById('t5-revenant').innerHTML = T5RevenantMoney;
    localStorage.setItem('cached-t5-revenant', T5RevenantMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateT4Sven(data) {


const L20 = 21; // avg time to kill and spawn in seconds
const L23 = 345; // magic find
const A7 = data["WOLF_TOOTH"]?.Price || 1;
const A10 = data["HAMSTER_WHEEL"]?.Price || 1;
const A13 = data["ENCHANTMENT_CRITICAL_6"]?.Price || 1;
const A16 = data["FURBALL"]?.Price || 1;
const A19 = data["RED_CLAW_EGG"]?.Price || 1;
const A22 = data["RUNE_COUTURE;1"]?.Price || 1;
const A25 = data["GRIZZLY_BAIT"]?.Price || 1;
const A28 = data["OVERFLUX_CAPACITOR"]?.Price || 1;

var moneyT4Sven = (((((((3600/L20)*(A7*57))))+((((3600/L20)*16.22)/100)*A10)+((((3600/L20)*(0.81*((1+(L23/100)))))/100)*A13)+((((3600/L20)*(1.62*((1+(L23/100)))))/100)*A16)+((((3600/L20)*(0.12*((1+(L23/100)))))/100)*A19)+((((3600/L20)*(0.24*((1+(L23/100)))))/100)*A22)+((((3600/L20)*(0.06*((1+(L23/100)))))/100)*A25)+((((3600/L20)*(0.04*((1+(L23/100)))))/100)*A28)+((3600/L20)*(A28/(1232700/500))))-((3600/L20)*50000))/1000000).toFixed(2);






return `${moneyT4Sven}M`; 
}

function updateT4Sven(data) {
const T4SvenMoney = calculateT4Sven(data); 
document.getElementById('t4-sven').innerHTML = T4SvenMoney;
    localStorage.setItem('cached-t4-sven', T4SvenMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateT4Tarantula(data) {


const L20 = 4.5; // avg time to kill and spawn in seconds
const L23 = 262; // magic find
const A7 = data["TARANTULA_WEB"]?.Price || 1;
const A10 = data["TOXIC_ARROW_POISON"]?.Price || 1;
const A13 = data["SPIDER_CATALYST"]?.Price || 1;
const A16 = data["ENCHANTMENT_BANE_OF_ARTHROPODS_6"]?.Price || 1;
const A19 = data["FLY_SWATTER"]?.Price || 1;
const A22 = data["TARANTULA_TALISMAN"]?.Price || 1;
const A25 = data["DIGESTED_MOSQUITO"]?.Price || 1;


var moneyT4Tarantula = (
(
(
(((3600 / L20) * (A7 * 58)) +
((((3600 / L20) * 14.97) / 100) * 62 * A10) +
((((3600 / L20) * Math.min(0.62 * (1 + (L23 / 100)), 5)) / 100) * A13) +
((((3600 / L20) * Math.min(0.83 * (1 + (L23 / 100)), 5)) / 100) * A16) +
((((3600 / L20) * Math.min(0.17 * (1 + (L23 / 100)), 5)) / 100) * A19) +
((((3600 / L20) * Math.min(0.17 * (1 + (L23 / 100)), 5)) / 100) * A22) +
((((3600 / L20) * Math.min(0.06 * (1 + (L23 / 100)), 5)) / 100) * A25)
) + 
((3600 / L20) * (A10 / (3277 / 500)))
) - 
((3600 / L20) * 50000)
) / 1000000
).toFixed(2);







return `${moneyT4Tarantula}M`; 
}

function updateT4Tarantula(data) {
const T4TarantulaMoney = calculateT4Tarantula(data); 
document.getElementById('t4-tarantula').innerHTML = T4TarantulaMoney;
    localStorage.setItem('cached-t4-tarantula', T4TarantulaMoney); 
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateGoblin(data) {


const A4 = 242; // Goblin kills in 5 minutes
const A5 = 106; // Fireslinger kills in 5 minutes
const A6 = 230; // Knifethrower kills in 5 minutes
const A22 = 278; // magic find
const A25 = 5; // looting
const A28 = 7; // luck
const A7 = data["GOBLIN_EGG"]?.Price || 1;
const A10 = data["GOBLIN_HELMET"]?.Price || 1;
const A13 = data["GOBLIN_CHESTPLATE"]?.Price || 1;
const A16 = data["GOBLIN_LEGGINGS"]?.Price || 1;
const A19 = data["GOBLIN_BOOTS"]?.Price || 1;



var moneyGoblin = (((((((A4*12)/100)*(1*(1+(A22/100))*(1+((A25*15)/100))))*A7)+((((A4*12)/333)*((1+(A22/100))*(1+((A28*5)/100))))*A10)+((((A4*12)/333)*((1+(A22/100))*(1+((A28*5)/100))))*A13)+((((A4*12)/333)*((1+(A22/100))*(1+((A28*5)/100))))*A16)+((((A4*12)/333)*((1+(A22/100))*(1+((A28*5)/100))))*A19))+(((A4*12)/100)*5500)+(((((A5*12)/100)*(2*(1+(A22/100))*(1+((A25*15)/100))))*A7)+((((A5*12)/333)*((1+(A22/100))*(1+((A28*5)/100))))*A10)+((((A5*12)/333)*((1+(A22/100))*(1+((A28*5)/100))))*A13)+((((A5*12)/333)*((1+(A22/100))*(1+((A28*5)/100))))*A16)+((((A5*12)/333)*((1+(A22/100))*(1+((A28*5)/100))))*A19))+(((((A6*12)/100)*(0.5*(1+(A22/100))*(1+((A25*15)/100))))*A7)+((((A6*12)/333)*((1+(A22/100))*(1+((A28*5)/100))))*A10)+((((A6*12)/333)*((1+(A22/100))*(1+((A28*5)/100))))*A13)+((((A6*12)/333)*((1+(A22/100))*(1+((A28*5)/100))))*A16)+((((A6*12)/333)*((1+(A22/100))*(1+((A28*5)/100))))*A19)))/1000000).toFixed(2);

return `${moneyGoblin}M`; 
}

function updateGoblin(data) {
const GoblinMoney = calculateGoblin(data); 
document.getElementById('goblin').innerHTML = GoblinMoney;
    localStorage.setItem('cached-goblin', GoblinMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateDiana(data) {


const A4 = 400; // Burrows dug up in 1 hour
const C8 = 400; // magic find
const C5 = 5; // looting
const A7 = data["ANCIENT_CLAW"]?.Price || 1;
const A10 = data["ENCHANTED_GOLD"]?.Price || 1;
const A13 = data["ANTIQUE_REMEDIES"]?.Price || 1;
const A16 = data["CROCHET_TIGER_PLUSHIE"]?.Price || 1;
const A19 = data["DWARF_TURTLE_SHELMET"]?.Price || 1;
const A22 = data["DAEDALUS_STICK"]?.Price || 1;
const A25 = data["ENCHANTED_IRON"]?.Price || 1;
const A28 = data["MINOS_RELIC"]?.Price || 1;
const A31 = data["ENCHANTMENT_ULTIMATE_CHIMERA_1"]?.Price || 1;
const A34 = data["ENCHANTED_ANCIENT_CLAW"]?.Price || 1;
const A37 = data["GRIFFIN_FEATHER"]?.Price || 1;
const A40 = data["CROWN_OF_GREED"]?.Price || 1;
const A43 = data["WASHED_UP_SOUVENIR"]?.Price || 1;


var moneyDiana =((((((((A4/2)/100)*90)/100)*12.35)*(2*(1+((C5*15)/100)))*A7)+((((((A4/2)/100)*90)/100)*18.52)*(10*(1+((C5*15)/100)))*A7)+((((((A4/2)/100)*90)/100)*18.52)*(1*(1+((C5*15)/100)))*A10)+((((((((A4/2)/100)*90)/100)*18.52)/100)*0.25)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A16)+((((((((A4/2)/100)*90)/100)*18.52)/100)*0.25)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A19)+((((((((A4/2)/100)*90)/100)*18.52)/100)*0.25)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A13)+((((((A4/2)/100)*90)/100)*24.69)*(2*(1+((C5*15)/100)))*A10)+((((((A4/2)/100)*90)/100)*24.69)*(10*(1+((C5*15)/100)))*A7)+((((((((A4/2)/100)*90)/100)*24.69)/100)*0.25)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A16)+((((((((A4/2)/100)*90)/100)*24.69)/100)*0.25)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A19)+((((((((A4/2)/100)*90)/100)*24.69)/100)*0.25)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A13)+((((((((A4/2)/100)*90)/100)*24.69)/100)*0.08)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A22)+((((((A4/2)/100)*90)/100)*24.69)*(12*(1+((C5*15)/100)))*A7)+((((((A4/2)/100)*90)/100)*24.69)*(1*(1+((C5*15)/100)))*A10)+((((((A4/2)/100)*90)/100)*24.69)*(1*(1+((C5*15)/100)))*A25)+((((((((A4/2)/100)*90)/100)*24.69)/100)*0.25)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A16)+((((((((A4/2)/100)*90)/100)*24.69)/100)*0.25)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A19)+((((((((A4/2)/100)*90)/100)*24.69)/100)*0.25)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A13)+((((((A4/2)/100)*90)/100)*18.52)*(14*(1+((C5*15)/100)))*A7)+((((((A4/2)/100)*90)/100)*18.52)*(3*(1+((C5*15)/100)))*A10)+((((((((A4/2)/100)*90)/100)*18.52)/100)*0.25)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A16)+((((((((A4/2)/100)*90)/100)*18.52)/100)*0.25)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A19)+((((((((A4/2)/100)*90)/100)*18.52)/100)*0.25)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A13)+((((((((A4/2)/100)*90)/100)*18.52)/100)*0.02)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A28)+((((((A4/2)/100)*90)/100)*1.417)*(8*(1+((C5*15)/100)))*A10)+((((((A4/2)/100)*90)/100)*1.417)*(48*(1+((C5*15)/100)))*A7)+((((((A4/2)/100)*90)/100)*1.417)*(0.5*(1+((C5*15)/100)))*A34)+((((((((A4/2)/100)*90)/100)*1.417)/100)*1)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A16)+((((((((A4/2)/100)*90)/100)*1.417)/100)*1)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A31)+((((((((A4/2)/100)*90)/100)*1.417)/100)*1)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A19)+((((((((A4/2)/100)*90)/100)*1.417)/100)*1)*(1*(1+((C5*15)/100)))*(1+(C8/100))*A13)+((((((A4/2)/100)*10)/100)*66.6)*A37)+((((((A4/2)/100)*10)/100)*0.39)*A40)+((((((A4/2)/100)*10)/100)*0.39)*A43)+((((((A4/2)/100)*10)/100)*3.92)*10000)+((((((A4/2)/100)*10)/100)*5.88)*15000)+((((((A4/2)/100)*10)/100)*7.84)*25000)+((((((A4/2)/100)*10)/100)*5.88)*40000)+((((((A4/2)/100)*10)/100)*3.92)*50000)+((((((A4/2)/100)*10)/100)*1.96)*75000)+((((((A4/2)/100)*10)/100)*1.18)*100000)+((((((A4/2)/100)*10)/100)*0.78)*250000)+((((((A4/2)/100)*10)/100)*0.78)*500000)+((((((A4/2)/100)*10)/100)*0.39)*750000)+((((A4/4)/100)*66.6)*A37)+((((A4/4)/100)*0.39)*A40)+((((A4/4)/100)*0.39)*A43)+((((A4/4)/100)*3.92)*10000)+((((A4/4)/100)*5.88)*15000)+((((A4/4)/100)*7.84)*25000)+((((A4/4)/100)*5.88)*40000)+((((A4/4)/100)*3.92)*50000)+((((A4/4)/100)*1.96)*75000)+((((A4/4)/100)*1.18)*100000)+((((A4/4)/100)*0.78)*250000)+((((A4/4)/100)*0.78)*500000)+((((A4/4)/100)*0.39)*750000))/1000000).toFixed(2);




return `${moneyDiana}M`; 
}

function updateDiana(data) {
const DianaMoney = calculateDiana(data); 
document.getElementById('diana').innerHTML = DianaMoney;
    localStorage.setItem('cached-diana', DianaMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateGlacialCave(data) {


const A4 = 40; // Frozen treasure in 5 minutes
const A7 = data["WHITE_GIFT"]?.Price || 1;
const A10 = data["GREEN_GIFT"]?.Price || 1;
const A13 = data["RED_GIFT"]?.Price || 1;
const A16 = data["PACKED_ICE"]?.Price || 1;
const A19 = data["ENCHANTED_ICE"]?.Price || 1;
const A22 = data["ENCHANTED_PACKED_ICE"]?.Price || 1;
const A25 = data["ICE_BAIT"]?.Price || 1;
const A28 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
const A31 = data["GLACIAL_FRAGMENT"]?.Price || 1;
const A34 = data["GLACIAL_TALISMAN"]?.Price || 1;
const A37 = data["FROZEN_BAIT"]?.Price || 1;
const A40 = data["EINARY_RED_HOODIE"]?.Price || 1;



var moneyGlacialCave = ((((((A4*12)/100)*36.22*1)*A7)+((((A4*12)/100)*18.11*1)*A10)+((((A4*12)/100)*0.72*1)*A13)+((((A4*12)/100)*10.87*32)*A16)+((((A4*12)/100)*3.62*8.5)*A19)+((((A4*12)/100)*0.36*1)*A22)+((((A4*12)/100)*21.73*16)*A25)+((((A4*12)/100)*0.72*8.5)*A28)+((((A4*12)/100)*6.52*1)*A31)+((((A4*12)/100)*0.36*1)*A34)+((((A4*12)/100)*0.72*3)*A37)+((((A4*12)/100)*0.04*1)*A40))/1000000).toFixed(2);




return `${moneyGlacialCave}M`; 
}

function updateGlacialCave(data) {
const GlacialCaveMoney = calculateGlacialCave(data); 
document.getElementById('glacialcave').innerHTML = GlacialCaveMoney;
    localStorage.setItem('cached-glacialcave', GlacialCaveMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateCorleone(data) {


const A4 = 37; // Corleone kills in 1 hour
const A7 = data["CORLEONITE"]?.Price || 1;
const A10 = 5; // looting


var moneyCorleone = ((((A4/100)*25)*(1+((A10*15)/100))*A7)/1000000).toFixed(2);




return `${moneyCorleone}M`; 
}

function updateCorleone(data) {
const CorleoneMoney = calculateCorleone(data); 
document.getElementById('corleone').innerHTML = CorleoneMoney;
    localStorage.setItem('cached-corleone', CorleoneMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateArachne300(data) {


const A4 = 75; // Arachne kills in 1 hour
const A7 = data["TARANTULA;3"]?.Price || 1;
const A10 = data["ENCHANTED_STRING"]?.Price || 1;
const A13 = data["STRING"]?.Price || 1;
const A16 = data["ENCHANTED_SPIDER_EYE"]?.Price || 1;
const A19 = data["SPIDER_EYE"]?.Price || 1;
const A22 = data["ARACHNE_FRAGMENT"]?.Price || 1;
const A25 = data["LUXURIOUS_SPOOL"]?.Price || 1;
const A28 = data["ARACHNE_FANG"]?.Price || 1;
const A34 = data["ESSENCE_SPIDER"]?.Price || 1;
const A31 = A34*20;
const A37 = data["SOUL_STRING"]?.Price || 1;




var moneyArachne300 = ((((((A4/100)*2)*A7)+(((A4/100)*100)*A10*1)+(((A4/100)*100)*A13*15)+(((A4/100)*100)*A16*1)+(((A4/100)*100)*A19*15)+(((A4/100)*100)*A22*1)+(((A4/100)*100)*A25*1)+(((A4/100)*10)*A28*1)+(((A4/100)*10)*A31*1)+(((A4/100)*100)*A34*8)+(((A4/100)*100)*A37*9.5)+(((A4/100)*100)*A37*5))-(A22*A4*4))/1000000).toFixed(2);




return `${moneyArachne300}M`; 
}

function updateArachne300(data) {
const Arachne300Money = calculateArachne300(data); 
document.getElementById('arachne300').innerHTML = Arachne300Money;
    localStorage.setItem('cached-arachne300', Arachne300Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateArachne500(data) {


const F4 = 55; // Arachne kills in 1 hour
const F7 = data["TARANTULA;4"]?.Price || 1;
const F10 = data["ENCHANTED_STRING"]?.Price || 1;
const F13 = data["STRING"]?.Price || 1;
const F16 = data["ENCHANTED_SPIDER_EYE"]?.Price || 1;
const F19 = data["SPIDER_EYE"]?.Price || 1;
const F28 = data["ESSENCE_SPIDER"]?.Price || 1;
const F22 = F28 * 5;
const F25 = F28 * 20;
const F31 = data["DARK_QUEENS_SOUL_DROP"]?.Price || 1;
const D1 = data["ARACHNE_FRAGMENT"]?.Price || 1;
const D2 = data["ENCHANTED_SPIDER_EYE"]?.Price || 1;
const D3 = data["ENCHANTED_STRING"]?.Price || 1;
const F34 = data["SOUL_STRING"]?.Price || 1;
const F37 = (D1*3) + (D2*8) + (D3*30);

var moneyArachne500 = ((((((F4 / 100) * 2) * F7 * 1) +
                         (((F4 / 100) * 100) * F10 * 3) +
                         (((F4 / 100) * 100) * F13 * 35) +
                         (((F4 / 100) * 100) * F16 * 3) +
                         (((F4 / 100) * 100) * F19 * 35) +
                         (((F4 / 100) * 25) * F22 * 1) +
                         (((F4 / 100) * 25) * F25 * 1) +
                         (((F4 / 100) * 100) * F28 * 30) +
                         (((F4 / 100) * 50) * F31 * 1) +
                         (((F4 / 100) * 100) * F31 * 1) +
                         (((F4 / 100) * 100) * F34 * 43) +
                         (((F4 / 100) * 100) * F34 * 14)) - (F4 * F37)) / 1000000).toFixed(2);



return `${moneyArachne500}M`; 
}

function updateArachne500(data) {
const Arachne500Money = calculateArachne500(data); 
document.getElementById('arachne500').innerHTML = Arachne500Money;
    localStorage.setItem('cached-arachne500', Arachne500Money); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateRainySlime(data) {


const A4 = 525; // rainy slime kills in 20 minutes
const A7 = data["POISON_SAMPLE"]?.Price || 1;
const A10 = 5; // looting




var moneyRainySlime = ((((((A4/5)*3)/100)*5) *(1+((A10*15)/100))*A7)/1000000).toFixed(2);




return `${moneyRainySlime}M`; 
}

function updateRainySlime(data) {
const RainySlimeMoney = calculateRainySlime(data); 
document.getElementById('rainy-slime').innerHTML = RainySlimeMoney;
    localStorage.setItem('cached-rainy-slime', RainySlimeMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateRat(data) {


const A4 = 27; // rats in 10 minutes
const A7 = data["CHEESE_FUEL"]?.Price || 1;
const A10 = data["RAT;4"]?.Price || 1;
const D6 = 5; // looting
const E6 = 327; // Magic Find


var moneyRat = (((((A4*6)*3*A7)*(1+((D6*15)/100)))+((((A4*6)*2*A7)/2)*(1+((D6*15)/100)))+((((A4*6)/100)*(0.2*(1+((D6*15)/100)*(1+(E6/100))))*A10)))/1000000).toFixed(2);




return `${moneyRat}M`; 
}

function updateRat(data) {
const RatMoney = calculateRat(data); 
document.getElementById('rat').innerHTML = RatMoney;
    localStorage.setItem('cached-rat', RatMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMineshaft(data) {


const E27 = 50; //Vanguard Seeker Perk
const G27 = 50; //Dead Man's Chest
const I27 = 100; //Gift of the Departed
const K27 = (((100*(6.5+((I27/5)/100)))/6.5)/100); //multiplier
const F7 = 100; //Topaz Weight
const F8 = 100; //Sapphire Weight
const F9 = 100; //Amethyst Weight
const F10 = 100; //Amber Weight
const F11 = 100; //Jade Weight
const F12 = 100; //Titanium Weight
const F13 = 100; //Umber Weight
const F14 = 100; //Tungsten Weight
const F15 = 100; //Ruby Weight
const F16 = 100; //Onyx Weight
const F17 = 100; //Aquamarine Weight
const F18 = 100; //Citrine Weight
const F19 = 100; //Peridot Weight
const F20 = 100; //Jasper Weight
const F21 = 100; //Opal Weight
const F22 = 100; //Fairy Weight
const F24 = F7+F8+F9+F10+F11+F12+F13+F14+F15+F16+F17+F18+F19+F20+F21+F22; //Total Weight
const G7 = (F7/F24)*100;
const G8 = (F8/F24)*100;
const G9 = (F9/F24)*100;
const G10 = (F10/F24)*100;
const G11 = (F11/F24)*100;
const G12 = (F12/F24)*100;
const G13 = (F13/F24)*100;
const G14 = (F14/F24)*100;
const G15 = (F15/F24)*100;
const G16 = (F16/F24)*100;
const G17 = (F17/F24)*100;
const G18 = (F18/F24)*100;
const G19 = (F19/F24)*100;
const G20 = (F20/F24)*100;
const G21 = (F21/F24)*100;
const G22 = (F22/F24)*100;
const A4 = 18; // Mineshafts in 1 hour
const K36 = 4; // Looting
const L36 = 203; // Magic Find
const I36 = 259; // Glacite Mob Kills in 1 hour
const G36 = 0.7; //avg minutes in mineshaft
const D36 = 168; //Enchanted Glacite mined in 5 minutes
const A9 = data["FLAWED_ONYX_GEM"]?.Price || 1;
const A12 = data["FINE_ONYX_GEM"]?.Price || 1;
const A15 = data["FLAWED_PERIDOT_GEM"]?.Price || 1;
const A18 = data["FINE_PERIDOT_GEM"]?.Price || 1;
const A21 = data["FLAWED_CITRINE_GEM"]?.Price || 1;
const A24 = data["FINE_CITRINE_GEM"]?.Price || 1;
const A27 = data["FLAWED_AQUAMARINE_GEM"]?.Price || 1;
const A30 = data["FINE_AQUAMARINE_GEM"]?.Price || 1;
const A33 = data["SUSPICIOUS_SCRAP"]?.Price || 1;
const A36 = data["GOBLIN_EGG"]?.Price || 1;
const A39 = data["GOBLIN_EGG_GREEN"]?.Price || 1;
const A42 = data["GOBLIN_EGG_YELLOW"]?.Price || 1;
const A45 = data["GOBLIN_EGG_RED"]?.Price || 1;
const A48 = data["ENCHANTED_UMBER"]?.Price || 1;
const A51 = data["ENCHANTED_TUNGSTEN"]?.Price || 1;
const A54 = data["ENCHANTED_GLACITE"]?.Price || 1;
const A57 = data["REFINED_UMBER"]?.Price || 1;
const A60 = data["REFINED_TUNGSTEN"]?.Price || 1;
const A63 = data["REFINED_MITHRIL"]?.Price || 1;
const A66 = data["REFINED_TITANIUM"]?.Price || 1;
const A69 = data["GLACITE_AMALGAMATION"]?.Price || 1;
const A72 = data["UMBER_KEY"]?.Price || 1;
const A75 = data["TUNGSTEN_KEY"]?.Price || 1;
const A78 = data["GLACITE_JEWEL"]?.Price || 1;
const A81 = data["BEJEWELED_HANDLE"]?.Price || 1;
const D39 = data["ENCHANTED_GLACITE"]?.Price || 1;
const D42 = data["GLACITE_JEWEL"]?.Price || 1;
const D45 = data["FINE_ONYX_GEM"]?.Price || 1;
const D48 = data["FINE_PERIDOT_GEM"]?.Price || 1;
const D51 = data["FINE_CITRINE_GEM"]?.Price || 1;
const D54 = data["FINE_AQUAMARINE_GEM"]?.Price || 1;
const D57 = data["GLACITE_SHARD"]?.Price || 1;





var moneyMineshaft = ((((((((I36/100)*4)*(1+(K36*0.15)))*D42)+((((I36/100)*5)*(1+(K36*0.15)))*D45)+((((I36/100)*5)*(1+(K36*0.15)))*D48)+((((I36/100)*5)*(1+(K36*0.15)))*D51)+((((I36/100)*5)*(1+(K36*0.15)))*D54)+((((I36/100)*5)*(1+(K36*0.15))*(1+(L36/100)))*D57))+((D36*12*D39)*(1-((G36*A4)/60)))+(((((G7+G8+G9+G10+G11+G12+G13+G14+G15+G16+G17+G18+G19+G20+G21)/100)*A4)*(2.5+(G27/100))/2)*((0.24399 * 10 * A9) + (0.1685 * 20 * A9) + (0.12862 * 40 * A9) + (0.08727 * 1 * A12) + (0.04441 * 2 * A12) + (0.24399 * 10 * A15) + (0.1685 * 20 * A15) + (0.12862 * 40 * A15) + (0.08727 * 1 * A18) + (0.04441 * 2 * A18) + (0.24399 * 10 * A21) + (0.1685 * 20 * A21) + (0.12862 * 40 * A21) + (0.08727 * 1 * A24) + (0.04441 * 2 * A24) + (0.24399 * 10 * A27) + (0.1685 * 20 * A27) + (0.12862 * 40 * A27) + (0.08727 * 1 * A30) + (0.04441 * 2 * A30) + (0.04441 * 1 * A33) + (0.13671 * 1 * A36) + (0.07031 * 2 * A36) + (0.03565 * 4 * A36) + (0.12047 * 1 * A39) + (0.06173 * 2 * A39) + (0.03125 * 4 * A39) + (0.12047 * 1 * A42) + (0.06173 * 2 * A42) + (0.03125 * 4 * A42) + (0.12047 * 1 * A45) + (0.06173 * 2 * A45) + (0.03125 * 4 * A45) + (0.08727 * 1 * A48) + (0.04441 * 2 * A48) + (0.01795 * 4 * A48) + (0.08727 * 1 * A51) + (0.04441 * 2 * A51) + (0.01795 * 4 * A51) + (0.08727 * 1 * A54) + (0.04441 * 2 * A54) + (0.01795 * 4 * A54) + (0.00451 * 1 * A57) + (0.00451 * 1 * A60) + (0.00631 * 1 * A63) + (0.00631 * 1 * A66) + (0.009 * 1 * A69) + (0.0018 * 1 * A72) + (0.0018 * 1 * A75) + (0.08727 * 1 * A78) + (0.04441 * 2 * A78) + (0.01348 * 1 * A81))))*K27)/1000000).toFixed(2);




return `${moneyMineshaft}M`; 
}

function updateMineshaft(data) {
const MineshaftMoney = calculateMineshaft(data); 
document.getElementById('mineshaft').innerHTML = MineshaftMoney;
    localStorage.setItem('cached-mineshaft', MineshaftMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculatePest(data) {


const A4 = 17; // Pest Spawns
const C4 = 304; //Bonus Pest Chance
const D4 = 1314; //Farming Fortune
const E4 = 61; //Pet Luck
const G8 = 0; //Enchanted Nether Wart
const G11 = 0; //Mutant Nether wart
const G14 = 0; //Enchanted Cactus Green
const G17 = 0; //Enchanted Cactus
const G20 = 0; //Enchanted carrot
const G23 = 840; //Enchanted sugar
const G26 = 0; //Enchanted Sugar Cane
const G29 = 0; //Enchanted melon
const G32 = 0; //Enchanted Melon Block
const G35 = 0; //Enchanted Pumpkins
const G38 = 0; //Polished Pumpkin
const G41 = 0; //Enchanted Cocoa Beans
const I8 = 0; //Enchanted Red Mushrooms
const I11 = 0; //Enchanted Brown Mushrooms
const I14 = 0; //Enchanted Red Block Mushrooms
const I17 = 0; //Enchanted Brown Block Mushrooms
const I20 = 0; //Enchanted Potato
const I23 = 0; //Enchanted Baked Potato
const I26 = 0; //Enchanted Hay Bale
const I29 = 0; //Enchanted Seeds
const A8 = data["ENCHANTED_WHEAT"]?.Price || 1;
const A11 = data["COMPOST"]?.Price || 1;
const A14 = data["HONEY_JAR"]?.Price || 1;
const A17 = data["DUNG"]?.Price || 1;
const A20 = data["PLANT_MATTER"]?.Price || 1;
const A23 = data["CHEESE_FUEL"]?.Price || 1;
const A26 = data["VINYL_PRETTY_FLY"]?.Price || 1;
const A29 = data["BEADY_EYES"]?.Price || 1;
const A32 = data["ENCHANTED_HAY_BALE"]?.Price || 1;
const B8 = data["ENCHANTED_CARROT"]?.Price || 1;
const B11 = data["ENCHANTED_GOLDEN_CARROT"]?.Price || 1;
const B14 = data["VINYL_CRICKET_CHOIR"]?.Price || 1;
const B17 = data["CHIRPING_STEREO"]?.Price || 1;
const B20 = data["ENCHANTED_CACTUS_GREEN"]?.Price || 1;
const B23 = data["ENCHANTED_CACTUS"]?.Price || 1;
const B26 = data["VINYL_DYNAMITES"]?.Price || 1;
const B29 = data["ATMOSPHERIC_FILTER"]?.Price || 1;
const C8 = data["ENCHANTED_POTATO"]?.Price || 1;
const C11 = data["ENCHANTED_BAKED_POTATO"]?.Price || 1;
const C14 = data["VINYL_CICADA_SYMPHONY"]?.Price || 1;
const C17 = data["ENCHANTMENT_SUNDER_6"]?.Price || 1;
const C20 = data["ENCHANTED_COCOA"]?.Price || 1;
const C23 = data["ENCHANTED_COOKIE"]?.Price || 1;
const C26 = data["VINYL_WINGS_OF_HARMONY"]?.Price || 1;
const C29 = data["WRIGGLING_LARVA"]?.Price || 1;
const D8 = data["ENCHANTED_PUMPKIN"]?.Price || 1;
const D11 = data["VINYL_RODENT_REVOLUTION"]?.Price || 1;
const D14 = data["POLISHED_PUMPKIN"]?.Price || 1;
const D17 = data["RAT;4"]?.Price || 1;
const D20 = data["ENCHANTED_RED_MUSHROOM"]?.Price || 1;
const D23 = data["ENCHANTED_BROWN_MUSHROOM"]?.Price || 1;
const D26 = data["ENCHANTED_HUGE_MUSHROOM_2"]?.Price || 1;
const D29 = data["ENCHANTED_HUGE_MUSHROOM_1"]?.Price || 1;
const D32 = data["SLUG;3"]?.Price || 1;
const D35 = data["SLUG;4"]?.Price || 1;
const E8 = data["ENCHANTED_SUGAR"]?.Price || 1;
const E11 = data["ENCHANTED_SUGAR_CANE"]?.Price || 1;
const E14 = data["VINYL_BUZZIN_BEATS"]?.Price || 1;
const E17 = data["CLIPPED_WINGS"]?.Price || 1;
const E20 = data["ENCHANTED_NETHER_STALK"]?.Price || 1;
const E23 = data["ENCHANTMENT_PESTERMINATOR_1"]?.Price || 1;
const E26 = data["MUTANT_NETHER_STALK"]?.Price || 1;
const E29 = data["VINYL_BEETLE"]?.Price || 1;
const F8 = data["ENCHANTED_MELON"]?.Price || 1;
const F11 = data["ENCHANTED_MELON_BLOCK"]?.Price || 1;
const F14 = data["BOOKWORM_BOOK"]?.Price || 1;
const F17 = data["VINYL_EARTHWORM_ENSEMBLE"]?.Price || 1;
const H8 = data["ENCHANTED_NETHER_STALK"]?.Price || 1;
const H11 = data["MUTANT_NETHER_STALK"]?.Price || 1;
const H14 = data["ENCHANTED_CACTUS_GREEN"]?.Price || 1;
const H17 = data["ENCHANTED_CACTUS"]?.Price || 1;
const H20 = data["ENCHANTED_CARROT"]?.Price || 1;
const H23 = data["ENCHANTED_SUGAR"]?.Price || 1;
const H26 = data["ENCHANTED_SUGAR_CANE"]?.Price || 1;
const H29 = data["ENCHANTED_MELON"]?.Price || 1;
const H32 = data["ENCHANTED_MELON_BLOCK"]?.Price || 1;
const H35 = data["ENCHANTED_PUMPKIN"]?.Price || 1;
const H38 = data["POLISHED_PUMPKIN"]?.Price || 1;
const H41 = data["ENCHANTED_COCOA"]?.Price || 1;
const J8 = data["ENCHANTED_RED_MUSHROOM"]?.Price || 1;
const J11 = data["ENCHANTED_BROWN_MUSHROOM"]?.Price || 1;
const J14 = data["ENCHANTED_HUGE_MUSHROOM_2"]?.Price || 1;
const J17 = data["ENCHANTED_HUGE_MUSHROOM_1"]?.Price || 1;
const J20 = data["ENCHANTED_POTATO"]?.Price || 1;
const J23 = data["ENCHANTED_BAKED_POTATO"]?.Price || 1;
const J26 = data["ENCHANTED_WHEAT"]?.Price || 1;
const J29 = data["ENCHANTED_SEEDS"]?.Price || 1;




var moneyPest = ((
(
(((A4 * (1 + (C4 / 100))) / 100) * 100 * 0.1 * ((A11 + A14 + A17 + A20 + A23) / 5))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * A8))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.02 * (1 + (D4 / 600))) * A26))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.015 * (1 + (D4 / 600))) * A29))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.005 * (1 + (D4 / 600))) * A32))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * B8 * 3))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.005 * (1 + (D4 / 600))) * B11 * 12))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.02 * (1 + (D4 / 600))) * B14))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.005 * (1 + (D4 / 600))) * B17))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * C8 * 3))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.005 * (1 + (D4 / 600))) * C11 * 10))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.02 * (1 + (D4 / 600))) * C14))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.005 * (1 + (D4 / 600))) * C17))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * D8))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.02 * (1 + (D4 / 600))) * D11))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.005 * (1 + (D4 / 600))) * D14 * 3))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.002 * (1 + ((D4 + E4) / 600))) * D17))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * E8 * 2))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.005 * (1 + (D4 / 600))) * E11 * 6))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.02 * (1 + (D4 / 600))) * E14))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.01 * (1 + (D4 / 600))) * E17))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * F8 * 5))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.005 * (1 + (D4 / 600))) * F11 * 15))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.02 * (1 + (D4 / 600))) * F14))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.02 * (1 + (D4 / 600))) * F17))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * B20 * 2))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.005 * (1 + (D4 / 600))) * B23 * 6))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.02 * (1 + (D4 / 600))) * B26))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.0025 * (1 + (D4 / 600))) * B29))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * C20 * 3))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.005 * (1 + (D4 / 600))) * C23 * 11))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.02 * (1 + (D4 / 600))) * C26))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.005 * (1 + (D4 / 600))) * C29))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * ((D20 + D23) / 2)))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.0025 * (1 + (D4 / 600))) * D26 * 15))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.0025 * (1 + (D4 / 600))) * D29 * 15))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.005 * (1 + ((D4 + E4) / 600))) * D32))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.001 * (1 + ((D4 + E4) / 600))) * D35))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * E20 * 3))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.035 * (1 + (D4 / 600))) * E23))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.005 * (1 + (D4 / 600))) * E26 * 9))
+ ((((A4 * (1 + (C4 / 100))) / 100) * 10 * (0.02 * (1 + (D4 / 600))) * E29))
+ (
(G8 * H8) + (G11 * H11) + (G14 * H14) + (G17 * H17) + (G20 * H20) + (G23 * H23)
+ (G26 * H26) + (G29 * H29) + (G32 * H32) + (G35 * H35) + (G38 * H38) + (G41 * H41)
+ (I8 * J8) + (I11 * J11) + (I14 * J14) + (I17 * J17) + (I20 * J20) + (I23 * J23)
+ (I26 * J26) + (I29 * J29)
)
)
) / 1000000).toFixed(2);




return `${moneyPest}M`; 
}

function updatePest(data) {
const PestMoney = calculatePest(data); 
document.getElementById('pest-farming').innerHTML = PestMoney;
    localStorage.setItem('cached-pest-farming', PestMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateHighlite(data) {

const A3 = 266; // Youngite in 5 minutes
const A6 = 78; // Timite in 5 minutes
const A9 = 51; // Obsolite in 5 minutes
const A11 = data["HIGHLITE"]?.Price || 1;

var moneyHighlite = ((((60/((5/(A3/32))+(5/(A6/32))+(5/(A9/16))))*A11)/1000000)).toFixed(2);

return `${moneyHighlite}M`; 
}

function updateHighlite(data) {
const HighliteMoney = calculateHighlite(data); 
document.getElementById('highlite').innerHTML = HighliteMoney;
    localStorage.setItem('cached-highlite', HighliteMoney);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateDiscrite(data) {

const A3 = 266; // Youngite in 5 minutes
const A6 = 78; // Timite in 5 minutes
const A9 = 51; // Obsolite in 5 minutes
const A11 = data["DISCRITE"]?.Price || 1;

var moneyDiscrite = ((((60/((5/(A3/64))+(5/(A6/256))+(5/(A9/256))))*A11)/1000000)).toFixed(2);

return `${moneyDiscrite}M`; 
}

function updateDiscrite(data) {
const DiscriteMoney = calculateDiscrite(data); 
document.getElementById('discrite').innerHTML = DiscriteMoney;
    localStorage.setItem('cached-discrite', DiscriteMoney);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateExtremelyRealShuriken(data) {

const A3 = 1400; // Sun Gecko Essence in 1 hour
const A6 = data["FAKE_SHURIKEN"]?.Price || 1;

var moneyExtremelyRealShuriken = (((((A3/32)*16)*A6)/1000000)).toFixed(2);

return `${moneyExtremelyRealShuriken}M`; 
}

function updateExtremelyRealShuriken(data) {
const ExtremelyRealShurikenMoney = calculateExtremelyRealShuriken(data); 
document.getElementById('ExtremelyRealShuriken').innerHTML = ExtremelyRealShurikenMoney;
    localStorage.setItem('cached-ExtremelyRealShuriken', ExtremelyRealShurikenMoney);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateGrandmaKnittingNeedle(data) {

const A3 = 1400; // Sun Gecko Essence in 1 hour
const A6 = data["GRANDMAS_KNITTING_NEEDLE"]?.Price || 1;

var moneyGrandmaKnittingNeedle = ((((A3/50)*A6)/1000000)).toFixed(2);

return `${moneyGrandmaKnittingNeedle}M`; 
}

function updateGrandmaKnittingNeedle(data) {
const GrandmaKnittingNeedleMoney = calculateGrandmaKnittingNeedle(data); 
document.getElementById('GrandmaKnittingNeedle').innerHTML = GrandmaKnittingNeedleMoney;
    localStorage.setItem('cached-GrandmaKnittingNeedle', GrandmaKnittingNeedleMoney);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBezosBZ(data) {
const L20 = 62; 
const L23 = 5;
const J43 = data["BEZOS"]?.Price || 1;

var moneyBezosBZ = ((((L20*12*0.1*(1+(L23*0.15)))*J43)/1000000)).toFixed(2);

return `${moneyBezosBZ}M`; 
}

function updateBezosBZ(data) {
const MoneyBezosBZ = calculateBezosBZ(data); 
document.getElementById('BezosBZ').innerHTML = MoneyBezosBZ;
    localStorage.setItem('cached-BezosBZ', MoneyBezosBZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateWitherSkeletonBZ(data) {
const L20 = 169; 
const L23 = 5;
const K43 = data["WITHER_SOUL"]?.Price || 1;

var moneyWitherSkeletonBZ = ((((L20*12*0.2*(1+(0.15*L23)))*K43)/1000000)).toFixed(2);

return `${moneyWitherSkeletonBZ}M`; 
}

function updateWitherSkeletonBZ(data) {
const MoneyWitherSkeletonBZ = calculateWitherSkeletonBZ(data); 
document.getElementById('WitherSkeletonBZ').innerHTML = MoneyWitherSkeletonBZ;
    localStorage.setItem('cached-WitherSkeletonBZ', MoneyWitherSkeletonBZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMooshroomCowBZ(data) {
const L20 = 272; 
const L23 = 5;
const K45 = data["DIGESTED_MUSHROOMS"]?.Price || 1;

var moneyMooshroomCowBZ = ((((L20*12*0.2*(1+(0.15*L23)))*K45)/1000000)).toFixed(2);

return `${moneyMooshroomCowBZ}M`; 
}

function updateMooshroomCowBZ(data) {
const MoneyMooshroomCowBZ = calculateMooshroomCowBZ(data); 
document.getElementById('MooshroomCowBZ').innerHTML = MoneyMooshroomCowBZ;
    localStorage.setItem('cached-MooshroomCowBZ', MoneyMooshroomCowBZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMagmaCubeBZ(data) {
const L20 = 0; // Magma cube kills in 5 minutes
const L23 = 326; // Magma cube  rider kills in 5 minutes
const L26 = 5; //looting
const K54 = data["MAGMA_CHUNK"]?.Price || 1;

var moneyMagmaCubeBZ = (((((L20*12*0.2*(1+(L26*0.15)))+(L23*12*0.25*(1+(L26*0.15))))*K54)/1000000)).toFixed(2);

return `${moneyMagmaCubeBZ}M`; 
}

function updateMagmaCubeBZ(data) {
const MoneyMagmaCubeBZ = calculateMagmaCubeBZ(data); 
document.getElementById('MagmaCubeBZ').innerHTML = MoneyMagmaCubeBZ;
    localStorage.setItem('cached-MagmaCubeBZ', MoneyMagmaCubeBZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateWitherSpecterBZ(data) {
const A3 = 379; //Specter kills in 5 minutes 
const A6 = 4; //looting
const A9 = data["SPECTRE_DUST"]?.Price || 1; //specter dust price

var moneyWitherSpecterBZ = ((((A3*12*0.2*(1+(A6*0.15)))*A9)/1000000)).toFixed(2);

return `${moneyWitherSpecterBZ}M`; 
}

function updateWitherSpecterBZ(data) {
const MoneyWitherSpecterBZ = calculateWitherSpecterBZ(data); 
document.getElementById('WitherSpecterBZ').innerHTML = MoneyWitherSpecterBZ;
    localStorage.setItem('cached-WitherSpecterBZ', MoneyWitherSpecterBZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateFlaresBZ(data) {
const A3 = 225; //Flare kills in 5 minutes
const A6 = 5; //looting
const A9 = data["GAZING_PEARL"]?.Price || 1;

var moneyFlaresBZ = ((A3*12*0.05*(1+(A6*0.15))*A9)/1000000).toFixed(2);

return `${moneyFlaresBZ}M`; 
}

function updateFlaresBZ(data) {
const MoneyFlaresBZ = calculateFlaresBZ(data); 
document.getElementById('FlaresBZ').innerHTML = MoneyFlaresBZ;
    localStorage.setItem('cached-FlaresBZ', MoneyFlaresBZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateFlamingSpiderBZ(data) {
const A3 = 392; //Flaming spider kills in 5 minutes
const A6 = 0; //Magma cube rider kills in 5 minutes
const A5 = 5; //looting
const A9 = data["BURNING_EYE"]?.Price || 1;
const A12 = data["MAGMA_CHUNK"]?.Price || 1;

var moneyFlamingSpiderBZ = ((((A3*12*0.2*(1+(A5*0.15)))*A9)+((A6*12*0.25*(1+(A5*0.15)))*A12))/1000000).toFixed(2);

return `${moneyFlamingSpiderBZ}M`; 
}

function updateFlamingSpiderBZ(data) {
const MoneyFlamingSpiderBZ = calculateFlamingSpiderBZ(data); 
document.getElementById('FlamingSpiderBZ').innerHTML = MoneyFlamingSpiderBZ;
    localStorage.setItem('cached-FlamingSpiderBZ', MoneyFlamingSpiderBZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculatePackMagmaCubeBZ(data) {
const A3 = 194; 
const A6 = 5;
const A9 = data["MAGMAG"]?.Price || 1;

var moneyPackMagmaCubeBZ = (((A3*12*0.1*(1+(A6*0.15)))*A9)/1000000).toFixed(2);

return `${moneyPackMagmaCubeBZ}M`; 
}

function updatePackMagmaCubeBZ(data) {
const MoneyPackMagmaCubeBZ = calculatePackMagmaCubeBZ(data); 
document.getElementById('PackMagmaCubeBZ').innerHTML = MoneyPackMagmaCubeBZ;
    localStorage.setItem('cached-PackMagmaCubeBZ', MoneyPackMagmaCubeBZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateCinderBatBZ(data) {
const A3 = 19; //Cinder Bats kills in 5 minutes
const A6 = 5; //Looting
const A5 = 220; //Magicfind
const A9 = data["FLAMES"]?.Price || 1;

var moneyCinderBatBZ = ((((A3*12*0.01*(1+(A6*0.15))*(1+(A5/100)))*A9)/1000000)).toFixed(2);

return `${moneyCinderBatBZ}M`; 
}

function updateCinderBatBZ(data) {
const MoneyCinderBatBZ = calculateCinderBatBZ(data); 
document.getElementById('CinderBatBZ').innerHTML = MoneyCinderBatBZ;
    localStorage.setItem('cached-CinderBatBZ', MoneyCinderBatBZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateKadaKnightBZ(data) {
const A3 = 226; //Kadaknight kills in 5 minutes
const A6 = 5; //looting
const A9 = data["KADA_LEAD"]?.Price || 1;

var moneyKadaKnightBZ = (((A3*12*0.2*(1+(A6*0.15)))*A9)/1000000).toFixed(2);

return `${moneyKadaKnightBZ}M`; 
}

function updateKadaKnightBZ(data) {
const MoneyKadaKnightBZ = calculateKadaKnightBZ(data); 
document.getElementById('KadaKnightBZ').innerHTML = MoneyKadaKnightBZ;
    localStorage.setItem('cached-KadaKnightBZ', MoneyKadaKnightBZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateDivingGhastBZ(data) {
const A3 = 447; //Diving Ghast kills /hour
const A6 = 5;
const A9 = data["TENTACLE_MEAT"]?.Price || 1;

var moneyDivingGhastBZ = (((A3*0.1*(1+(A6*0.15)))*A9)/1000000).toFixed(2);

return `${moneyDivingGhastBZ}M`; 
}

function updateDivingGhastBZ(data) {
const MoneyDivingGhastBZ = calculateDivingGhastBZ(data); 
document.getElementById('DivingGhastBZ').innerHTML = MoneyDivingGhastBZ;
    localStorage.setItem('cached-DivingGhastBZ', MoneyDivingGhastBZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBladeSoulBZ(data) {
const A3 = 108;
const A5 = data["HALLOWED_SKULL"]?.Price || 1;
const A6 = data["RAGNAROCK_AXE"]?.Price || 1;
const A9 = data["MAGMA_URCHIN"]?.Price || 1;




var moneyBladeSoulBZ = (((A3*A5)+((((A3/4)*5)/100)*2*A9)+(((A3)/100)*0.5*A6))/1000000).toFixed(2);




return `${moneyBladeSoulBZ}M`; 
}

function updateBladeSoulBZ(data) {
const BladeSoulBZMoney = calculateBladeSoulBZ(data); 
document.getElementById('BladeSoulBZ').innerHTML = BladeSoulBZMoney;
    localStorage.setItem('cached-BladeSoulBZ', BladeSoulBZMoney); 
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateAshfangBZ(data) {
const A3 = 45; //Ashfang kills in 1 hour
const A5 = data["LUMINO_FIBER"]?.Price || 1;
const A6 = data["FIRE_VEIL_WAND"]?.Price || 1;
const A9 = data["MAGMA_URCHIN"]?.Price || 1;




var moneyAshfangBZ = (((A3*A5)+((((A3/4)*5)/100)*2*A9)+(((A3)/100)*0.5*A6))/1000000).toFixed(2);




return `${moneyAshfangBZ}M`; 
}

function updateAshfangBZ(data) {
const AshfangBZMoney = calculateAshfangBZ(data); 
document.getElementById('AshfangBZ').innerHTML = AshfangBZMoney;
    localStorage.setItem('cached-AshfangBZ', AshfangBZMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMagmaBossBZ(data) {

const A3 = 21; //Magma Boss kills in 1 hour
const A5 = data["MAGMA_CUBE;3"]?.Price || 1;
const A6 = data["MAGMA_CUBE;4"]?.Price || 1;
const A9 = data["MAGMA_URCHIN"]?.Price || 1;
const A15 = data["FIRE_FURY_STAFF"]?.Price || 1;
const A1 = data["REKINDLED_EMBER_FRAGMENT"]?.Price || 1;
const A2 = data["COMPACT_OOZE"]?.Price || 1;


var moneyMagmaBossBZ = ((((A3*A1)+(A3*A2))+((((A3/4)*5)/100)*2*A9)+(((A3)/100)*0.4*A6)+(((A3)/100)*0.5*A15)+(((A3)/100)*1.5*A5))/1000000).toFixed(2);




return `${moneyMagmaBossBZ}M`; 
}

function updateMagmaBossBZ(data) {
const MagmaBossBZMoney = calculateMagmaBossBZ(data); 
document.getElementById('MagmaBossBZ').innerHTML = MagmaBossBZMoney;
    localStorage.setItem('cached-MagmaBossBZ', MagmaBossBZMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateVanquisher(data) {
const A4 = 8616;
const D2 = 45;
const A9 = data["CORRUPTED_NETHER_STAR"]?.Price || 1;

var moneyVanquisher = (((A4/640)*(1+(D2/100))*3*A9)/1000000).toFixed(2);

return `${moneyVanquisher}M`; 
}

function updateVanquisher(data) {
const MoneyVanquisher = calculateVanquisher(data); 
document.getElementById('Vanquisher').innerHTML = MoneyVanquisher;
    localStorage.setItem('cached-Vanquisher', MoneyVanquisher);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateXYZ(data) {
const A3 = 56; //X in 15 minutes
const A6 = 18; //Y in 15 minutes
const A9 = 22; //Z in 15 minutes
const A12 = data["X"]?.Price || 1;
const A15 = data["Y"]?.Price || 1;
const A18 = data["Z"]?.Price || 1;

var moneyXYZ = ((((A3*A12*4))+(A6*A15*4)+(A9*A18*4))/1000000).toFixed(2);

return `${moneyXYZ}M`; 
}

function updateXYZ(data) {
const MoneyXYZ = calculateXYZ(data); 
document.getElementById('XYZ').innerHTML = MoneyXYZ;
    localStorage.setItem('cached-XYZ', MoneyXYZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateT4VoidgloomsFD(data) {
// User inputs (no default values)
const N21 = 54; // time to kill & spawn in seconds
const N22 = 0; // time to kill & spawn in minutes
const N24 = 140; // Magic find
const C23 = 1577; // Enderman kills in 1 hour

// Prices from data
const A7  = data["NULL_SPHERE"]?.Price || 1;
const A10 = data["TWILIGHT_ARROW_POISON"]?.Price || 1;
const A13 = data["RUNE_ENDERSNAKE;1"]?.Price || 1;
const A16 = data["SUMMONING_EYE"]?.Price || 1;
const A19 = data["ENCHANTMENT_MANA_STEAL_1"]?.Price || 1;
const A22 = data["TRANSMISSION_TUNER"]?.Price || 1;
const A25 = data["NULL_ATOM"]?.Price || 1;
const A28 = data["HAZMAT_ENDERMAN"]?.Price || 1;
const A31 = data["POCKET_ESPRESSO_MACHINE"]?.Price || 1;
const A34 = data["ENCHANTMENT_SMARTY_PANTS_1"]?.Price || 1;
const A37 = data["RUNE_DRAGON;1"]?.Price || 1;
const A40 = data["HANDY_BLOOD_CHALICE"]?.Price || 1;
const A43 = data["SINFUL_DICE"]?.Price || 1;
const A46 = data["EXCEEDINGLY_RARE_ENDER_ARTIFACT_UPGRADER"]?.Price || 1;
const A49 = data["ETHERWARP_MERGER"]?.Price || 1;
const A52 = data["PET_SKIN_ENDERMAN_SLAYER"]?.Price || 1;
const A55 = data["JUDGEMENT_CORE"]?.Price || 1;
const A58 = data["RUNE_ENCHANT;1"]?.Price || 1;
const A61 = data["ENCHANTMENT_ENDER_SLAYER_7"]?.Price || 1;
const C11 = data["FINAL_DESTINATION_BOOTS"]?.Price || 1;
const C14 = data["FINAL_DESTINATION_LEGGINGS"]?.Price || 1;
const C17 = data["FINAL_DESTINATION_CHESTPLATE"]?.Price || 1;
const C20 = data["FINAL_DESTINATION_HELMET"]?.Price || 1;
const N32 = data["FINAL_DESTINATION_BOOTS;10K"]?.Price || 1;
const N35 = data["FINAL_DESTINATION_LEGGINGS;10K"]?.Price || 1;
const Q32 = data["FINAL_DESTINATION_CHESTPLATE;10K"]?.Price || 1;
const Q35 = data["FINAL_DESTINATION_HELMET;10K"]?.Price || 1;

var moneyVoid = (
(
(
(((3600 / ((N22 * 60) + N21)) * (A7 * 130)) +
 ((((3600 / ((N22 * 60) + N21)) * 12.704) / 100) * A10) +
 ((((3600 / ((N22 * 60) + N21)) * 5.298) / 100) * A13) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(0.565 * (1 + (N24 / 100)), 5)) / 100) * A16) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(4.235 * (1 + (N24 / 100)), 5)) / 100) * A19) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(2.177 * (1 + (N24 / 100)), 5)) / 100) * A22) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(4.94 * (1 + (N24 / 100)), 5)) / 100) * A25) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(1.553 * (1 + (N24 / 100)), 5)) / 100) * A28) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(0.388 * (1 + (N24 / 100)), 5)) / 100) * A31) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(1.764 * (1 + (N24 / 100)), 5)) / 100) * A34) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(0.662 * (1 + (N24 / 100)), 5)) / 100) * A37) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(0.176 * (1 + (N24 / 100)), 5)) / 100) * A40) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(0.459 * (1 + (N24 / 100)), 5)) / 100) * A43) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(0.028 * (1 + (N24 / 100)), 5)) / 100) * A46) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(0.423 * (1 + (N24 / 100)), 5)) / 100) * A49) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(0.166 * (1 + (N24 / 100)), 5)) / 100) * A52) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(0.056 * (1 + (N24 / 100)), 5)) / 100) * A55) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(0.046 * (1 + (N24 / 100)), 5)) / 100) * A58) +
 ((((3600 / ((N22 * 60) + N21)) * Math.min(0.014 * (1 + (N24 / 100)), 5)) / 100) * A61)
) +
((3600 / ((N22 * 60) + N21)) * (A55 / (885562 / 500)))
) + (((N32 - C11) + (N35 - C14) + (Q32 - C17) + (Q35 - C20)) / (10000 / C23)) - ((3600 / ((N22 * 60) + N21)) * 50000)
) / 1000000);


return `${moneyVoid.toFixed(2)}M`;
}

function updateT4VoidgloomsFD(data) {
const MoneyT4VoidgloomsFD = calculateT4VoidgloomsFD(data); 
document.getElementById('T4VoidgloomsFD').innerHTML = MoneyT4VoidgloomsFD;
    localStorage.setItem('cached-T4VoidgloomsFD', MoneyT4VoidgloomsFD);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateIce(data) {
const A3 = 24; // Enchanted Ice in 5 minutes
const A5 = data["ENCHANTED_ICE"]?.Price || 1;

var moneyIce = ((A3*12*A5)/1000000).toFixed(2);

return `${moneyIce}M`; 
}

function updateIce(data) {
const MoneyIce = calculateIce(data); 
document.getElementById('Ice').innerHTML = MoneyIce;
    localStorage.setItem('cached-Ice', MoneyIce);
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculatePelts(data) {
const A3 = 1200; // Pelts per hour
const A6 = data["TRAPPER_DEN_TRAVEL_SCROLL"]?.Price || 1;
const A9 = data["TALBOTS_THEODOLITE"]?.Price || 1;
const A12 = data["PELT_BELT"]?.Price || 1;
const A15 = data["TRAPPER_CREST"]?.Price || 1;
const A18 = data["BROWN_BANDANA"]?.Price || 1;
const A21 = data["POTION_stinky_cheese"]?.Price || 1;
const A24 = data["PEST_VEST"]?.Price || 1;

let TrapperScroll = ((((A3/100)*A6)/1000000));
let Theodolite = ((((A3/80)*A9)/1000000));
let PeltBelt = ((((A3/250)*A12)/1000000));
let TrapperCrest = ((((A3/340)*A15)/1000000));
let BrownBandana = ((((A3/200)*A18)/1000000));
let StinkyCheese = ((((A3/40)*A21)/1000000));
let PestVest = ((((A3/250)*A24)/1000000));

let moneyPelts = Math.max(TrapperScroll, Theodolite, PeltBelt, TrapperCrest, BrownBandana, StinkyCheese, PestVest).toFixed(2);
return `${moneyPelts}M`;

}


function updatePelts(data) {
const MoneyPelts = calculatePelts(data); 
document.getElementById('Pelts').innerHTML = MoneyPelts;
    localStorage.setItem('cached-Pelts', MoneyPelts);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateKuudraT5(data) {
const Z300 = 0; // Time to do 1 run in Seconds
const Z400 = 2; // Time to do 1 run in Minutes
const A4 = Number((Z300 + (Z400 * 60))); // Time to do 1 run in seconds with minute conversion

//Loot table
const A7 = data["MANDRAA"]?.Price || 1;
const A10 = data["KUUDRA_MANDIBLE"]?.Price || 1;
const A13 = data["BURNING_KUUDRA_CORE"]?.Price || 1;
const A16 = data["RUNIC_STAFF"]?.Price || 1;
const A19 = data["HOLLOW_WAND"]?.Price || 1;
const A22 = data["ENCHANTMENT_FATAL_TEMPO_1"]?.Price || 1;
const A25 = data["ENCHANTMENT_INFERNO_1"]?.Price || 1;
const A28 = data["WHEEL_OF_FATE"]?.Price || 1;
const A31 = data["ENCHANTMENT_STRONG_MANA_5"]?.Price || 1;
const A34 = data["ENCHANTMENT_FEROCIOUS_MANA_5"]?.Price || 1;
const A37 = data["ENCHANTMENT_HARDENED_MANA_5"]?.Price || 1;
const A40 = data["ENCHANTMENT_MANA_VAMPIRE_5"]?.Price || 1;
const A43 = data["ATTRIBUTE_SHARD_MIDAS_TOUCH_IV_"]?.Price || 1;
const A46 = data["ATTRIBUTE_SHARD_COMBO_IV_"]?.Price || 1;
const A49 = data["ATTRIBUTE_SHARD_UNDEAD_IV_"]?.Price || 1;
const A52 = data["ATTRIBUTE_SHARD_ARACHNO_IV_"]?.Price || 1;
const A55 = data["ATTRIBUTE_SHARD_§bSPEED_IV_"]?.Price || 1;
const A58 = data["ATTRIBUTE_SHARD_MANA_POOL_IV_"]?.Price || 1;
const A61 = data["ATTRIBUTE_SHARD_§bEXPERIENCE_IV_"]?.Price || 1;
const A64 = data["ATTRIBUTE_SHARD_LIFE_REGENERATION_IV_"]?.Price || 1;
const A67 = data["ATTRIBUTE_SHARD_UNDEAD_RESISTANCE_IV_"]?.Price || 1;
const A70 = data["ATTRIBUTE_SHARD_ARACHNO_RESISTANCE_IV_"]?.Price || 1;
const A73 = data["ATTRIBUTE_SHARD_§bHUNTER_IV_"]?.Price || 1;
const A76 = data["ATTRIBUTE_SHARD_INFECTION_IV_"]?.Price || 1;
const A79 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_IV_"]?.Price || 1;
const A82 = data["ATTRIBUTE_SHARD_FISHERMAN_IV_"]?.Price || 1;
const A85 = data["ATTRIBUTE_SHARD_FISHING_SPEED_IV_"]?.Price || 1;
const A88 = data["ATTRIBUTE_SHARD_DOUBLE_HOOK_IV_"]?.Price || 1;
const A91 = data["ATTRIBUTE_SHARD_TROPHY_HUNTER_IV_"]?.Price || 1;
const A94 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_IV_"]?.Price || 1;
const A97 = data["ATTRIBUTE_SHARD_ATTACK_SPEED_IV_"]?.Price || 1;
const A100 = data["ATTRIBUTE_SHARD_ELITE_IV_"]?.Price || 1;
const A103 = data["ATTRIBUTE_SHARD_LIFE_RECOVERY_IV_"]?.Price || 1;
const A106 = data["ATTRIBUTE_SHARD_LIFELINE_IV_"]?.Price || 1;
const A109 = data["ATTRIBUTE_SHARD_BREEZE_IV_"]?.Price || 1;
const A112 = data["ATTRIBUTE_SHARD_IGNITION_IV_"]?.Price || 1;
const A115 = data["ATTRIBUTE_SHARD_MANA_STEAL_IV_"]?.Price || 1;
const A118 = data["ATTRIBUTE_SHARD_MANA_REGENERATION_IV_"]?.Price || 1;
const A121 = data["ATTRIBUTE_SHARD_VETERAN_IV_"]?.Price || 1;
const A124 = data["ATTRIBUTE_SHARD_VITALITY_IV_"]?.Price || 1;
const A127 = data["ATTRIBUTE_SHARD_ENDER_RESISTANCE_IV_"]?.Price || 1;
const A130 = data["ATTRIBUTE_SHARD_DOMINANCE_IV_"]?.Price || 1;
const A133 = data["ATTRIBUTE_SHARD_BLAZING_IV_"]?.Price || 1;
const A136 = data["ATTRIBUTE_SHARD_BLAZING_RESISTANCE_IV_"]?.Price || 1;
const A139 = data["ATTRIBUTE_SHARD_WARRIOR_IV_"]?.Price || 1;
const A142 = data["ATTRIBUTE_SHARD_DEADEYE_IV_"]?.Price || 1;
const A145 = data["ATTRIBUTE_SHARD_FORTITUDE_IV_"]?.Price || 1;
const A148 = data["ATTRIBUTE_SHARD_MAGIC_FIND_IV_"]?.Price || 1;
const A151 = data["ESSENCE_CRIMSON"]?.Price || 1;
const A154 = data["ENCHANTED_MYCELIUM"]?.Price || 1;
const Z100 = data["CORRUPTED_NETHER_STAR"]?.Price || 1; //Nether Stars (Added)
const Z200 = data["KUUDRA_TEETH"]?.Price || 1; //Kuudra Teeth (Added)
const Z1 = data["CRIMSON_HELMET"]?.Price || 1;
const Z2 = data["CRIMSON_CHESTPLATE"]?.Price || 1;
const Z3 = data["CRIMSON_LEGGINGS"]?.Price || 1;
const Z4 = data["CRIMSON_BOOTS"]?.Price || 1;
const Z5 = data["AURORA_HELMET"]?.Price || 1;
const Z6 = data["AURORA_CHESTPLATE"]?.Price || 1;
const Z7 = data["AURORA_LEGGINGS"]?.Price || 1;
const Z8 = data["AURORA_BOOTS"]?.Price || 1;
const Z9 = data["TERROR_HELMET"]?.Price || 1;
const Z10 = data["TERROR_CHESTPLATE"]?.Price || 1;
const Z11 = data["TERROR_LEGGINGS"]?.Price || 1;
const Z12 = data["TERROR_BOOTS"]?.Price || 1;
const Z13 = data["HOLLOW_HELMET"]?.Price || 1;
const Z14 = data["HOLLOW_CHESTPLATE"]?.Price || 1;
const Z15 = data["HOLLOW_LEGGINGS"]?.Price || 1;
const Z16 = data["HOLLOW_BOOTS"]?.Price || 1;
const Z17 = data["FERVOR_HELMET"]?.Price || 1;
const Z18 = data["FERVOR_CHESTPLATE"]?.Price || 1;
const Z19 = data["FERVOR_LEGGINGS"]?.Price || 1;
const Z20 = data["FERVOR_BOOTS"]?.Price || 1;
const Z21 = data["MOLTEN_BELT"]?.Price || 1;
const Z22 = data["MOLTEN_CLOAK"]?.Price || 1;
const Z23 = data["MOLTEN_BLACELET"]?.Price || 1;
const Z24 = data["MOLTEN_NECKLACE"]?.Price || 1;



//Fervor armor
//Fervor Helmet
const D7 = data["FERVOR_HELMET_ARACHNO_RESISTANCE_V_"]?.Price; //Arachno Resistence
const D8 = data["FERVOR_HELMET_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const D9 = data["FERVOR_HELMET_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const D10 = data["FERVOR_HELMET_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const D11 = data["FERVOR_HELMET_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const D12 = data["FERVOR_HELMET_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const D13 = data["FERVOR_HELMET_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const D14 = data["FERVOR_HELMET_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const D15 = data["FERVOR_HELMET_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const D16 = data["FERVOR_HELMET_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const D17 = data["FERVOR_HELMET_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const D18 = data["FERVOR_HELMET_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const D19 = data["FERVOR_HELMET_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const D20 = data["FERVOR_HELMET_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const D21 = data["FERVOR_HELMET_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const D22 = data["FERVOR_HELMET_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Fervor Chestplate
const E7 = data["FERVOR_CHESTPLATE_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const E8 = data["FERVOR_CHESTPLATE_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const E9 = data["FERVOR_CHESTPLATE_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const E10 = data["FERVOR_CHESTPLATE_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const E11 = data["FERVOR_CHESTPLATE_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const E12 = data["FERVOR_CHESTPLATE_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const E13 = data["FERVOR_CHESTPLATE_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const E14 = data["FERVOR_CHESTPLATE_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const E15 = data["FERVOR_CHESTPLATE_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const E16 = data["FERVOR_CHESTPLATE_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const E17 = data["FERVOR_CHESTPLATE_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const E18 = data["FERVOR_CHESTPLATE_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const E19 = data["FERVOR_CHESTPLATE_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const E20 = data["FERVOR_CHESTPLATE_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const E21 = data["FERVOR_CHESTPLATE_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const E22 = data["FERVOR_CHESTPLATE_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Fervor Leggings
const F7 = data["FERVOR_LEGGINGS_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const F8 = data["FERVOR_LEGGINGS_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const F9 = data["FERVOR_LEGGINGS_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const F10 = data["FERVOR_LEGGINGS_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const F11 = data["FERVOR_LEGGINGS_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const F12 = data["FERVOR_LEGGINGS_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const F13 = data["FERVOR_LEGGINGS_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const F14 = data["FERVOR_LEGGINGS_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const F15 = data["FERVOR_LEGGINGS_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const F16 = data["FERVOR_LEGGINGS_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const F17 = data["FERVOR_LEGGINGS_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const F18 = data["FERVOR_LEGGINGS_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const F19 = data["FERVOR_LEGGINGS_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const F20 = data["FERVOR_LEGGINGS_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const F21 = data["FERVOR_LEGGINGS_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const F22 = data["FERVOR_LEGGINGS_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Fervor Boots
const G7 = data["FERVOR_BOOTS_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const G8 = data["FERVOR_BOOTS_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const G9 = data["FERVOR_BOOTS_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const G10 = data["FERVOR_BOOTS_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const G11 = data["FERVOR_BOOTS_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const G12 = data["FERVOR_BOOTS_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const G13 = data["FERVOR_BOOTS_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const G14 = data["FERVOR_BOOTS_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const G15 = data["FERVOR_BOOTS_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const G16 = data["FERVOR_BOOTS_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const G17 = data["FERVOR_BOOTS_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const G18 = data["FERVOR_BOOTS_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const G19 = data["FERVOR_BOOTS_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const G20 = data["FERVOR_BOOTS_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const G21 = data["FERVOR_BOOTS_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const G22 = data["FERVOR_BOOTS_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Crimson Armor
//Crimson Helmet
const J7 = data["CRIMSON_HELMET_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const J8 = data["CRIMSON_HELMET_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const J9 = data["CRIMSON_HELMET_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const J10 = data["CRIMSON_HELMET_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const J11 = data["CRIMSON_HELMET_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const J12 = data["CRIMSON_HELMET_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const J13 = data["CRIMSON_HELMET_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const J14 = data["CRIMSON_HELMET_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const J15 = data["CRIMSON_HELMET_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const J16 = data["CRIMSON_HELMET_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const J17 = data["CRIMSON_HELMET_MANA_POOL_V_"]?.Price || 1; //Mana Pool
const J18 = data["CRIMSON_HELMET_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const J19 = data["CRIMSON_HELMET_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const J20 = data["CRIMSON_HELMET_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const J21 = data["CRIMSON_HELMET_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const J22 = data["CRIMSON_HELMET_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Crimson Chestplate
const K7 = data["CRIMSON_CHESTPLATE_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const K8 = data["CRIMSON_CHESTPLATE_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const K9 = data["CRIMSON_CHESTPLATE_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const K10 = data["CRIMSON_CHESTPLATE_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const K11 = data["CRIMSON_CHESTPLATE_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const K12 = data["CRIMSON_CHESTPLATE_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const K13 = data["CRIMSON_CHESTPLATE_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const K14 = data["CRIMSON_CHESTPLATE_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const K15 = data["CRIMSON_CHESTPLATE_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const K16 = data["CRIMSON_CHESTPLATE_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const K17 = data["CRIMSON_CHESTPLATE_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const K18 = data["CRIMSON_CHESTPLATE_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const K19 = data["CRIMSON_CHESTPLATE_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const K20 = data["CRIMSON_CHESTPLATE_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const K21 = data["CRIMSON_CHESTPLATE_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const K22 = data["CRIMSON_CHESTPLATE_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Crimson Leggings
const L7 = data["CRIMSON_LEGGINGS_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const L8 = data["CRIMSON_LEGGINGS_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const L9 = data["CRIMSON_LEGGINGS_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const L10 = data["CRIMSON_LEGGINGS_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const L11 = data["CRIMSON_LEGGINGS_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const L12 = data["CRIMSON_LEGGINGS_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const L13 = data["CRIMSON_LEGGINGS_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const L14 = data["CRIMSON_LEGGINGS_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const L15 = data["CRIMSON_LEGGINGS_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const L16 = data["CRIMSON_LEGGINGS_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const L17 = data["CRIMSON_LEGGINGS_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const L18 = data["CRIMSON_LEGGINGS_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const L19 = data["CRIMSON_LEGGINGS_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const L20 = data["CRIMSON_LEGGINGS_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const L21 = data["CRIMSON_LEGGINGS_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const L22 = data["CRIMSON_LEGGINGS_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Crimson Boots
const M7 = data["CRIMSON_BOOTS_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const M8 = data["CRIMSON_BOOTS_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const M9 = data["CRIMSON_BOOTS_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const M10 = data["CRIMSON_BOOTS_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const M11 = data["CRIMSON_BOOTS_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const M12 = data["CRIMSON_BOOTS_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const M13 = data["CRIMSON_BOOTS_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const M14 = data["CRIMSON_BOOTS_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const M15 = data["CRIMSON_BOOTS_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const M16 = data["CRIMSON_BOOTS_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const M17 = data["CRIMSON_BOOTS_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const M18 = data["CRIMSON_BOOTS_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const M19 = data["CRIMSON_BOOTS_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const M20 = data["CRIMSON_BOOTS_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const M21 = data["CRIMSON_BOOTS_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const M22 = data["CRIMSON_BOOTS_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Aurora Armor
//Aurora Helmet
const D26 = data["AURORA_HELMET_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const D27 = data["AURORA_HELMET_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const D28 = data["AURORA_HELMET_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const D29 = data["AURORA_HELMET_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const D30 = data["AURORA_HELMET_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const D31 = data["AURORA_HELMET_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const D32 = data["AURORA_HELMET_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const D33 = data["AURORA_HELMET_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const D34 = data["AURORA_HELMET_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const D35 = data["AURORA_HELMET_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const D36 = data["AURORA_HELMET_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const D37 = data["AURORA_HELMET_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const D38 = data["AURORA_HELMET_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const D39 = data["AURORA_HELMET_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const D40 = data["AURORA_HELMET_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const D41 = data["AURORA_HELMET_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Aurora Chestplate
const E26 = data["AURORA_CHESTPLATE_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const E27 = data["AURORA_CHESTPLATE_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const E28 = data["AURORA_CHESTPLATE_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const E29 = data["AURORA_CHESTPLATE_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const E30 = data["AURORA_CHESTPLATE_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const E31 = data["AURORA_CHESTPLATE_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const E32 = data["AURORA_CHESTPLATE_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const E33 = data["AURORA_CHESTPLATE_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const E34 = data["AURORA_CHESTPLATE_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const E35 = data["AURORA_CHESTPLATE_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const E36 = data["AURORA_CHESTPLATE_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const E37 = data["AURORA_CHESTPLATE_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const E38 = data["AURORA_CHESTPLATE_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const E39 = data["AURORA_CHESTPLATE_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const E40 = data["AURORA_CHESTPLATE_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const E41 = data["AURORA_CHESTPLATE_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Aurora Leggings
const F26 = data["AURORA_LEGGINGS_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const F27 = data["AURORA_LEGGINGS_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const F28 = data["AURORA_LEGGINGS_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const F29 = data["AURORA_LEGGINGS_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const F30 = data["AURORA_LEGGINGS_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const F31 = data["AURORA_LEGGINGS_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const F32 = data["AURORA_LEGGINGS_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const F33 = data["AURORA_LEGGINGS_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const F34 = data["AURORA_LEGGINGS_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const F35 = data["AURORA_LEGGINGS_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const F36 = data["AURORA_LEGGINGS_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const F37 = data["AURORA_LEGGINGS_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const F38 = data["AURORA_LEGGINGS_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const F39 = data["AURORA_LEGGINGS_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const F40 = data["AURORA_LEGGINGS_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const F41 = data["AURORA_LEGGINGS_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Aurora Boots
const G26 = data["AURORA_BOOTS_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const G27 = data["AURORA_BOOTS_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const G28 = data["AURORA_BOOTS_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const G29 = data["AURORA_BOOTS_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const G30 = data["AURORA_BOOTS_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const G31 = data["AURORA_BOOTS_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const G32 = data["AURORA_BOOTS_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const G33 = data["AURORA_BOOTS_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const G34 = data["AURORA_BOOTS_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const G35 = data["AURORA_BOOTS_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const G36 = data["AURORA_BOOTS_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const G37 = data["AURORA_BOOTS_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const G38 = data["AURORA_BOOTS_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const G39 = data["AURORA_BOOTS_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const G40 = data["AURORA_BOOTS_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const G41 = data["AURORA_BOOTS_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Hollow Armor
//Hollow Helmet
const J26 = data["HOLLOW_HELMET_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const J27 = data["HOLLOW_HELMET_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const J28 = data["HOLLOW_HELMET_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const J29 = data["HOLLOW_HELMET_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const J30 = data["HOLLOW_HELMET_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const J31 = data["HOLLOW_HELMET_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const J32 = data["HOLLOW_HELMET_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const J33 = data["HOLLOW_HELMET_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const J34 = data["HOLLOW_HELMET_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const J35 = data["HOLLOW_HELMET_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const J36 = data["HOLLOW_HELMET_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const J37 = data["HOLLOW_HELMET_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const J38 = data["HOLLOW_HELMET_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const J39 = data["HOLLOW_HELMET_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const J40 = data["HOLLOW_HELMET_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const J41 = data["HOLLOW_HELMET_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Hollow Chestplate
const K26 = data["HOLLOW_CHESTPLATE_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const K27 = data["HOLLOW_CHESTPLATE_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const K28 = data["HOLLOW_CHESTPLATE_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const K29 = data["HOLLOW_CHESTPLATE_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const K30 = data["HOLLOW_CHESTPLATE_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const K31 = data["HOLLOW_CHESTPLATE_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const K32 = data["HOLLOW_CHESTPLATE_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const K33 = data["HOLLOW_CHESTPLATE_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const K34 = data["HOLLOW_CHESTPLATE_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const K35 = data["HOLLOW_CHESTPLATE_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const K36 = data["HOLLOW_CHESTPLATE_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const K37 = data["HOLLOW_CHESTPLATE_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const K38 = data["HOLLOW_CHESTPLATE_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const K39 = data["HOLLOW_CHESTPLATE_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const K40 = data["HOLLOW_CHESTPLATE_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const K41 = data["HOLLOW_CHESTPLATE_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Hollow Leggings
const L26 = data["HOLLOW_LEGGINGS_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const L27 = data["HOLLOW_LEGGINGS_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const L28 = data["HOLLOW_LEGGINGS_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const L29 = data["HOLLOW_LEGGINGS_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const L30 = data["HOLLOW_LEGGINGS_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const L31 = data["HOLLOW_LEGGINGS_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const L32 = data["HOLLOW_LEGGINGS_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const L33 = data["HOLLOW_LEGGINGS_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const L34 = data["HOLLOW_LEGGINGS_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const L35 = data["HOLLOW_LEGGINGS_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const L36 = data["HOLLOW_LEGGINGS_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const L37 = data["HOLLOW_LEGGINGS_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const L38 = data["HOLLOW_LEGGINGS_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const L39 = data["HOLLOW_LEGGINGS_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const L40 = data["HOLLOW_LEGGINGS_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const L41 = data["HOLLOW_LEGGINGS_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Hollow Boots
const M26 = data["HOLLOW_BOOTS_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const M27 = data["HOLLOW_BOOTS_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const M28 = data["HOLLOW_BOOTS_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const M29 = data["HOLLOW_BOOTS_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const M30 = data["HOLLOW_BOOTS_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const M31 = data["HOLLOW_BOOTS_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const M32 = data["HOLLOW_BOOTS_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const M33 = data["HOLLOW_BOOTS_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const M34 = data["HOLLOW_BOOTS_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const M35 = data["HOLLOW_BOOTS_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const M36 = data["HOLLOW_BOOTS_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const M37 = data["HOLLOW_BOOTS_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const M38 = data["HOLLOW_BOOTS_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const M39 = data["HOLLOW_BOOTS_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const M40 = data["HOLLOW_BOOTS_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const M41 = data["HOLLOW_BOOTS_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Terror Armor
//Terror Helmet
const D45 = data["TERROR_HELMET_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const D46 = data["TERROR_HELMET_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const D47 = data["TERROR_HELMET_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const D48 = data["TERROR_HELMET_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const D49 = data["TERROR_HELMET_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const D50 = data["TERROR_HELMET_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const D51 = data["TERROR_HELMET_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const D52 = data["TERROR_HELMET_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const D53 = data["TERROR_HELMET_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const D54 = data["TERROR_HELMET_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const D55 = data["TERROR_HELMET_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const D56 = data["TERROR_HELMET_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const D57 = data["TERROR_HELMET_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const D58 = data["TERROR_HELMET_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const D59 = data["TERROR_HELMET_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const D60 = data["TERROR_HELMET_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Terror Chestplate
const E45 = data["TERROR_CHESTPLATE_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const E46 = data["TERROR_CHESTPLATE_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const E47 = data["TERROR_CHESTPLATE_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const E48 = data["TERROR_CHESTPLATE_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const E49 = data["TERROR_CHESTPLATE_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const E50 = data["TERROR_CHESTPLATE_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const E51 = data["TERROR_CHESTPLATE_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const E52 = data["TERROR_CHESTPLATE_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const E53 = data["TERROR_CHESTPLATE_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const E54 = data["TERROR_CHESTPLATE_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const E55 = data["TERROR_CHESTPLATE_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const E56 = data["TERROR_CHESTPLATE_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const E57 = data["TERROR_CHESTPLATE_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const E58 = data["TERROR_CHESTPLATE_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const E59 = data["TERROR_CHESTPLATE_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const E60 = data["TERROR_CHESTPLATE_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Terror Leggings
const F45 = data["TERROR_LEGGINGS_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const F46 = data["TERROR_LEGGINGS_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const F47 = data["TERROR_LEGGINGS_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const F48 = data["TERROR_LEGGINGS_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const F49 = data["TERROR_LEGGINGS_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const F50 = data["TERROR_LEGGINGS_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const F51 = data["TERROR_LEGGINGS_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const F52 = data["TERROR_LEGGINGS_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const F53 = data["TERROR_LEGGINGS_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const F54 = data["TERROR_LEGGINGS_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const F55 = data["TERROR_LEGGINGS_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const F56 = data["TERROR_LEGGINGS_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const F57 = data["TERROR_LEGGINGS_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const F58 = data["TERROR_LEGGINGS_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const F59 = data["TERROR_LEGGINGS_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const F60 = data["TERROR_LEGGINGS_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Terror Boots
const G45 = data["TERROR_BOOTS_ARACHNO_RESISTANCE_V_"]?.Price ?? Infinity; //Arachno Resistence
const G46 = data["TERROR_BOOTS_BLAZING_RESISTANCE_V_"]?.Price ?? Infinity; //Blazing Resistance
const G47 = data["TERROR_BOOTS_BREEZE_V_"]?.Price ?? Infinity; //Breeze
const G48 = data["TERROR_BOOTS_DOMINANCE_V_"]?.Price ?? Infinity; //Dominance
const G49 = data["TERROR_BOOTS_ENDER_RESISTANCE_V_"]?.Price ?? Infinity; //Ender Resistance
const G50 = data["TERROR_BOOTS_§bEXPERIENCE_V_"]?.Price ?? Infinity; //Experience
const G51 = data["TERROR_BOOTS_FORTITUDE_V_"]?.Price ?? Infinity; //Fortitude
const G52 = data["TERROR_BOOTS_LIFE_REGENERATION_V_"]?.Price ?? Infinity; //Life Regeneration
const G53 = data["TERROR_BOOTS_LIFELINE_V_"]?.Price ?? Infinity; //Lifeline
const G54 = data["TERROR_BOOTS_MAGIC_FIND_V_"]?.Price ?? Infinity; //Magic Find
const G55 = data["TERROR_BOOTS_MANA_POOL_V_"]?.Price ?? Infinity; //Mana Pool
const G56 = data["TERROR_BOOTS_MANA_REGENERATION_V_"]?.Price ?? Infinity; //Mana Regeneration
const G57 = data["TERROR_BOOTS_VITALITY_V_"]?.Price ?? Infinity; //Vitality
const G58 = data["TERROR_BOOTS_§bSPEED_V_"]?.Price ?? Infinity; //Speed
const G59 = data["TERROR_BOOTS_UNDEAD_RESISTANCE_V_"]?.Price ?? Infinity; //Undead Resistance
const G60 = data["TERROR_BOOTS_VETERAN_V_"]?.Price ?? Infinity; //Veteran
//Molten Equipment
//Molten Belt
const J45 = data["MOLTEN_BELT_ARACHNO_RESISTANCE_V_"]?.Price || Z21; //Arachno Resistence
const J46 = data["MOLTEN_BELT_BLAZING_RESISTANCE_V_"]?.Price || Z21; //Blazing Resistance
const J47 = data["MOLTEN_BELT_BREEZE_V_"]?.Price || Z21; //Breeze
const J48 = data["MOLTEN_BELT_DOMINANCE_V_"]?.Price || Z21; //Dominance
const J49 = data["MOLTEN_BELT_ENDER_RESISTANCE_V_"]?.Price || Z21; //Ender Resistance
const J50 = data["MOLTEN_BELT_§bEXPERIENCE_V_"]?.Price || Z21; //Experience
const J51 = data["MOLTEN_BELT_FORTITUDE_V_"]?.Price || Z21; //Fortitude
const J52 = data["MOLTEN_BELT_LIFE_REGENERATION_V_"]?.Price || Z21; //Life Regeneration
const J53 = data["MOLTEN_BELT_LIFELINE_V_"]?.Price || Z21; //Lifeline
const J54 = data["MOLTEN_BELT_MAGIC_FIND_V_"]?.Price || Z21; //Magic Find
const J55 = data["MOLTEN_BELT_MANA_POOL_V_"]?.Price || Z21; //Mana Pool
const J56 = data["MOLTEN_BELT_MANA_REGENERATION_V_"]?.Price || Z21; //Mana Regeneration
const J57 = data["MOLTEN_BELT_VITALITY_V_"]?.Price || Z21; //Vitality
const J58 = data["MOLTEN_BELT_§bSPEED_V_"]?.Price || Z21; //Speed
const J59 = data["MOLTEN_BELT_UNDEAD_RESISTANCE_V_"]?.Price || Z21; //Undead Resistance
const J60 = data["MOLTEN_BELT_VETERAN_V_"]?.Price || Z21; //Veteran
//Molten Claok
const K45 = data["MOLTEN_CLOAK_ARACHNO_RESISTANCE_V_"]?.Price || Z22; //Arachno Resistence
const K46 = data["MOLTEN_CLOAK_BLAZING_RESISTANCE_V_"]?.Price || Z22; //Blazing Resistance
const K47 = data["MOLTEN_CLOAK_BREEZE_V_"]?.Price || Z22; //Breeze
const K48 = data["MOLTEN_CLOAK_DOMINANCE_V_"]?.Price || Z22; //Dominance
const K49 = data["MOLTEN_CLOAK_ENDER_RESISTANCE_V_"]?.Price || Z22; //Ender Resistance
const K50 = data["MOLTEN_CLOAK_§bEXPERIENCE_V_"]?.Price || Z22; //Experience
const K51 = data["MOLTEN_CLOAK_FORTITUDE_V_"]?.Price || Z22; //Fortitude
const K52 = data["MOLTEN_CLOAK_LIFE_REGENERATION_V_"]?.Price || Z22; //Life Regeneration
const K53 = data["MOLTEN_CLOAK_LIFELINE_V_"]?.Price || Z22; //Lifeline
const K54 = data["MOLTEN_CLOAK_MAGIC_FIND_V_"]?.Price || Z22; //Magic Find
const K55 = data["MOLTEN_CLOAK_MANA_POOL_V_"]?.Price || Z22; //Mana Pool
const K56 = data["MOLTEN_CLOAK_MANA_REGENERATION_V_"]?.Price || Z22; //Mana Regeneration
const K57 = data["MOLTEN_CLOAK_VITALITY_V_"]?.Price || Z22; //Vitality
const K58 = data["MOLTEN_CLOAK_§bSPEED_V_"]?.Price || Z22; //Speed
const K59 = data["MOLTEN_CLOAK_UNDEAD_RESISTANCE_V_"]?.Price || Z22; //Undead Resistance
const K60 = data["MOLTEN_CLOAK_VETERAN_V_"]?.Price || Z22; //Veteran
//Molten Bracelet
const L45 = data["MOLTEN_BRACELET_ARACHNO_RESISTANCE_V_"]?.Price || Z23; //Arachno Resistence
const L46 = data["MOLTEN_BRACELET_BLAZING_RESISTANCE_V_"]?.Price || Z23; //Blazing Resistance
const L47 = data["MOLTEN_BRACELET_BREEZE_V_"]?.Price || Z23; //Breeze
const L48 = data["MOLTEN_BRACELET_DOMINANCE_V_"]?.Price || Z23; //Dominance
const L49 = data["MOLTEN_BRACELET_ENDER_RESISTANCE_V_"]?.Price || Z23; //Ender Resistance
const L50 = data["MOLTEN_BRACELET_§bEXPERIENCE_V_"]?.Price || Z23; //Experience
const L51 = data["MOLTEN_BRACELET_FORTITUDE_V_"]?.Price || Z23; //Fortitude
const L52 = data["MOLTEN_BRACELET_LIFE_REGENERATION_V_"]?.Price || Z23; //Life Regeneration
const L53 = data["MOLTEN_BRACELET_LIFELINE_V_"]?.Price || Z23; //Lifeline
const L54 = data["MOLTEN_BRACELET_MAGIC_FIND_V_"]?.Price || Z23; //Magic Find
const L55 = data["MOLTEN_BRACELET_MANA_POOL_V_"]?.Price || Z23; //Mana Pool
const L56 = data["MOLTEN_BRACELET_MANA_REGENERATION_V_"]?.Price || Z23; //Mana Regeneration
const L57 = data["MOLTEN_BRACELET_VITALITY_V_"]?.Price || Z23; //Vitality
const L58 = data["MOLTEN_BRACELET_§bSPEED_V_"]?.Price || Z23; //Speed
const L59 = data["MOLTEN_BRACELET_UNDEAD_RESISTANCE_V_"]?.Price || Z23; //Undead Resistance
const L60 = data["MOLTEN_BRACELET_VETERAN_V_"]?.Price || Z23; //Veteran
//Molten Necklace
const M45 = data["MOLTEN_NECKLACE_ARACHNO_RESISTANCE_V_"]?.Price || Z24; //Arachno Resistence
const M46 = data["MOLTEN_NECKLACE_BLAZING_RESISTANCE_V_"]?.Price || Z24; //Blazing Resistance
const M47 = data["MOLTEN_NECKLACE_BREEZE_V_"]?.Price || Z24; //Breeze
const M48 = data["MOLTEN_NECKLACE_DOMINANCE_V_"]?.Price || Z24; //Dominance
const M49 = data["MOLTEN_NECKLACE_ENDER_RESISTANCE_V_"]?.Price || Z24; //Ender Resistance
const M50 = data["MOLTEN_NECKLACE_§bEXPERIENCE_V_"]?.Price || Z24; //Experience
const M51 = data["MOLTEN_NECKLACE_FORTITUDE_V_"]?.Price || Z24; //Fortitude
const M52 = data["MOLTEN_NECKLACE_LIFE_REGENERATION_V_"]?.Price || Z24; //Life Regeneration
const M53 = data["MOLTEN_NECKLACE_LIFELINE_V_"]?.Price || Z24; //Lifeline
const M54 = data["MOLTEN_NECKLACE_MAGIC_FIND_V_"]?.Price || Z24; //Magic Find
const M55 = data["MOLTEN_NECKLACE_MANA_POOL_V_"]?.Price || Z24; //Mana Pool
const M56 = data["MOLTEN_NECKLACE_MANA_REGENERATION_V_"]?.Price || Z24; //Mana Regeneration
const M57 = data["MOLTEN_NECKLACE_VITALITY_V_"]?.Price || Z24; //Vitality
const M58 = data["MOLTEN_NECKLACE_§bSPEED_V_"]?.Price || Z24; //Speed
const M59 = data["MOLTEN_NECKLACE_UNDEAD_RESISTANCE_V_"]?.Price || Z24; //Undead Resistance
const M60 = data["MOLTEN_NECKLACE_VETERAN_V_"]?.Price || Z24; //Veteran
//God Roles
//aurora Helmet
const D64 = data["AURORA_HELMET_MP_MR"]?.Price || Z5; //MP MR
const D65 = data["AURORA_HELMET_MP_VET"]?.Price || Z5; //MP VET
const D66 = data["AURORA_HELMET_MP_BR"]?.Price || Z5; //MP BR
//aurora Chestplate
const E64 = data["AURORA_CHESTPLATE_MP_MR"]?.Price || Z6; //MP MR
const E65 = data["AURORA_CHESTPLATE_MP_VET"]?.Price || Z6; //MP VET
const E66 = data["AURORA_CHESTPLATE_MP_BR"]?.Price || Z6; //MP BR
//aurora Leggings
const F64 = data["AURORA_LEGGINGS_MP_MR"]?.Price || Z7; //MP MR
const F65 = data["AURORA_LEGGINGS_MP_VET"]?.Price || Z7; //MP VET
const F66 = data["AURORA_LEGGINGS_MP_BR"]?.Price || Z7; //MP BR
//aurora Boots
const G64 = data["AURORA_BOOTS_MP_MR"]?.Price || Z8; //MP MR
const G65 = data["AURORA_BOOTS_MP_VET"]?.Price || Z8; //MP VET
const G66 = data["AURORA_BOOTS_MP_BR"]?.Price || Z8; //MP BR
// Crimson Helmet
const D69 = data["CRIMSON_HELMET_MF_VET"]?.Price || Z1; //MF VET
const D70 = data["CRIMSON_HELMET_VIT_VET"]?.Price || Z1; //VIT VET
const D71 = data["CRIMSON_HELMET_MF_VIT"]?.Price || Z1; //MF VIT
const D72 = data["CRIMSON_HELMET_MP_VET"]?.Price || Z1; //MP VET
// Crimson Chestplate
const E69 = data["CRIMSON_CHESTPLATE_MF_VET"]?.Price || Z2; //MF VET
const E70 = data["CRIMSON_CHESTPLATE_VIT_VET"]?.Price || Z2; //VIT VET
const E71 = data["CRIMSON_CHESTPLATE_MF_VIT"]?.Price || Z2; //MF VIT
const E72 = data["CRIMSON_CHESTPLATE_MP_VET"]?.Price || Z2; //MP VET
// Crimson Leggings
const F69 = data["CRIMSON_LEGGINGS_MF_VET"]?.Price || Z3; //MF VET
const F70 = data["CRIMSON_LEGGINGS_VIT_VET"]?.Price || Z3; //VIT VET
const F71 = data["CRIMSON_LEGGINGS_MF_VIT"]?.Price || Z3; //MF VIT
const F72 = data["CRIMSON_LEGGINGS_MP_VET"]?.Price || Z3; //MP VET
// Crimson Boots
const G69 = data["CRIMSON_BOOTS_MF_VET"]?.Price || Z4; //MF VET
const G70 = data["CRIMSON_BOOTS_VIT_VET"]?.Price || Z4; //VIT VET
const G71 = data["CRIMSON_BOOTS_MF_VIT"]?.Price || Z4; //MF VIT
const G72 = data["CRIMSON_BOOTS_MP_VET"]?.Price || Z4; //MP VET

// Terror Helmet
const D75 = data["TERROR_HELMET_LL_MP"]?.Price || Z9; //LL MP
const D76 = data["TERROR_HELMET_DOM_VIT"]?.Price || Z9; //DOM VIT
const D77 = data["TERROR_HELMET_DOM_MP"]?.Price || Z9; //DOM MP
// Terror Chestplate
const E75 = data["TERROR_CHESTPLATE_LL_MP"]?.Price || Z10; //LL MP
const E76 = data["TERROR_CHESTPLATE_DOM_VIT"]?.Price || Z10; //DOM VIT
const E77 = data["TERROR_CHESTPLATE_DOM_MP"]?.Price || Z10; //DOM MP
// Terror Leggings
const F75 = data["TERROR_LEGGINGS_LL_MP"]?.Price || Z11; //LL MP
const F76 = data["TERROR_LEGGINGS_DOM_VIT"]?.Price || Z11; //DOM VIT
const F77 = data["TERROR_LEGGINGS_DOM_MP"]?.Price || Z11; //DOM MP
// Terror Boots
const G75 = data["TERROR_BOOTS_LL_MP"]?.Price || Z12; //LL MP
const G76 = data["TERROR_BOOTS_DOM_VIT"]?.Price || Z12; //DOM VIT
const G77 = data["TERROR_BOOTS_DOM_MP"]?.Price || Z12; //DOM MP
//Molten Belt
const D80 = data["MOLTEN_BELT_LL_MP"]?.Price || Z21; //LL MP
const D81 = data["MOLTEN_BELT_MF_VET"]?.Price || Z21; //MF VET
const D82 = data["MOLTEN_BELT_MP_MR"]?.Price || Z21; //MP MR
const D83 = data["MOLTEN_BELT_MF_VIT"]?.Price || Z21; //MF VIT
const D84 = data["MOLTEN_BELT_MP_VET"]?.Price || Z21; //MP VET
const D85 = data["MOLTEN_BELT_DOM_MP"]?.Price || Z21; //DOM MP
const D86 = data["MOLTEN_BELT_MP_VIT"]?.Price || Z21; //MP ViT
const D87 = data["MOLTEN_BELT_BR_VET"]?.Price || Z21; //BR VET
const D88 = data["MOLTEN_BELT_MR_VET"]?.Price || Z21; //MR VET
//Molten Claok
const E80 = data["MOLTEN_CLOAK_LL_MP"]?.Price || Z22; //LL MP
const E81 = data["MOLTEN_CLOAK_MF_VET"]?.Price || Z22; //MF VET
const E82 = data["MOLTEN_CLOAK_MP_MR"]?.Price || Z22; //MP MR
const E83 = data["MOLTEN_CLOAK_MF_VIT"]?.Price || Z22; //MF VIT
const E84 = data["MOLTEN_CLOAK_MP_VET"]?.Price || Z22; //MP VET
const E85 = data["MOLTEN_CLOAK_DOM_MP"]?.Price || Z22; //DOM MP
const E86 = data["MOLTEN_CLOAK_MP_VIT"]?.Price || Z22; //MP ViT
const E87 = data["MOLTEN_CLOAK_BR_VET"]?.Price || Z22; //BR VET
const E88 = data["MOLTEN_CLOAK_MR_VET"]?.Price || Z22; //MR VET
//Molten Bracelet
const F80 = data["MOLTEN_BRACELET_LL_MP"]?.Price || Z23; //LL MP
const F81 = data["MOLTEN_BRACELET_MF_VET"]?.Price || Z23; //MF VET
const F82 = data["MOLTEN_BRACELET_MP_MR"]?.Price || Z23; //MP MR
const F83 = data["MOLTEN_BRACELET_MF_VIT"]?.Price || Z23; //MF VIT
const F84 = data["MOLTEN_BRACELET_MP_VET"]?.Price || Z23; //MP VET
const F85 = data["MOLTEN_BRACELET_DOM_MP"]?.Price || Z23; //DOM MP
const F86 = data["MOLTEN_BRACELET_MP_VIT"]?.Price || Z23; //MP ViT
const F87 = data["MOLTEN_BRACELET_BR_VET"]?.Price || Z23; //BR VET
const F88 = data["MOLTEN_BRACELET_MR_VET"]?.Price || Z23; //MR VET
//Molten Necklace
const G80 = data["MOLTEN_NECKLACE_LL_MP"]?.Price || Z24; //LL MP
const G81 = data["MOLTEN_NECKLACE_MF_VET"]?.Price || Z24; //MF VET
const G82 = data["MOLTEN_NECKLACE_MP_MR"]?.Price || Z24; //MP MR
const G83 = data["MOLTEN_NECKLACE_MF_VIT"]?.Price || Z24; //MF VIT
const G84 = data["MOLTEN_NECKLACE_MP_VET"]?.Price || Z24; //MP VET
const G85 = data["MOLTEN_NECKLACE_DOM_MP"]?.Price || Z24; //DOM MP
const G86 = data["MOLTEN_NECKLACE_MP_VIT"]?.Price || Z24; //MP ViT
const G87 = data["MOLTEN_NECKLACE_BR_VET"]?.Price || Z24; //BR VET
const G88 = data["MOLTEN_NECKLACE_MR_VET"]?.Price || Z24; //MR VET

// Generic Arachno Resistance
let GenericHelmetArachnoResistance   = safeMin(D7,  J7,  D26, J26, D45);
let GenericChestplateArachnoResistance = safeMin(E7,  K7,  E26, K26, E45);
let GenericLeggingsArachnoResistance = safeMin(F7,  L7,  F26, L26, F45);
let GenericBootsArachnoResistance    = safeMin(G7,  M7,  G26, M26, G45);

// Generic Blazing Resistance
let GenericHelmetBlazingResistance   = safeMin(D8,  J8,  D27, J27, D46);
let GenericChestplateBlazingResistance = safeMin(E8,  K8,  E27, K27, E46);
let GenericLeggingsBlazingResistance = safeMin(F8,  L8,  F27, L27, F46);
let GenericBootsBlazingResistance    = safeMin(G8,  M8,  G27, M27, G46);

// Generic Breeze
let GenericHelmetBreeze   = safeMin(D9,  J9,  D28, J28, D47);
let GenericChestplateBreeze = safeMin(E9,  K9,  E28, K28, E47);
let GenericLeggingsBreeze = safeMin(F9,  L9,  F28, L28, F47);
let GenericBootsBreeze    = safeMin(G9,  M9,  G28, M28, G47);

// Generic Dominance
let GenericHelmetDominance   = safeMin(D10, J10, D29, J29, D48);
let GenericChestplateDominance = safeMin(E10, K10, E29, K29, E48);
let GenericLeggingsDominance = safeMin(F10, L10, F29, L29, F48);
let GenericBootsDominance    = safeMin(G10, M10, G29, M29, G48);

// Generic Ender Resistance
let GenericHelmetEnderResistance   = safeMin(D11, J11, D30, J30, D49);
let GenericChestplateEnderResistance = safeMin(E11, K11, E30, K30, E49);
let GenericLeggingsEnderResistance = safeMin(F11, L11, F30, L30, F49);
let GenericBootsEnderResistance    = safeMin(G11, M11, G30, M30, G49);

// Generic Experience
let GenericHelmetExperience   = safeMin(D12, J12, D31, J31, D50);
let GenericChestplateExperience = safeMin(E12, K12, E31, K31, E50);
let GenericLeggingsExperience = safeMin(F12, L12, F31, L31, F50);
let GenericBootsExperience    = safeMin(G12, M12, G31, M31, G50);

// Generic Fortitude
let GenericHelmetFortitude   = safeMin(D13, J13, D32, J32, D51);
let GenericChestplateFortitude = safeMin(E13, K13, E32, K32, E51);
let GenericLeggingsFortitude = safeMin(F13, L13, F32, L32, F51);
let GenericBootsFortitude    = safeMin(G13, M13, G32, M32, G51);

// Generic Life Regeneration
let GenericHelmetLifeRegeneration   = safeMin(D14, J14, D33, J33, D52);
let GenericChestplateLifeRegeneration = safeMin(E14, K14, E33, K33, E52);
let GenericLeggingsLifeRegeneration = safeMin(F14, L14, F33, L33, F52);
let GenericBootsLifeRegeneration    = safeMin(G14, M14, G33, M33, G52);

// Generic Lifeline
let GenericHelmetLifeline   = safeMin(D15, J15, D34, J34, D53);
let GenericChestplateLifeline = safeMin(E15, K15, E34, K34, E53);
let GenericLeggingsLifeline = safeMin(F15, L15, F34, L34, F53);
let GenericBootsLifeline    = safeMin(G15, M15, G34, M34, G53);

// Generic Magic Find
let GenericHelmetMagicFind   = safeMin(D16, J16, D35, J35, D54);
let GenericChestplateMagicFind = safeMin(E16, K16, E35, K35, E54);
let GenericLeggingsMagicFind = safeMin(F16, L16, F35, L35, F54);
let GenericBootsMagicFind    = safeMin(G16, M16, G35, M35, G54);

// Generic Mana Pool
let GenericHelmetManaPool   = safeMin(D17, J17, D36, J36, D55);
let GenericChestplateManaPool = safeMin(E17, K17, E36, K36, E55);
let GenericLeggingsManaPool = safeMin(F17, L17, F36, L36, F55);
let GenericBootsManaPool    = safeMin(G17, M17, G36, M36, G55);

// Generic Mana Regeneration
let GenericHelmetManaRegeneration   = safeMin(D18, J18, D37, J37, D56);
let GenericChestplateManaRegeneration = safeMin(E18, K18, E37, K37, E56);
let GenericLeggingsManaRegeneration = safeMin(F18, L18, F37, L37, F56);
let GenericBootsManaRegeneration    = safeMin(G18, M18, G37, M37, G56);

// Generic Vitality
let GenericHelmetVitality   = safeMin(D19, J19, D38, J38, D57);
let GenericChestplateVitality = safeMin(E19, K19, E38, K38, E57);
let GenericLeggingsVitality = safeMin(F19, L19, F38, L38, F57);
let GenericBootsVitality    = safeMin(G19, M19, G38, M38, G57);

// Generic Speed
let GenericHelmetSpeed   = safeMin(D20, J20, D39, J39, D58);
let GenericChestplateSpeed = safeMin(E20, K20, E39, K39, E58);
let GenericLeggingsSpeed = safeMin(F20, L20, F39, L39, F58);
let GenericBootsSpeed    = safeMin(G20, M20, G39, M39, G58);

// Generic Undead Resistance
let GenericHelmetUndeadResistance   = safeMin(D21, J21, D40, J40, D59);
let GenericChestplateUndeadResistance = safeMin(E21, K21, E40, K40, E59);
let GenericLeggingsUndeadResistance = safeMin(F21, L21, F40, L40, F59);
let GenericBootsUndeadResistance    = safeMin(G21, M21, G40, M40, G59);

// Generic Veteran
let GenericHelmetVeteran   = safeMin(D22, J22, D41, J41, D60);
let GenericChestplateVeteran = safeMin(E22, K22, E41, K41, E60);
let GenericLeggingsVeteran = safeMin(F22, L22, F41, L41, F60);
let GenericBootsVeteran    = safeMin(G22, M22, G41, M41, G60);

let moneyKuudraT5 = (((((((((3600/A4)/100)*3.953)/100)*(12.5)/2)*(GenericHelmetArachnoResistance + GenericHelmetBlazingResistance + GenericHelmetBreeze + GenericHelmetDominance + GenericHelmetEnderResistance + GenericHelmetExperience + GenericHelmetFortitude + GenericHelmetLifeRegeneration + GenericHelmetLifeline + GenericHelmetMagicFind + GenericHelmetManaPool + GenericHelmetManaRegeneration + GenericHelmetVitality + GenericHelmetSpeed + GenericHelmetUndeadResistance + GenericHelmetVeteran + GenericChestplateArachnoResistance + GenericChestplateBlazingResistance + GenericChestplateBreeze + GenericChestplateDominance + GenericChestplateEnderResistance + GenericChestplateExperience + GenericChestplateFortitude + GenericChestplateLifeRegeneration + GenericChestplateLifeline + GenericChestplateMagicFind + GenericChestplateManaPool + GenericChestplateManaRegeneration + GenericChestplateVitality + GenericChestplateSpeed + GenericChestplateUndeadResistance + GenericChestplateVeteran + GenericLeggingsArachnoResistance + GenericLeggingsBlazingResistance + GenericLeggingsBreeze + GenericLeggingsDominance + GenericLeggingsEnderResistance + GenericLeggingsExperience + GenericLeggingsFortitude + GenericLeggingsLifeRegeneration + GenericLeggingsLifeline + GenericLeggingsMagicFind + GenericLeggingsManaPool + GenericLeggingsManaRegeneration + GenericLeggingsVitality + GenericLeggingsSpeed + GenericLeggingsUndeadResistance + GenericLeggingsVeteran + GenericBootsArachnoResistance + GenericBootsBlazingResistance + GenericBootsBreeze + GenericBootsDominance + GenericBootsEnderResistance + GenericBootsExperience + GenericBootsFortitude + GenericBootsLifeRegeneration + GenericBootsLifeline + GenericBootsMagicFind + GenericBootsManaPool + GenericBootsManaRegeneration + GenericBootsVitality + GenericBootsSpeed + GenericBootsUndeadResistance + GenericBootsVeteran)) +
            ((((3600/A4)/100)*2.767)/100*(12.5)/2)*(J45+J46+J47+J48+J49+J50+J51+J52+J53+J54+J55+J56+J57+J58+J59+J60+K45+K46+K47+K48+K49+K50+K51+K52+K53+K54+K55+K56+K57+K58+K59+K60+L45+L46+L47+L48+L49+L50+L51+L52+L53+L54+L55+L56+L57+L58+L59+L60+M45+M46+M47+M48+M49+M50+M51+M52+M53+M54+M55+M56+M57+M58+M59+M60) +
            ((((3600/A4)/100)*1.383)*A7) +
            ((((3600/A4)/100)*1.383)*A10) +
            ((((3600/A4)/100)*0.791)*A13) +
            ((((3600/A4)/100)*3.162)*A16) +
            ((((3600/A4)/100)*3.162)*A19) +
            ((((3600/A4)/100)*0.135)*A22) +
            ((((3600/A4)/100)*0.135)*A25) +
            ((((3600/A4)/100)*1.231)*A28) +
            ((((3600/A4)/100)*14.775)*A31) +
            ((((3600/A4)/100)*14.775)*A34) +
            ((((3600/A4)/100)*14.775)*A37) +
            ((((3600/A4)/100)*14.775)*A40) +
            ((((3600/A4)/100)*1.231)*A43) +
            ((((3600/A4)/100)*1.231)*A46) +
            ((((3600/A4)/100)*1.231)*A49) +
            ((((3600/A4)/100)*1.231)*A52) +
            ((((3600/A4)/100)*1.231)*A55) +
            ((((3600/A4)/100)*1.231)*A58) +
            ((((3600/A4)/100)*1.231)*A61) +
            ((((3600/A4)/100)*1.231)*A64) +
            ((((3600/A4)/100)*1.231)*A67) +
            ((((3600/A4)/100)*1.231)*A70) +
            ((((3600/A4)/100)*0.616)*A73) +
            ((((3600/A4)/100)*0.616)*A76) +
            ((((3600/A4)/100)*0.616)*A79) +
            ((((3600/A4)/100)*0.616)*A82) +
            ((((3600/A4)/100)*0.616)*A85) +
            ((((3600/A4)/100)*0.616)*A88) +
            ((((3600/A4)/100)*0.616)*A91) +
            ((((3600/A4)/100)*0.616)*A94) +
            ((((3600/A4)/100)*1.231)*A97) +
            ((((3600/A4)/100)*1.231)*A100) +
            ((((3600/A4)/100)*1.231)*A103) +
            ((((3600/A4)/100)*1.231)*A106) +
            ((((3600/A4)/100)*1.231)*A109) +
            ((((3600/A4)/100)*1.231)*A112) +
            ((((3600/A4)/100)*1.231)*A115) +
            ((((3600/A4)/100)*1.231)*A118) +
            ((((3600/A4)/100)*1.231)*A121) +
            ((((3600/A4)/100)*1.231)*A124) +
            ((((3600/A4)/100)*1.231)*A127) +
            ((((3600/A4)/100)*1.231)*A130) +
            ((((3600/A4)/100)*1.231)*A133) +
            ((((3600/A4)/100)*1.231)*A136) +
            ((((3600/A4)/100)*1.231)*A139) +
            ((((3600/A4)/100)*1.231)*A142) +
            ((((3600/A4)/100)*1.231)*A145) +
            ((((3600/A4)/100)*1.231)*A148) + 
            (((3600/A4)*1600)*A151) +
            (((3600/A4)*3)*Z200) +
            (((((3600/A4)/100)*3.953)/100)*((1/120)*100)*(D64+E64+F64+G64 + D65+E65+F65+G65 + D66+E66+F66+G66 + D69+E69+F69+G69 + D70+E70+F70+G70 + D71+E71+F71+G71 + D72+E72+F72+G72 + D76+E76+F76+G76 + D77+E77+F77+G77)) +
            (((((3600/A4)/100)*2.767)/100)*((1/120)*100)*(D80+E80+F80+G80 + D81+E81+F81+G81 + D82+E82+F82+G82 + D83+E83+F83+G83 + D84+E84+F84+G84 + D85+E85+F85+G85 + D86+E86+F86+G86 + D87+E87+F87+G87 + D88+E88+F88+G88))) -
            ((3600/A4)*(2400000+(80*A154)+(2*Z100))))/1000000).toFixed(2);
return `${moneyKuudraT5}M`;
}
function updateKuudraT5(data) {
    const MoneyKuudraT5 = calculateKuudraT5(data); 
    document.getElementById('KuudraT5').innerHTML = MoneyKuudraT5;
    localStorage.setItem('cached-KuudraT5', MoneyKuudraT5);
}
    //////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////////

    function calculateKuudraT4(data) {
    const Z300 = 0; // Time to do 1 run in Seconds
    const Z400 = 2; // Time to do 1 run in Minutes
    const A4 = Number((Z300 + (Z400 * 60))); // Time to do 1 run in seconds with minute conversion
    
    //Loot table
    const A7 = data["MANDRAA"]?.Price || 1;
    const A10 = data["KUUDRA_MANDIBLE"]?.Price || 1;
    const A13 = data["BURNING_KUUDRA_CORE"]?.Price || 1;
    const A16 = data["RUNIC_STAFF"]?.Price || 1;
    const A19 = data["HOLLOW_WAND"]?.Price || 1;
    const A22 = data["ENCHANTMENT_FATAL_TEMPO_1"]?.Price || 1;
    const A25 = data["ENCHANTMENT_INFERNO_1"]?.Price || 1;
    const A28 = data["WHEEL_OF_FATE"]?.Price || 1;
    const A31 = data["ENCHANTMENT_STRONG_MANA_4"]?.Price || 1;
    const A34 = data["ENCHANTMENT_FEROCIOUS_MANA_4"]?.Price || 1;
    const A37 = data["ENCHANTMENT_HARDENED_MANA_4"]?.Price || 1;
    const A40 = data["ENCHANTMENT_MANA_VAMPIRE_4"]?.Price || 1;
    const A43 = data["ATTRIBUTE_SHARD_MIDAS_TOUCH_III_"]?.Price || 1;
    const A46 = data["ATTRIBUTE_SHARD_COMBO_III_"]?.Price || 1;
    const A49 = data["ATTRIBUTE_SHARD_UNDEAD_III_"]?.Price || 1;
    const A52 = data["ATTRIBUTE_SHARD_ARACHNO_III_"]?.Price || 1;
    const A55 = data["ATTRIBUTE_SHARD_§bSPEED_III_"]?.Price || 1;
    const A58 = data["ATTRIBUTE_SHARD_MANA_POOL_III_"]?.Price || 1;
    const A61 = data["ATTRIBUTE_SHARD_§bEXPERIENCE_III_"]?.Price || 1;
    const A64 = data["ATTRIBUTE_SHARD_LIFE_REGENERATION_III_"]?.Price || 1;
    const A67 = data["ATTRIBUTE_SHARD_UNDEAD_RESISTANCE_III_"]?.Price || 1;
    const A70 = data["ATTRIBUTE_SHARD_ARACHNO_RESISTANCE_III_"]?.Price || 1;
    const A73 = data["ATTRIBUTE_SHARD_§bHUNTER_III_"]?.Price || 1;
    const A76 = data["ATTRIBUTE_SHARD_INFECTION_III_"]?.Price || 1;
    const A79 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_III_"]?.Price || 1;
    const A82 = data["ATTRIBUTE_SHARD_FISHERMAN_III_"]?.Price || 1;
    const A85 = data["ATTRIBUTE_SHARD_FISHING_SPEED_III_"]?.Price || 1;
    const A88 = data["ATTRIBUTE_SHARD_DOUBLE_HOOK_III_"]?.Price || 1;
    const A91 = data["ATTRIBUTE_SHARD_TROPHY_HUNTER_III_"]?.Price || 1;
    const A94 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_III_"]?.Price || 1;
    const A97 = data["ATTRIBUTE_SHARD_ATTACK_SPEED_III_"]?.Price || 1;
    const A100 = data["ATTRIBUTE_SHARD_ELITE_III_"]?.Price || 1;
    const A103 = data["ATTRIBUTE_SHARD_LIFE_RECOVERY_III_"]?.Price || 1;
    const A106 = data["ATTRIBUTE_SHARD_LIFELINE_III_"]?.Price || 1;
    const A109 = data["ATTRIBUTE_SHARD_BREEZE_III_"]?.Price || 1;
    const A112 = data["ATTRIBUTE_SHARD_IGNITION_III_"]?.Price || 1;
    const A115 = data["ATTRIBUTE_SHARD_MANA_STEAL_III_"]?.Price || 1;
    const A118 = data["ATTRIBUTE_SHARD_MANA_REGENERATION_III_"]?.Price || 1;
    const A121 = data["ATTRIBUTE_SHARD_VETERAN_III_"]?.Price || 1;
    const A124 = data["ATTRIBUTE_SHARD_VITALITY_III_"]?.Price || 1;
    const A127 = data["ATTRIBUTE_SHARD_ENDER_RESISTANCE_III_"]?.Price || 1;
    const A130 = data["ATTRIBUTE_SHARD_DOMINANCE_III_"]?.Price || 1;
    const A151 = data["ESSENCE_CRIMSON"]?.Price || 1;
    const A154 = data["ENCHANTED_MYCELIUM"]?.Price || 1;
    const Z100 = data["CORRUPTED_NETHER_STAR"]?.Price || 1; //Nether Stars (Added)
    const Z200 = data["KUUDRA_TEETH"]?.Price || 1; //Kuudra Teeth (Added)
    const Z1 = data["CRIMSON_HELMET"]?.Price || 1;
    const Z2 = data["CRIMSON_CHESTPLATE"]?.Price || 1;
    const Z3 = data["CRIMSON_LEGGINGS"]?.Price || 1;
    const Z4 = data["CRIMSON_BOOTS"]?.Price || 1;
    const Z5 = data["AURORA_HELMET"]?.Price || 1;
    const Z6 = data["AURORA_CHESTPLATE"]?.Price || 1;
    const Z7 = data["AURORA_LEGGINGS"]?.Price || 1;
    const Z8 = data["AURORA_BOOTS"]?.Price || 1;
    const Z9 = data["TERROR_HELMET"]?.Price || 1;
    const Z10 = data["TERROR_CHESTPLATE"]?.Price || 1;
    const Z11 = data["TERROR_LEGGINGS"]?.Price || 1;
    const Z12 = data["TERROR_BOOTS"]?.Price || 1;
    const Z13 = data["HOLLOW_HELMET"]?.Price || 1;
    const Z14 = data["HOLLOW_CHESTPLATE"]?.Price || 1;
    const Z15 = data["HOLLOW_LEGGINGS"]?.Price || 1;
    const Z16 = data["HOLLOW_BOOTS"]?.Price || 1;
    const Z17 = data["FERVOR_HELMET"]?.Price || 1;
    const Z18 = data["FERVOR_CHESTPLATE"]?.Price || 1;
    const Z19 = data["FERVOR_LEGGINGS"]?.Price || 1;
    const Z20 = data["FERVOR_BOOTS"]?.Price || 1;
    const Z21 = data["MOLTEN_BELT"]?.Price || 1;
    const Z22 = data["MOLTEN_CLOAK"]?.Price || 1;
    const Z23 = data["MOLTEN_BLACELET"]?.Price || 1;
    const Z24 = data["MOLTEN_NECKLACE"]?.Price || 1;


   
    //Fervor armor
    //Fervor Helmet
    const D7 = data["FERVOR_HELMET_ARACHNO_RESISTANCE_IV_"]?.Price; //Arachno Resistence
    const D8 = data["FERVOR_HELMET_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const D9 = data["FERVOR_HELMET_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const D10 = data["FERVOR_HELMET_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const D11 = data["FERVOR_HELMET_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const D12 = data["FERVOR_HELMET_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const D13 = data["FERVOR_HELMET_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const D14 = data["FERVOR_HELMET_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const D15 = data["FERVOR_HELMET_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const D16 = data["FERVOR_HELMET_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const D17 = data["FERVOR_HELMET_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const D18 = data["FERVOR_HELMET_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const D19 = data["FERVOR_HELMET_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const D20 = data["FERVOR_HELMET_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const D21 = data["FERVOR_HELMET_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const D22 = data["FERVOR_HELMET_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Fervor Chestplate
    const E7 = data["FERVOR_CHESTPLATE_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const E8 = data["FERVOR_CHESTPLATE_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const E9 = data["FERVOR_CHESTPLATE_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const E10 = data["FERVOR_CHESTPLATE_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const E11 = data["FERVOR_CHESTPLATE_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const E12 = data["FERVOR_CHESTPLATE_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const E13 = data["FERVOR_CHESTPLATE_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const E14 = data["FERVOR_CHESTPLATE_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const E15 = data["FERVOR_CHESTPLATE_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const E16 = data["FERVOR_CHESTPLATE_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const E17 = data["FERVOR_CHESTPLATE_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const E18 = data["FERVOR_CHESTPLATE_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const E19 = data["FERVOR_CHESTPLATE_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const E20 = data["FERVOR_CHESTPLATE_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const E21 = data["FERVOR_CHESTPLATE_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const E22 = data["FERVOR_CHESTPLATE_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Fervor Leggings
    const F7 = data["FERVOR_LEGGINGS_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const F8 = data["FERVOR_LEGGINGS_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const F9 = data["FERVOR_LEGGINGS_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const F10 = data["FERVOR_LEGGINGS_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const F11 = data["FERVOR_LEGGINGS_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const F12 = data["FERVOR_LEGGINGS_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const F13 = data["FERVOR_LEGGINGS_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const F14 = data["FERVOR_LEGGINGS_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const F15 = data["FERVOR_LEGGINGS_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const F16 = data["FERVOR_LEGGINGS_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const F17 = data["FERVOR_LEGGINGS_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const F18 = data["FERVOR_LEGGINGS_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const F19 = data["FERVOR_LEGGINGS_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const F20 = data["FERVOR_LEGGINGS_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const F21 = data["FERVOR_LEGGINGS_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const F22 = data["FERVOR_LEGGINGS_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Fervor Boots
    const G7 = data["FERVOR_BOOTS_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const G8 = data["FERVOR_BOOTS_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const G9 = data["FERVOR_BOOTS_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const G10 = data["FERVOR_BOOTS_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const G11 = data["FERVOR_BOOTS_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const G12 = data["FERVOR_BOOTS_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const G13 = data["FERVOR_BOOTS_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const G14 = data["FERVOR_BOOTS_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const G15 = data["FERVOR_BOOTS_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const G16 = data["FERVOR_BOOTS_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const G17 = data["FERVOR_BOOTS_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const G18 = data["FERVOR_BOOTS_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const G19 = data["FERVOR_BOOTS_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const G20 = data["FERVOR_BOOTS_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const G21 = data["FERVOR_BOOTS_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const G22 = data["FERVOR_BOOTS_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Crimson Armor
    //Crimson Helmet
    const J7 = data["CRIMSON_HELMET_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const J8 = data["CRIMSON_HELMET_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const J9 = data["CRIMSON_HELMET_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const J10 = data["CRIMSON_HELMET_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const J11 = data["CRIMSON_HELMET_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const J12 = data["CRIMSON_HELMET_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const J13 = data["CRIMSON_HELMET_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const J14 = data["CRIMSON_HELMET_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const J15 = data["CRIMSON_HELMET_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const J16 = data["CRIMSON_HELMET_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const J17 = data["CRIMSON_HELMET_MANA_POOL_IV_"]?.Price || 1; //Mana Pool
    const J18 = data["CRIMSON_HELMET_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const J19 = data["CRIMSON_HELMET_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const J20 = data["CRIMSON_HELMET_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const J21 = data["CRIMSON_HELMET_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const J22 = data["CRIMSON_HELMET_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Crimson Chestplate
    const K7 = data["CRIMSON_CHESTPLATE_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const K8 = data["CRIMSON_CHESTPLATE_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const K9 = data["CRIMSON_CHESTPLATE_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const K10 = data["CRIMSON_CHESTPLATE_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const K11 = data["CRIMSON_CHESTPLATE_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const K12 = data["CRIMSON_CHESTPLATE_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const K13 = data["CRIMSON_CHESTPLATE_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const K14 = data["CRIMSON_CHESTPLATE_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const K15 = data["CRIMSON_CHESTPLATE_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const K16 = data["CRIMSON_CHESTPLATE_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const K17 = data["CRIMSON_CHESTPLATE_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const K18 = data["CRIMSON_CHESTPLATE_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const K19 = data["CRIMSON_CHESTPLATE_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const K20 = data["CRIMSON_CHESTPLATE_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const K21 = data["CRIMSON_CHESTPLATE_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const K22 = data["CRIMSON_CHESTPLATE_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Crimson Leggings
    const L7 = data["CRIMSON_LEGGINGS_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const L8 = data["CRIMSON_LEGGINGS_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const L9 = data["CRIMSON_LEGGINGS_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const L10 = data["CRIMSON_LEGGINGS_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const L11 = data["CRIMSON_LEGGINGS_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const L12 = data["CRIMSON_LEGGINGS_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const L13 = data["CRIMSON_LEGGINGS_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const L14 = data["CRIMSON_LEGGINGS_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const L15 = data["CRIMSON_LEGGINGS_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const L16 = data["CRIMSON_LEGGINGS_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const L17 = data["CRIMSON_LEGGINGS_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const L18 = data["CRIMSON_LEGGINGS_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const L19 = data["CRIMSON_LEGGINGS_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const L20 = data["CRIMSON_LEGGINGS_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const L21 = data["CRIMSON_LEGGINGS_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const L22 = data["CRIMSON_LEGGINGS_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Crimson Boots
    const M7 = data["CRIMSON_BOOTS_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const M8 = data["CRIMSON_BOOTS_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const M9 = data["CRIMSON_BOOTS_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const M10 = data["CRIMSON_BOOTS_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const M11 = data["CRIMSON_BOOTS_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const M12 = data["CRIMSON_BOOTS_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const M13 = data["CRIMSON_BOOTS_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const M14 = data["CRIMSON_BOOTS_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const M15 = data["CRIMSON_BOOTS_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const M16 = data["CRIMSON_BOOTS_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const M17 = data["CRIMSON_BOOTS_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const M18 = data["CRIMSON_BOOTS_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const M19 = data["CRIMSON_BOOTS_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const M20 = data["CRIMSON_BOOTS_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const M21 = data["CRIMSON_BOOTS_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const M22 = data["CRIMSON_BOOTS_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Aurora Armor
    //Aurora Helmet
    const D26 = data["AURORA_HELMET_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const D27 = data["AURORA_HELMET_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const D28 = data["AURORA_HELMET_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const D29 = data["AURORA_HELMET_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const D30 = data["AURORA_HELMET_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const D31 = data["AURORA_HELMET_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const D32 = data["AURORA_HELMET_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const D33 = data["AURORA_HELMET_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const D34 = data["AURORA_HELMET_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const D35 = data["AURORA_HELMET_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const D36 = data["AURORA_HELMET_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const D37 = data["AURORA_HELMET_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const D38 = data["AURORA_HELMET_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const D39 = data["AURORA_HELMET_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const D40 = data["AURORA_HELMET_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const D41 = data["AURORA_HELMET_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Aurora Chestplate
    const E26 = data["AURORA_CHESTPLATE_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const E27 = data["AURORA_CHESTPLATE_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const E28 = data["AURORA_CHESTPLATE_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const E29 = data["AURORA_CHESTPLATE_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const E30 = data["AURORA_CHESTPLATE_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const E31 = data["AURORA_CHESTPLATE_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const E32 = data["AURORA_CHESTPLATE_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const E33 = data["AURORA_CHESTPLATE_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const E34 = data["AURORA_CHESTPLATE_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const E35 = data["AURORA_CHESTPLATE_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const E36 = data["AURORA_CHESTPLATE_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const E37 = data["AURORA_CHESTPLATE_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const E38 = data["AURORA_CHESTPLATE_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const E39 = data["AURORA_CHESTPLATE_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const E40 = data["AURORA_CHESTPLATE_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const E41 = data["AURORA_CHESTPLATE_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Aurora Leggings
    const F26 = data["AURORA_LEGGINGS_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const F27 = data["AURORA_LEGGINGS_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const F28 = data["AURORA_LEGGINGS_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const F29 = data["AURORA_LEGGINGS_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const F30 = data["AURORA_LEGGINGS_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const F31 = data["AURORA_LEGGINGS_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const F32 = data["AURORA_LEGGINGS_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const F33 = data["AURORA_LEGGINGS_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const F34 = data["AURORA_LEGGINGS_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const F35 = data["AURORA_LEGGINGS_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const F36 = data["AURORA_LEGGINGS_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const F37 = data["AURORA_LEGGINGS_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const F38 = data["AURORA_LEGGINGS_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const F39 = data["AURORA_LEGGINGS_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const F40 = data["AURORA_LEGGINGS_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const F41 = data["AURORA_LEGGINGS_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Aurora Boots
    const G26 = data["AURORA_BOOTS_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const G27 = data["AURORA_BOOTS_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const G28 = data["AURORA_BOOTS_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const G29 = data["AURORA_BOOTS_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const G30 = data["AURORA_BOOTS_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const G31 = data["AURORA_BOOTS_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const G32 = data["AURORA_BOOTS_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const G33 = data["AURORA_BOOTS_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const G34 = data["AURORA_BOOTS_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const G35 = data["AURORA_BOOTS_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const G36 = data["AURORA_BOOTS_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const G37 = data["AURORA_BOOTS_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const G38 = data["AURORA_BOOTS_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const G39 = data["AURORA_BOOTS_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const G40 = data["AURORA_BOOTS_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const G41 = data["AURORA_BOOTS_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Hollow Armor
    //Hollow Helmet
    const J26 = data["HOLLOW_HELMET_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const J27 = data["HOLLOW_HELMET_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const J28 = data["HOLLOW_HELMET_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const J29 = data["HOLLOW_HELMET_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const J30 = data["HOLLOW_HELMET_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const J31 = data["HOLLOW_HELMET_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const J32 = data["HOLLOW_HELMET_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const J33 = data["HOLLOW_HELMET_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const J34 = data["HOLLOW_HELMET_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const J35 = data["HOLLOW_HELMET_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const J36 = data["HOLLOW_HELMET_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const J37 = data["HOLLOW_HELMET_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const J38 = data["HOLLOW_HELMET_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const J39 = data["HOLLOW_HELMET_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const J40 = data["HOLLOW_HELMET_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const J41 = data["HOLLOW_HELMET_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Hollow Chestplate
    const K26 = data["HOLLOW_CHESTPLATE_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const K27 = data["HOLLOW_CHESTPLATE_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const K28 = data["HOLLOW_CHESTPLATE_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const K29 = data["HOLLOW_CHESTPLATE_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const K30 = data["HOLLOW_CHESTPLATE_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const K31 = data["HOLLOW_CHESTPLATE_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const K32 = data["HOLLOW_CHESTPLATE_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const K33 = data["HOLLOW_CHESTPLATE_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const K34 = data["HOLLOW_CHESTPLATE_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const K35 = data["HOLLOW_CHESTPLATE_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const K36 = data["HOLLOW_CHESTPLATE_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const K37 = data["HOLLOW_CHESTPLATE_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const K38 = data["HOLLOW_CHESTPLATE_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const K39 = data["HOLLOW_CHESTPLATE_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const K40 = data["HOLLOW_CHESTPLATE_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const K41 = data["HOLLOW_CHESTPLATE_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Hollow Leggings
    const L26 = data["HOLLOW_LEGGINGS_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const L27 = data["HOLLOW_LEGGINGS_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const L28 = data["HOLLOW_LEGGINGS_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const L29 = data["HOLLOW_LEGGINGS_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const L30 = data["HOLLOW_LEGGINGS_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const L31 = data["HOLLOW_LEGGINGS_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const L32 = data["HOLLOW_LEGGINGS_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const L33 = data["HOLLOW_LEGGINGS_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const L34 = data["HOLLOW_LEGGINGS_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const L35 = data["HOLLOW_LEGGINGS_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const L36 = data["HOLLOW_LEGGINGS_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const L37 = data["HOLLOW_LEGGINGS_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const L38 = data["HOLLOW_LEGGINGS_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const L39 = data["HOLLOW_LEGGINGS_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const L40 = data["HOLLOW_LEGGINGS_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const L41 = data["HOLLOW_LEGGINGS_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Hollow Boots
    const M26 = data["HOLLOW_BOOTS_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const M27 = data["HOLLOW_BOOTS_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const M28 = data["HOLLOW_BOOTS_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const M29 = data["HOLLOW_BOOTS_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const M30 = data["HOLLOW_BOOTS_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const M31 = data["HOLLOW_BOOTS_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const M32 = data["HOLLOW_BOOTS_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const M33 = data["HOLLOW_BOOTS_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const M34 = data["HOLLOW_BOOTS_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const M35 = data["HOLLOW_BOOTS_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const M36 = data["HOLLOW_BOOTS_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const M37 = data["HOLLOW_BOOTS_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const M38 = data["HOLLOW_BOOTS_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const M39 = data["HOLLOW_BOOTS_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const M40 = data["HOLLOW_BOOTS_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const M41 = data["HOLLOW_BOOTS_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Terror Armor
    //Terror Helmet
    const D45 = data["TERROR_HELMET_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const D46 = data["TERROR_HELMET_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const D47 = data["TERROR_HELMET_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const D48 = data["TERROR_HELMET_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const D49 = data["TERROR_HELMET_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const D50 = data["TERROR_HELMET_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const D51 = data["TERROR_HELMET_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const D52 = data["TERROR_HELMET_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const D53 = data["TERROR_HELMET_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const D54 = data["TERROR_HELMET_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const D55 = data["TERROR_HELMET_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const D56 = data["TERROR_HELMET_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const D57 = data["TERROR_HELMET_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const D58 = data["TERROR_HELMET_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const D59 = data["TERROR_HELMET_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const D60 = data["TERROR_HELMET_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Terror Chestplate
    const E45 = data["TERROR_CHESTPLATE_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const E46 = data["TERROR_CHESTPLATE_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const E47 = data["TERROR_CHESTPLATE_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const E48 = data["TERROR_CHESTPLATE_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const E49 = data["TERROR_CHESTPLATE_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const E50 = data["TERROR_CHESTPLATE_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const E51 = data["TERROR_CHESTPLATE_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const E52 = data["TERROR_CHESTPLATE_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const E53 = data["TERROR_CHESTPLATE_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const E54 = data["TERROR_CHESTPLATE_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const E55 = data["TERROR_CHESTPLATE_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const E56 = data["TERROR_CHESTPLATE_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const E57 = data["TERROR_CHESTPLATE_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const E58 = data["TERROR_CHESTPLATE_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const E59 = data["TERROR_CHESTPLATE_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const E60 = data["TERROR_CHESTPLATE_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Terror Leggings
    const F45 = data["TERROR_LEGGINGS_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const F46 = data["TERROR_LEGGINGS_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const F47 = data["TERROR_LEGGINGS_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const F48 = data["TERROR_LEGGINGS_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const F49 = data["TERROR_LEGGINGS_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const F50 = data["TERROR_LEGGINGS_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const F51 = data["TERROR_LEGGINGS_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const F52 = data["TERROR_LEGGINGS_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const F53 = data["TERROR_LEGGINGS_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const F54 = data["TERROR_LEGGINGS_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const F55 = data["TERROR_LEGGINGS_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const F56 = data["TERROR_LEGGINGS_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const F57 = data["TERROR_LEGGINGS_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const F58 = data["TERROR_LEGGINGS_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const F59 = data["TERROR_LEGGINGS_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const F60 = data["TERROR_LEGGINGS_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Terror Boots
    const G45 = data["TERROR_BOOTS_ARACHNO_RESISTANCE_IV_"]?.Price ?? Infinity; //Arachno Resistence
    const G46 = data["TERROR_BOOTS_BLAZING_RESISTANCE_IV_"]?.Price ?? Infinity; //Blazing Resistance
    const G47 = data["TERROR_BOOTS_BREEZE_IV_"]?.Price ?? Infinity; //Breeze
    const G48 = data["TERROR_BOOTS_DOMINANCE_IV_"]?.Price ?? Infinity; //Dominance
    const G49 = data["TERROR_BOOTS_ENDER_RESISTANCE_IV_"]?.Price ?? Infinity; //Ender Resistance
    const G50 = data["TERROR_BOOTS_§bEXPERIENCE_IV_"]?.Price ?? Infinity; //Experience
    const G51 = data["TERROR_BOOTS_FORTITUDE_IV_"]?.Price ?? Infinity; //Fortitude
    const G52 = data["TERROR_BOOTS_LIFE_REGENERATION_IV_"]?.Price ?? Infinity; //Life Regeneration
    const G53 = data["TERROR_BOOTS_LIFELINE_IV_"]?.Price ?? Infinity; //Lifeline
    const G54 = data["TERROR_BOOTS_MAGIC_FIND_IV_"]?.Price ?? Infinity; //Magic Find
    const G55 = data["TERROR_BOOTS_MANA_POOL_IV_"]?.Price ?? Infinity; //Mana Pool
    const G56 = data["TERROR_BOOTS_MANA_REGENERATION_IV_"]?.Price ?? Infinity; //Mana Regeneration
    const G57 = data["TERROR_BOOTS_VITALITY_IV_"]?.Price ?? Infinity; //Vitality
    const G58 = data["TERROR_BOOTS_§bSPEED_IV_"]?.Price ?? Infinity; //Speed
    const G59 = data["TERROR_BOOTS_UNDEAD_RESISTANCE_IV_"]?.Price ?? Infinity; //Undead Resistance
    const G60 = data["TERROR_BOOTS_VETERAN_IV_"]?.Price ?? Infinity; //Veteran
    //Molten Equipment
    //Molten Belt
    const J45 = data["MOLTEN_BELT_ARACHNO_RESISTANCE_IV_"]?.Price || Z21; //Arachno Resistence
    const J46 = data["MOLTEN_BELT_BLAZING_RESISTANCE_IV_"]?.Price || Z21; //Blazing Resistance
    const J47 = data["MOLTEN_BELT_BREEZE_IV_"]?.Price || Z21; //Breeze
    const J48 = data["MOLTEN_BELT_DOMINANCE_IV_"]?.Price || Z21; //Dominance
    const J49 = data["MOLTEN_BELT_ENDER_RESISTANCE_IV_"]?.Price || Z21; //Ender Resistance
    const J50 = data["MOLTEN_BELT_§bEXPERIENCE_IV_"]?.Price || Z21; //Experience
    const J51 = data["MOLTEN_BELT_FORTITUDE_IV_"]?.Price || Z21; //Fortitude
    const J52 = data["MOLTEN_BELT_LIFE_REGENERATION_IV_"]?.Price || Z21; //Life Regeneration
    const J53 = data["MOLTEN_BELT_LIFELINE_IV_"]?.Price || Z21; //Lifeline
    const J54 = data["MOLTEN_BELT_MAGIC_FIND_IV_"]?.Price || Z21; //Magic Find
    const J55 = data["MOLTEN_BELT_MANA_POOL_IV_"]?.Price || Z21; //Mana Pool
    const J56 = data["MOLTEN_BELT_MANA_REGENERATION_IV_"]?.Price || Z21; //Mana Regeneration
    const J57 = data["MOLTEN_BELT_VITALITY_IV_"]?.Price || Z21; //Vitality
    const J58 = data["MOLTEN_BELT_§bSPEED_IV_"]?.Price || Z21; //Speed
    const J59 = data["MOLTEN_BELT_UNDEAD_RESISTANCE_IV_"]?.Price || Z21; //Undead Resistance
    const J60 = data["MOLTEN_BELT_VETERAN_IV_"]?.Price || Z21; //Veteran
    //Molten Claok
    const K45 = data["MOLTEN_CLOAK_ARACHNO_RESISTANCE_IV_"]?.Price || Z22; //Arachno Resistence
    const K46 = data["MOLTEN_CLOAK_BLAZING_RESISTANCE_IV_"]?.Price || Z22; //Blazing Resistance
    const K47 = data["MOLTEN_CLOAK_BREEZE_IV_"]?.Price || Z22; //Breeze
    const K48 = data["MOLTEN_CLOAK_DOMINANCE_IV_"]?.Price || Z22; //Dominance
    const K49 = data["MOLTEN_CLOAK_ENDER_RESISTANCE_IV_"]?.Price || Z22; //Ender Resistance
    const K50 = data["MOLTEN_CLOAK_§bEXPERIENCE_IV_"]?.Price || Z22; //Experience
    const K51 = data["MOLTEN_CLOAK_FORTITUDE_IV_"]?.Price || Z22; //Fortitude
    const K52 = data["MOLTEN_CLOAK_LIFE_REGENERATION_IV_"]?.Price || Z22; //Life Regeneration
    const K53 = data["MOLTEN_CLOAK_LIFELINE_IV_"]?.Price || Z22; //Lifeline
    const K54 = data["MOLTEN_CLOAK_MAGIC_FIND_IV_"]?.Price || Z22; //Magic Find
    const K55 = data["MOLTEN_CLOAK_MANA_POOL_IV_"]?.Price || Z22; //Mana Pool
    const K56 = data["MOLTEN_CLOAK_MANA_REGENERATION_IV_"]?.Price || Z22; //Mana Regeneration
    const K57 = data["MOLTEN_CLOAK_VITALITY_IV_"]?.Price || Z22; //Vitality
    const K58 = data["MOLTEN_CLOAK_§bSPEED_IV_"]?.Price || Z22; //Speed
    const K59 = data["MOLTEN_CLOAK_UNDEAD_RESISTANCE_IV_"]?.Price || Z22; //Undead Resistance
    const K60 = data["MOLTEN_CLOAK_VETERAN_IV_"]?.Price || Z22; //Veteran
    //Molten Bracelet
    const L45 = data["MOLTEN_BRACELET_ARACHNO_RESISTANCE_IV_"]?.Price || Z23; //Arachno Resistence
    const L46 = data["MOLTEN_BRACELET_BLAZING_RESISTANCE_IV_"]?.Price || Z23; //Blazing Resistance
    const L47 = data["MOLTEN_BRACELET_BREEZE_IV_"]?.Price || Z23; //Breeze
    const L48 = data["MOLTEN_BRACELET_DOMINANCE_IV_"]?.Price || Z23; //Dominance
    const L49 = data["MOLTEN_BRACELET_ENDER_RESISTANCE_IV_"]?.Price || Z23; //Ender Resistance
    const L50 = data["MOLTEN_BRACELET_§bEXPERIENCE_IV_"]?.Price || Z23; //Experience
    const L51 = data["MOLTEN_BRACELET_FORTITUDE_IV_"]?.Price || Z23; //Fortitude
    const L52 = data["MOLTEN_BRACELET_LIFE_REGENERATION_IV_"]?.Price || Z23; //Life Regeneration
    const L53 = data["MOLTEN_BRACELET_LIFELINE_IV_"]?.Price || Z23; //Lifeline
    const L54 = data["MOLTEN_BRACELET_MAGIC_FIND_IV_"]?.Price || Z23; //Magic Find
    const L55 = data["MOLTEN_BRACELET_MANA_POOL_IV_"]?.Price || Z23; //Mana Pool
    const L56 = data["MOLTEN_BRACELET_MANA_REGENERATION_IV_"]?.Price || Z23; //Mana Regeneration
    const L57 = data["MOLTEN_BRACELET_VITALITY_IV_"]?.Price || Z23; //Vitality
    const L58 = data["MOLTEN_BRACELET_§bSPEED_IV_"]?.Price || Z23; //Speed
    const L59 = data["MOLTEN_BRACELET_UNDEAD_RESISTANCE_IV_"]?.Price || Z23; //Undead Resistance
    const L60 = data["MOLTEN_BRACELET_VETERAN_IV_"]?.Price || Z23; //Veteran
    //Molten Necklace
    const M45 = data["MOLTEN_NECKLACE_ARACHNO_RESISTANCE_IV_"]?.Price || Z24; //Arachno Resistence
    const M46 = data["MOLTEN_NECKLACE_BLAZING_RESISTANCE_IV_"]?.Price || Z24; //Blazing Resistance
    const M47 = data["MOLTEN_NECKLACE_BREEZE_IV_"]?.Price || Z24; //Breeze
    const M48 = data["MOLTEN_NECKLACE_DOMINANCE_IV_"]?.Price || Z24; //Dominance
    const M49 = data["MOLTEN_NECKLACE_ENDER_RESISTANCE_IV_"]?.Price || Z24; //Ender Resistance
    const M50 = data["MOLTEN_NECKLACE_§bEXPERIENCE_IV_"]?.Price || Z24; //Experience
    const M51 = data["MOLTEN_NECKLACE_FORTITUDE_IV_"]?.Price || Z24; //Fortitude
    const M52 = data["MOLTEN_NECKLACE_LIFE_REGENERATION_IV_"]?.Price || Z24; //Life Regeneration
    const M53 = data["MOLTEN_NECKLACE_LIFELINE_IV_"]?.Price || Z24; //Lifeline
    const M54 = data["MOLTEN_NECKLACE_MAGIC_FIND_IV_"]?.Price || Z24; //Magic Find
    const M55 = data["MOLTEN_NECKLACE_MANA_POOL_IV_"]?.Price || Z24; //Mana Pool
    const M56 = data["MOLTEN_NECKLACE_MANA_REGENERATION_IV_"]?.Price || Z24; //Mana Regeneration
    const M57 = data["MOLTEN_NECKLACE_VITALITY_IV_"]?.Price || Z24; //Vitality
    const M58 = data["MOLTEN_NECKLACE_§bSPEED_IV_"]?.Price || Z24; //Speed
    const M59 = data["MOLTEN_NECKLACE_UNDEAD_RESISTANCE_IV_"]?.Price || Z24; //Undead Resistance
    const M60 = data["MOLTEN_NECKLACE_VETERAN_IV_"]?.Price || Z24; //Veteran
    //God Roles
    //aurora Helmet
    const D64 = data["AURORA_HELMET_MP_MR"]?.Price || Z5; //MP MR
    const D65 = data["AURORA_HELMET_MP_VET"]?.Price || Z5; //MP VET
    const D66 = data["AURORA_HELMET_MP_BR"]?.Price || Z5; //MP BR
    //aurora Chestplate
    const E64 = data["AURORA_CHESTPLATE_MP_MR"]?.Price || Z6; //MP MR
    const E65 = data["AURORA_CHESTPLATE_MP_VET"]?.Price || Z6; //MP VET
    const E66 = data["AURORA_CHESTPLATE_MP_BR"]?.Price || Z6; //MP BR
    //aurora Leggings
    const F64 = data["AURORA_LEGGINGS_MP_MR"]?.Price || Z7; //MP MR
    const F65 = data["AURORA_LEGGINGS_MP_VET"]?.Price || Z7; //MP VET
    const F66 = data["AURORA_LEGGINGS_MP_BR"]?.Price || Z7; //MP BR
    //aurora Boots
    const G64 = data["AURORA_BOOTS_MP_MR"]?.Price || Z8; //MP MR
    const G65 = data["AURORA_BOOTS_MP_VET"]?.Price || Z8; //MP VET
    const G66 = data["AURORA_BOOTS_MP_BR"]?.Price || Z8; //MP BR
    // Crimson Helmet
    const D69 = data["CRIMSON_HELMET_MF_VET"]?.Price || Z1; //MF VET
    const D70 = data["CRIMSON_HELMET_VIT_VET"]?.Price || Z1; //VIT VET
    const D71 = data["CRIMSON_HELMET_MF_VIT"]?.Price || Z1; //MF VIT
    const D72 = data["CRIMSON_HELMET_MP_VET"]?.Price || Z1; //MP VET
    // Crimson Chestplate
    const E69 = data["CRIMSON_CHESTPLATE_MF_VET"]?.Price || Z2; //MF VET
    const E70 = data["CRIMSON_CHESTPLATE_VIT_VET"]?.Price || Z2; //VIT VET
    const E71 = data["CRIMSON_CHESTPLATE_MF_VIT"]?.Price || Z2; //MF VIT
    const E72 = data["CRIMSON_CHESTPLATE_MP_VET"]?.Price || Z2; //MP VET
    // Crimson Leggings
    const F69 = data["CRIMSON_LEGGINGS_MF_VET"]?.Price || Z3; //MF VET
    const F70 = data["CRIMSON_LEGGINGS_VIT_VET"]?.Price || Z3; //VIT VET
    const F71 = data["CRIMSON_LEGGINGS_MF_VIT"]?.Price || Z3; //MF VIT
    const F72 = data["CRIMSON_LEGGINGS_MP_VET"]?.Price || Z3; //MP VET
    // Crimson Boots
    const G69 = data["CRIMSON_BOOTS_MF_VET"]?.Price || Z4; //MF VET
    const G70 = data["CRIMSON_BOOTS_VIT_VET"]?.Price || Z4; //VIT VET
    const G71 = data["CRIMSON_BOOTS_MF_VIT"]?.Price || Z4; //MF VIT
    const G72 = data["CRIMSON_BOOTS_MP_VET"]?.Price || Z4; //MP VET
    
    // Terror Helmet
    const D75 = data["TERROR_HELMET_LL_MP"]?.Price || Z9; //LL MP
    const D76 = data["TERROR_HELMET_DOM_VIT"]?.Price || Z9; //DOM VIT
    const D77 = data["TERROR_HELMET_DOM_MP"]?.Price || Z9; //DOM MP
    // Terror Chestplate
    const E75 = data["TERROR_CHESTPLATE_LL_MP"]?.Price || Z10; //LL MP
    const E76 = data["TERROR_CHESTPLATE_DOM_VIT"]?.Price || Z10; //DOM VIT
    const E77 = data["TERROR_CHESTPLATE_DOM_MP"]?.Price || Z10; //DOM MP
    // Terror Leggings
    const F75 = data["TERROR_LEGGINGS_LL_MP"]?.Price || Z11; //LL MP
    const F76 = data["TERROR_LEGGINGS_DOM_VIT"]?.Price || Z11; //DOM VIT
    const F77 = data["TERROR_LEGGINGS_DOM_MP"]?.Price || Z11; //DOM MP
    // Terror Boots
    const G75 = data["TERROR_BOOTS_LL_MP"]?.Price || Z12; //LL MP
    const G76 = data["TERROR_BOOTS_DOM_VIT"]?.Price || Z12; //DOM VIT
    const G77 = data["TERROR_BOOTS_DOM_MP"]?.Price || Z12; //DOM MP
    //Molten Belt
    const D80 = data["MOLTEN_BELT_LL_MP"]?.Price || Z21; //LL MP
    const D81 = data["MOLTEN_BELT_MF_VET"]?.Price || Z21; //MF VET
    const D82 = data["MOLTEN_BELT_MP_MR"]?.Price || Z21; //MP MR
    const D83 = data["MOLTEN_BELT_MF_VIT"]?.Price || Z21; //MF VIT
    const D84 = data["MOLTEN_BELT_MP_VET"]?.Price || Z21; //MP VET
    const D85 = data["MOLTEN_BELT_DOM_MP"]?.Price || Z21; //DOM MP
    const D86 = data["MOLTEN_BELT_MP_VIT"]?.Price || Z21; //MP ViT
    const D87 = data["MOLTEN_BELT_BR_VET"]?.Price || Z21; //BR VET
    const D88 = data["MOLTEN_BELT_MR_VET"]?.Price || Z21; //MR VET
    //Molten Claok
    const E80 = data["MOLTEN_CLOAK_LL_MP"]?.Price || Z22; //LL MP
    const E81 = data["MOLTEN_CLOAK_MF_VET"]?.Price || Z22; //MF VET
    const E82 = data["MOLTEN_CLOAK_MP_MR"]?.Price || Z22; //MP MR
    const E83 = data["MOLTEN_CLOAK_MF_VIT"]?.Price || Z22; //MF VIT
    const E84 = data["MOLTEN_CLOAK_MP_VET"]?.Price || Z22; //MP VET
    const E85 = data["MOLTEN_CLOAK_DOM_MP"]?.Price || Z22; //DOM MP
    const E86 = data["MOLTEN_CLOAK_MP_VIT"]?.Price || Z22; //MP ViT
    const E87 = data["MOLTEN_CLOAK_BR_VET"]?.Price || Z22; //BR VET
    const E88 = data["MOLTEN_CLOAK_MR_VET"]?.Price || Z22; //MR VET
    //Molten Bracelet
    const F80 = data["MOLTEN_BRACELET_LL_MP"]?.Price || Z23; //LL MP
    const F81 = data["MOLTEN_BRACELET_MF_VET"]?.Price || Z23; //MF VET
    const F82 = data["MOLTEN_BRACELET_MP_MR"]?.Price || Z23; //MP MR
    const F83 = data["MOLTEN_BRACELET_MF_VIT"]?.Price || Z23; //MF VIT
    const F84 = data["MOLTEN_BRACELET_MP_VET"]?.Price || Z23; //MP VET
    const F85 = data["MOLTEN_BRACELET_DOM_MP"]?.Price || Z23; //DOM MP
    const F86 = data["MOLTEN_BRACELET_MP_VIT"]?.Price || Z23; //MP ViT
    const F87 = data["MOLTEN_BRACELET_BR_VET"]?.Price || Z23; //BR VET
    const F88 = data["MOLTEN_BRACELET_MR_VET"]?.Price || Z23; //MR VET
    //Molten Necklace
    const G80 = data["MOLTEN_NECKLACE_LL_MP"]?.Price || Z24; //LL MP
    const G81 = data["MOLTEN_NECKLACE_MF_VET"]?.Price || Z24; //MF VET
    const G82 = data["MOLTEN_NECKLACE_MP_MR"]?.Price || Z24; //MP MR
    const G83 = data["MOLTEN_NECKLACE_MF_VIT"]?.Price || Z24; //MF VIT
    const G84 = data["MOLTEN_NECKLACE_MP_VET"]?.Price || Z24; //MP VET
    const G85 = data["MOLTEN_NECKLACE_DOM_MP"]?.Price || Z24; //DOM MP
    const G86 = data["MOLTEN_NECKLACE_MP_VIT"]?.Price || Z24; //MP ViT
    const G87 = data["MOLTEN_NECKLACE_BR_VET"]?.Price || Z24; //BR VET
    const G88 = data["MOLTEN_NECKLACE_MR_VET"]?.Price || Z24; //MR VET

    // Generic Arachno Resistance
    let GenericHelmetArachnoResistance   = safeMin(D7,  J7,  D26, J26, D45);
    let GenericChestplateArachnoResistance = safeMin(E7,  K7,  E26, K26, E45);
    let GenericLeggingsArachnoResistance = safeMin(F7,  L7,  F26, L26, F45);
    let GenericBootsArachnoResistance    = safeMin(G7,  M7,  G26, M26, G45);
        
    // Generic Blazing Resistance
    let GenericHelmetBlazingResistance   = safeMin(D8,  J8,  D27, J27, D46);
    let GenericChestplateBlazingResistance = safeMin(E8,  K8,  E27, K27, E46);
    let GenericLeggingsBlazingResistance = safeMin(F8,  L8,  F27, L27, F46);
    let GenericBootsBlazingResistance    = safeMin(G8,  M8,  G27, M27, G46);
        
    // Generic Breeze
    let GenericHelmetBreeze   = safeMin(D9,  J9,  D28, J28, D47);
    let GenericChestplateBreeze = safeMin(E9,  K9,  E28, K28, E47);
    let GenericLeggingsBreeze = safeMin(F9,  L9,  F28, L28, F47);
    let GenericBootsBreeze    = safeMin(G9,  M9,  G28, M28, G47);
        
    // Generic Dominance
    let GenericHelmetDominance   = safeMin(D10, J10, D29, J29, D48);
    let GenericChestplateDominance = safeMin(E10, K10, E29, K29, E48);
    let GenericLeggingsDominance = safeMin(F10, L10, F29, L29, F48);
    let GenericBootsDominance    = safeMin(G10, M10, G29, M29, G48);
        
    // Generic Ender Resistance
    let GenericHelmetEnderResistance   = safeMin(D11, J11, D30, J30, D49);
    let GenericChestplateEnderResistance = safeMin(E11, K11, E30, K30, E49);
    let GenericLeggingsEnderResistance = safeMin(F11, L11, F30, L30, F49);
    let GenericBootsEnderResistance    = safeMin(G11, M11, G30, M30, G49);
        
    // Generic Experience
    let GenericHelmetExperience   = safeMin(D12, J12, D31, J31, D50);
    let GenericChestplateExperience = safeMin(E12, K12, E31, K31, E50);
    let GenericLeggingsExperience = safeMin(F12, L12, F31, L31, F50);
    let GenericBootsExperience    = safeMin(G12, M12, G31, M31, G50);
        
    // Generic Fortitude
    let GenericHelmetFortitude   = safeMin(D13, J13, D32, J32, D51);
    let GenericChestplateFortitude = safeMin(E13, K13, E32, K32, E51);
    let GenericLeggingsFortitude = safeMin(F13, L13, F32, L32, F51);
    let GenericBootsFortitude    = safeMin(G13, M13, G32, M32, G51);
        
    // Generic Life Regeneration
    let GenericHelmetLifeRegeneration   = safeMin(D14, J14, D33, J33, D52);
    let GenericChestplateLifeRegeneration = safeMin(E14, K14, E33, K33, E52);
    let GenericLeggingsLifeRegeneration = safeMin(F14, L14, F33, L33, F52);
    let GenericBootsLifeRegeneration    = safeMin(G14, M14, G33, M33, G52);
        
    // Generic Lifeline
    let GenericHelmetLifeline   = safeMin(D15, J15, D34, J34, D53);
    let GenericChestplateLifeline = safeMin(E15, K15, E34, K34, E53);
    let GenericLeggingsLifeline = safeMin(F15, L15, F34, L34, F53);
    let GenericBootsLifeline    = safeMin(G15, M15, G34, M34, G53);
        
    // Generic Magic Find
    let GenericHelmetMagicFind   = safeMin(D16, J16, D35, J35, D54);
    let GenericChestplateMagicFind = safeMin(E16, K16, E35, K35, E54);
    let GenericLeggingsMagicFind = safeMin(F16, L16, F35, L35, F54);
    let GenericBootsMagicFind    = safeMin(G16, M16, G35, M35, G54);
        
    // Generic Mana Pool
    let GenericHelmetManaPool   = safeMin(D17, J17, D36, J36, D55);
    let GenericChestplateManaPool = safeMin(E17, K17, E36, K36, E55);
    let GenericLeggingsManaPool = safeMin(F17, L17, F36, L36, F55);
    let GenericBootsManaPool    = safeMin(G17, M17, G36, M36, G55);
        
    // Generic Mana Regeneration
    let GenericHelmetManaRegeneration   = safeMin(D18, J18, D37, J37, D56);
    let GenericChestplateManaRegeneration = safeMin(E18, K18, E37, K37, E56);
    let GenericLeggingsManaRegeneration = safeMin(F18, L18, F37, L37, F56);
    let GenericBootsManaRegeneration    = safeMin(G18, M18, G37, M37, G56);
        
    // Generic Vitality
    let GenericHelmetVitality   = safeMin(D19, J19, D38, J38, D57);
    let GenericChestplateVitality = safeMin(E19, K19, E38, K38, E57);
    let GenericLeggingsVitality = safeMin(F19, L19, F38, L38, F57);
    let GenericBootsVitality    = safeMin(G19, M19, G38, M38, G57);
        
    // Generic Speed
    let GenericHelmetSpeed   = safeMin(D20, J20, D39, J39, D58);
    let GenericChestplateSpeed = safeMin(E20, K20, E39, K39, E58);
    let GenericLeggingsSpeed = safeMin(F20, L20, F39, L39, F58);
    let GenericBootsSpeed    = safeMin(G20, M20, G39, M39, G58);
        
    // Generic Undead Resistance
    let GenericHelmetUndeadResistance   = safeMin(D21, J21, D40, J40, D59);
    let GenericChestplateUndeadResistance = safeMin(E21, K21, E40, K40, E59);
    let GenericLeggingsUndeadResistance = safeMin(F21, L21, F40, L40, F59);
    let GenericBootsUndeadResistance    = safeMin(G21, M21, G40, M40, G59);
        
    // Generic Veteran
    let GenericHelmetVeteran   = safeMin(D22, J22, D41, J41, D60);
    let GenericChestplateVeteran = safeMin(E22, K22, E41, K41, E60);
    let GenericLeggingsVeteran = safeMin(F22, L22, F41, L41, F60);
    let GenericBootsVeteran    = safeMin(G22, M22, G41, M41, G60);
    
    let moneyKuudraT4 = (((((((((3600/A4)/100)*4.04)/100)*(12.5)/2)*(GenericHelmetArachnoResistance + GenericHelmetBlazingResistance + GenericHelmetBreeze + GenericHelmetDominance + GenericHelmetEnderResistance + GenericHelmetExperience + GenericHelmetFortitude + GenericHelmetLifeRegeneration + GenericHelmetLifeline + GenericHelmetMagicFind + GenericHelmetManaPool + GenericHelmetManaRegeneration + GenericHelmetVitality + GenericHelmetSpeed + GenericHelmetUndeadResistance + GenericHelmetVeteran + GenericChestplateArachnoResistance + GenericChestplateBlazingResistance + GenericChestplateBreeze + GenericChestplateDominance + GenericChestplateEnderResistance + GenericChestplateExperience + GenericChestplateFortitude + GenericChestplateLifeRegeneration + GenericChestplateLifeline + GenericChestplateMagicFind + GenericChestplateManaPool + GenericChestplateManaRegeneration + GenericChestplateVitality + GenericChestplateSpeed + GenericChestplateUndeadResistance + GenericChestplateVeteran + GenericLeggingsArachnoResistance + GenericLeggingsBlazingResistance + GenericLeggingsBreeze + GenericLeggingsDominance + GenericLeggingsEnderResistance + GenericLeggingsExperience + GenericLeggingsFortitude + GenericLeggingsLifeRegeneration + GenericLeggingsLifeline + GenericLeggingsMagicFind + GenericLeggingsManaPool + GenericLeggingsManaRegeneration + GenericLeggingsVitality + GenericLeggingsSpeed + GenericLeggingsUndeadResistance + GenericLeggingsVeteran + GenericBootsArachnoResistance + GenericBootsBlazingResistance + GenericBootsBreeze + GenericBootsDominance + GenericBootsEnderResistance + GenericBootsExperience + GenericBootsFortitude + GenericBootsLifeRegeneration + GenericBootsLifeline + GenericBootsMagicFind + GenericBootsManaPool + GenericBootsManaRegeneration + GenericBootsVitality + GenericBootsSpeed + GenericBootsUndeadResistance + GenericBootsVeteran)) +
                        ((((3600/A4)/100)*2.424)/100*(12.5)/2)*(J45+J46+J47+J48+J49+J50+J51+J52+J53+J54+J55+J56+J57+J58+J59+J60+K45+K46+K47+K48+K49+K50+K51+K52+K53+K54+K55+K56+K57+K58+K59+K60+L45+L46+L47+L48+L49+L50+L51+L52+L53+L54+L55+L56+L57+L58+L59+L60+M45+M46+M47+M48+M49+M50+M51+M52+M53+M54+M55+M56+M57+M58+M59+M60) +
                        ((((3600/A4)/100)*1.212)*A7) +
                        ((((3600/A4)/100)*1.414)*A10) +
                        ((((3600/A4)/100)*0.404)*A13) +
                        ((((3600/A4)/100)*3.232)*A16) +
                        ((((3600/A4)/100)*3.232)*A19) +
                        ((((3600/A4)/100)*0.133)*A22) +
                        ((((3600/A4)/100)*0.133)*A25) +
                        ((((3600/A4)/100)*1.33)*A28) +
                        ((((3600/A4)/100)*15.957)*A31) +
                        ((((3600/A4)/100)*15.957)*A34) +
                        ((((3600/A4)/100)*15.957)*A37) +
                        ((((3600/A4)/100)*15.957)*A40) +
                        ((((3600/A4)/100)*1.33)*A43) +
                        ((((3600/A4)/100)*1.33)*A46) +
                        ((((3600/A4)/100)*1.33)*A49) +
                        ((((3600/A4)/100)*1.33)*A52) +
                        ((((3600/A4)/100)*1.33)*A55) +
                        ((((3600/A4)/100)*1.33)*A58) +
                        ((((3600/A4)/100)*1.33)*A61) +
                        ((((3600/A4)/100)*1.33)*A64) +
                        ((((3600/A4)/100)*1.33)*A67) +
                        ((((3600/A4)/100)*1.33)*A70) +
                        ((((3600/A4)/100)*0.665)*A73) +
                        ((((3600/A4)/100)*0.665)*A76) +
                        ((((3600/A4)/100)*0.665)*A79) +
                        ((((3600/A4)/100)*0.665)*A82) +
                        ((((3600/A4)/100)*0.665)*A85) +
                        ((((3600/A4)/100)*0.665)*A88) +
                        ((((3600/A4)/100)*0.665)*A91) +
                        ((((3600/A4)/100)*0.665)*A94) +
                        ((((3600/A4)/100)*1.33)*A97) +
                        ((((3600/A4)/100)*1.33)*A100) +
                        ((((3600/A4)/100)*1.33)*A103) +
                        ((((3600/A4)/100)*1.33)*A106) +
                        ((((3600/A4)/100)*1.33)*A109) +
                        ((((3600/A4)/100)*1.33)*A112) +
                        ((((3600/A4)/100)*1.33)*A115) +
                        ((((3600/A4)/100)*1.33)*A118) +
                        ((((3600/A4)/100)*1.33)*A121) +
                        ((((3600/A4)/100)*1.33)*A124) +
                        ((((3600/A4)/100)*1.33)*A127) +
                        ((((3600/A4)/100)*1.33)*A130) + 
                        (((3600/A4)*800)*A151) +
                        (((3600/A4)*2)*Z200) +
                        (((((3600/A4)/100)*4.04)/100)*((1/120)*100)*(D64+E64+F64+G64 + D65+E65+F65+G65 + D66+E66+F66+G66 + D69+E69+F69+G69 + D70+E70+F70+G70 + D71+E71+F71+G71 + D72+E72+F72+G72 + D76+E76+F76+G76 + D77+E77+F77+G77)) +
                        (((((3600/A4)/100)*2.424)/100)*((1/120)*100)*(D80+E80+F80+G80 + D81+E81+F81+G81 + D82+E82+F82+G82 + D83+E83+F83+G83 + D84+E84+F84+G84 + D85+E85+F85+G85 + D86+E86+F86+G86 + D87+E87+F87+G87 + D88+E88+F88+G88))) -
                        ((3600/A4)*(1200000+(40*A154)+(2*Z100))))/1000000).toFixed(2);

                
return `${moneyKuudraT4}M`;
}
function updateKuudraT4(data) {
const MoneyKuudraT4 = calculateKuudraT4(data); 
document.getElementById('KuudraT4').innerHTML = MoneyKuudraT4;
    localStorage.setItem('cached-KuudraT4', MoneyKuudraT4);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateKuudraT3(data) {
    const Z300 = 0; // Time to do 1 run in Seconds
    const Z400 = 2; // Time to do 1 run in Minutes
    const A4 = Number((Z300 + (Z400 * 60))); // Time to do 1 run in seconds with minute conversion
    
    //Loot table
    const A7 = data["MANDRAA"]?.Price || 1;
    const A10 = data["KUUDRA_MANDIBLE"]?.Price || 1;
    const A13 = data["BURNING_KUUDRA_CORE"]?.Price || 1;
    const A16 = data["RUNIC_STAFF"]?.Price || 1;
    const A19 = data["HOLLOW_WAND"]?.Price || 1;
    const A22 = data["ENCHANTMENT_FATAL_TEMPO_1"]?.Price || 1;
    const A25 = data["ENCHANTMENT_INFERNO_1"]?.Price || 1;
    const A28 = data["WHEEL_OF_FATE"]?.Price || 1;
    const A31 = data["ENCHANTMENT_STRONG_MANA_3"]?.Price || 1;
    const A34 = data["ENCHANTMENT_FEROCIOUS_MANA_3"]?.Price || 1;
    const A37 = data["ENCHANTMENT_HARDENED_MANA_3"]?.Price || 1;
    const A40 = data["ENCHANTMENT_MANA_VAMPIRE_3"]?.Price || 1;
    const A43 = data["ATTRIBUTE_SHARD_MIDAS_TOUCH_II_"]?.Price || 1;
    const A46 = data["ATTRIBUTE_SHARD_COMBO_II_"]?.Price || 1;
    const A49 = data["ATTRIBUTE_SHARD_UNDEAD_II_"]?.Price || 1;
    const A52 = data["ATTRIBUTE_SHARD_ARACHNO_II_"]?.Price || 1;
    const A55 = data["ATTRIBUTE_SHARD_§bSPEED_II_"]?.Price || 1;
    const A58 = data["ATTRIBUTE_SHARD_MANA_POOL_II_"]?.Price || 1;
    const A61 = data["ATTRIBUTE_SHARD_§bEXPERIENCE_II_"]?.Price || 1;
    const A64 = data["ATTRIBUTE_SHARD_LIFE_REGENERATION_II_"]?.Price || 1;
    const A67 = data["ATTRIBUTE_SHARD_UNDEAD_RESISTANCE_II_"]?.Price || 1;
    const A70 = data["ATTRIBUTE_SHARD_ARACHNO_RESISTANCE_II_"]?.Price || 1;
    const A73 = data["ATTRIBUTE_SHARD_§bHUNTER_II_"]?.Price || 1;
    const A76 = data["ATTRIBUTE_SHARD_INFECTION_II_"]?.Price || 1;
    const A79 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_II_"]?.Price || 1;
    const A82 = data["ATTRIBUTE_SHARD_FISHERMAN_II_"]?.Price || 1;
    const A85 = data["ATTRIBUTE_SHARD_FISHING_SPEED_II_"]?.Price || 1;
    const A88 = data["ATTRIBUTE_SHARD_DOUBLE_HOOK_II_"]?.Price || 1;
    const A91 = data["ATTRIBUTE_SHARD_TROPHY_HUNTER_II_"]?.Price || 1;
    const A94 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_II_"]?.Price || 1;
    const A97 = data["ATTRIBUTE_SHARD_ATTACK_SPEED_II_"]?.Price || 1;
    const A100 = data["ATTRIBUTE_SHARD_ELITE_II_"]?.Price || 1;
    const A103 = data["ATTRIBUTE_SHARD_LIFE_RECOVERY_II_"]?.Price || 1;
    const A106 = data["ATTRIBUTE_SHARD_LIFELINE_II_"]?.Price || 1;
    const A109 = data["ATTRIBUTE_SHARD_BREEZE_II_"]?.Price || 1;
    const A112 = data["ATTRIBUTE_SHARD_IGNITION_II_"]?.Price || 1;
    const A115 = data["ATTRIBUTE_SHARD_MANA_STEAL_II_"]?.Price || 1;
    const A118 = data["ATTRIBUTE_SHARD_MANA_REGENERATION_II_"]?.Price || 1;
    const A121 = data["ATTRIBUTE_SHARD_VETERAN_II_"]?.Price || 1;
    const A124 = data["ATTRIBUTE_SHARD_VITALITY_II_"]?.Price || 1;
    const A127 = data["ATTRIBUTE_SHARD_ENDER_RESISTANCE_II_"]?.Price || 1;
    const A130 = data["ATTRIBUTE_SHARD_DOMINANCE_II_"]?.Price || 1;
    const A151 = data["ESSENCE_CRIMSON"]?.Price || 1;
    const A154 = data["ENCHANTED_MYCELIUM"]?.Price || 1;
    const Z100 = data["CORRUPTED_NETHER_STAR"]?.Price || 1; //Nether Stars (Added)
    const Z200 = data["KUUDRA_TEETH"]?.Price || 1; //Kuudra Teeth (Added)
    const Z1 = data["CRIMSON_HELMET"]?.Price || 1;
    const Z2 = data["CRIMSON_CHESTPLATE"]?.Price || 1;
    const Z3 = data["CRIMSON_LEGGINGS"]?.Price || 1;
    const Z4 = data["CRIMSON_BOOTS"]?.Price || 1;
    const Z5 = data["AURORA_HELMET"]?.Price || 1;
    const Z6 = data["AURORA_CHESTPLATE"]?.Price || 1;
    const Z7 = data["AURORA_LEGGINGS"]?.Price || 1;
    const Z8 = data["AURORA_BOOTS"]?.Price || 1;
    const Z9 = data["TERROR_HELMET"]?.Price || 1;
    const Z10 = data["TERROR_CHESTPLATE"]?.Price || 1;
    const Z11 = data["TERROR_LEGGINGS"]?.Price || 1;
    const Z12 = data["TERROR_BOOTS"]?.Price || 1;
    const Z13 = data["HOLLOW_HELMET"]?.Price || 1;
    const Z14 = data["HOLLOW_CHESTPLATE"]?.Price || 1;
    const Z15 = data["HOLLOW_LEGGINGS"]?.Price || 1;
    const Z16 = data["HOLLOW_BOOTS"]?.Price || 1;
    const Z17 = data["FERVOR_HELMET"]?.Price || 1;
    const Z18 = data["FERVOR_CHESTPLATE"]?.Price || 1;
    const Z19 = data["FERVOR_LEGGINGS"]?.Price || 1;
    const Z20 = data["FERVOR_BOOTS"]?.Price || 1;
    const Z21 = data["MOLTEN_BELT"]?.Price || 1;
    const Z22 = data["MOLTEN_CLOAK"]?.Price || 1;
    const Z23 = data["MOLTEN_BLACELET"]?.Price || 1;
    const Z24 = data["MOLTEN_NECKLACE"]?.Price || 1;


   
    //Fervor armor
    //Fervor Helmet
    const D7 = data["FERVOR_HELMET_ARACHNO_RESISTANCE_III_"]?.Price; //Arachno Resistence
    const D8 = data["FERVOR_HELMET_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const D9 = data["FERVOR_HELMET_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const D10 = data["FERVOR_HELMET_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const D11 = data["FERVOR_HELMET_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const D12 = data["FERVOR_HELMET_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const D13 = data["FERVOR_HELMET_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const D14 = data["FERVOR_HELMET_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const D15 = data["FERVOR_HELMET_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const D16 = data["FERVOR_HELMET_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const D17 = data["FERVOR_HELMET_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const D18 = data["FERVOR_HELMET_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const D19 = data["FERVOR_HELMET_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const D20 = data["FERVOR_HELMET_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const D21 = data["FERVOR_HELMET_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const D22 = data["FERVOR_HELMET_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Fervor Chestplate
    const E7 = data["FERVOR_CHESTPLATE_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const E8 = data["FERVOR_CHESTPLATE_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const E9 = data["FERVOR_CHESTPLATE_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const E10 = data["FERVOR_CHESTPLATE_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const E11 = data["FERVOR_CHESTPLATE_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const E12 = data["FERVOR_CHESTPLATE_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const E13 = data["FERVOR_CHESTPLATE_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const E14 = data["FERVOR_CHESTPLATE_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const E15 = data["FERVOR_CHESTPLATE_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const E16 = data["FERVOR_CHESTPLATE_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const E17 = data["FERVOR_CHESTPLATE_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const E18 = data["FERVOR_CHESTPLATE_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const E19 = data["FERVOR_CHESTPLATE_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const E20 = data["FERVOR_CHESTPLATE_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const E21 = data["FERVOR_CHESTPLATE_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const E22 = data["FERVOR_CHESTPLATE_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Fervor Leggings
    const F7 = data["FERVOR_LEGGINGS_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const F8 = data["FERVOR_LEGGINGS_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const F9 = data["FERVOR_LEGGINGS_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const F10 = data["FERVOR_LEGGINGS_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const F11 = data["FERVOR_LEGGINGS_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const F12 = data["FERVOR_LEGGINGS_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const F13 = data["FERVOR_LEGGINGS_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const F14 = data["FERVOR_LEGGINGS_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const F15 = data["FERVOR_LEGGINGS_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const F16 = data["FERVOR_LEGGINGS_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const F17 = data["FERVOR_LEGGINGS_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const F18 = data["FERVOR_LEGGINGS_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const F19 = data["FERVOR_LEGGINGS_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const F20 = data["FERVOR_LEGGINGS_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const F21 = data["FERVOR_LEGGINGS_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const F22 = data["FERVOR_LEGGINGS_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Fervor Boots
    const G7 = data["FERVOR_BOOTS_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const G8 = data["FERVOR_BOOTS_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const G9 = data["FERVOR_BOOTS_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const G10 = data["FERVOR_BOOTS_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const G11 = data["FERVOR_BOOTS_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const G12 = data["FERVOR_BOOTS_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const G13 = data["FERVOR_BOOTS_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const G14 = data["FERVOR_BOOTS_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const G15 = data["FERVOR_BOOTS_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const G16 = data["FERVOR_BOOTS_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const G17 = data["FERVOR_BOOTS_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const G18 = data["FERVOR_BOOTS_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const G19 = data["FERVOR_BOOTS_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const G20 = data["FERVOR_BOOTS_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const G21 = data["FERVOR_BOOTS_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const G22 = data["FERVOR_BOOTS_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Crimson Armor
    //Crimson Helmet
    const J7 = data["CRIMSON_HELMET_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const J8 = data["CRIMSON_HELMET_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const J9 = data["CRIMSON_HELMET_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const J10 = data["CRIMSON_HELMET_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const J11 = data["CRIMSON_HELMET_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const J12 = data["CRIMSON_HELMET_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const J13 = data["CRIMSON_HELMET_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const J14 = data["CRIMSON_HELMET_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const J15 = data["CRIMSON_HELMET_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const J16 = data["CRIMSON_HELMET_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const J17 = data["CRIMSON_HELMET_MANA_POOL_III_"]?.Price || 1; //Mana Pool
    const J18 = data["CRIMSON_HELMET_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const J19 = data["CRIMSON_HELMET_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const J20 = data["CRIMSON_HELMET_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const J21 = data["CRIMSON_HELMET_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const J22 = data["CRIMSON_HELMET_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Crimson Chestplate
    const K7 = data["CRIMSON_CHESTPLATE_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const K8 = data["CRIMSON_CHESTPLATE_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const K9 = data["CRIMSON_CHESTPLATE_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const K10 = data["CRIMSON_CHESTPLATE_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const K11 = data["CRIMSON_CHESTPLATE_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const K12 = data["CRIMSON_CHESTPLATE_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const K13 = data["CRIMSON_CHESTPLATE_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const K14 = data["CRIMSON_CHESTPLATE_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const K15 = data["CRIMSON_CHESTPLATE_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const K16 = data["CRIMSON_CHESTPLATE_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const K17 = data["CRIMSON_CHESTPLATE_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const K18 = data["CRIMSON_CHESTPLATE_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const K19 = data["CRIMSON_CHESTPLATE_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const K20 = data["CRIMSON_CHESTPLATE_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const K21 = data["CRIMSON_CHESTPLATE_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const K22 = data["CRIMSON_CHESTPLATE_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Crimson Leggings
    const L7 = data["CRIMSON_LEGGINGS_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const L8 = data["CRIMSON_LEGGINGS_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const L9 = data["CRIMSON_LEGGINGS_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const L10 = data["CRIMSON_LEGGINGS_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const L11 = data["CRIMSON_LEGGINGS_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const L12 = data["CRIMSON_LEGGINGS_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const L13 = data["CRIMSON_LEGGINGS_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const L14 = data["CRIMSON_LEGGINGS_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const L15 = data["CRIMSON_LEGGINGS_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const L16 = data["CRIMSON_LEGGINGS_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const L17 = data["CRIMSON_LEGGINGS_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const L18 = data["CRIMSON_LEGGINGS_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const L19 = data["CRIMSON_LEGGINGS_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const L20 = data["CRIMSON_LEGGINGS_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const L21 = data["CRIMSON_LEGGINGS_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const L22 = data["CRIMSON_LEGGINGS_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Crimson Boots
    const M7 = data["CRIMSON_BOOTS_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const M8 = data["CRIMSON_BOOTS_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const M9 = data["CRIMSON_BOOTS_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const M10 = data["CRIMSON_BOOTS_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const M11 = data["CRIMSON_BOOTS_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const M12 = data["CRIMSON_BOOTS_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const M13 = data["CRIMSON_BOOTS_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const M14 = data["CRIMSON_BOOTS_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const M15 = data["CRIMSON_BOOTS_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const M16 = data["CRIMSON_BOOTS_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const M17 = data["CRIMSON_BOOTS_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const M18 = data["CRIMSON_BOOTS_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const M19 = data["CRIMSON_BOOTS_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const M20 = data["CRIMSON_BOOTS_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const M21 = data["CRIMSON_BOOTS_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const M22 = data["CRIMSON_BOOTS_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Aurora Armor
    //Aurora Helmet
    const D26 = data["AURORA_HELMET_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const D27 = data["AURORA_HELMET_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const D28 = data["AURORA_HELMET_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const D29 = data["AURORA_HELMET_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const D30 = data["AURORA_HELMET_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const D31 = data["AURORA_HELMET_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const D32 = data["AURORA_HELMET_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const D33 = data["AURORA_HELMET_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const D34 = data["AURORA_HELMET_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const D35 = data["AURORA_HELMET_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const D36 = data["AURORA_HELMET_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const D37 = data["AURORA_HELMET_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const D38 = data["AURORA_HELMET_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const D39 = data["AURORA_HELMET_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const D40 = data["AURORA_HELMET_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const D41 = data["AURORA_HELMET_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Aurora Chestplate
    const E26 = data["AURORA_CHESTPLATE_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const E27 = data["AURORA_CHESTPLATE_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const E28 = data["AURORA_CHESTPLATE_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const E29 = data["AURORA_CHESTPLATE_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const E30 = data["AURORA_CHESTPLATE_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const E31 = data["AURORA_CHESTPLATE_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const E32 = data["AURORA_CHESTPLATE_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const E33 = data["AURORA_CHESTPLATE_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const E34 = data["AURORA_CHESTPLATE_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const E35 = data["AURORA_CHESTPLATE_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const E36 = data["AURORA_CHESTPLATE_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const E37 = data["AURORA_CHESTPLATE_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const E38 = data["AURORA_CHESTPLATE_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const E39 = data["AURORA_CHESTPLATE_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const E40 = data["AURORA_CHESTPLATE_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const E41 = data["AURORA_CHESTPLATE_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Aurora Leggings
    const F26 = data["AURORA_LEGGINGS_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const F27 = data["AURORA_LEGGINGS_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const F28 = data["AURORA_LEGGINGS_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const F29 = data["AURORA_LEGGINGS_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const F30 = data["AURORA_LEGGINGS_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const F31 = data["AURORA_LEGGINGS_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const F32 = data["AURORA_LEGGINGS_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const F33 = data["AURORA_LEGGINGS_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const F34 = data["AURORA_LEGGINGS_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const F35 = data["AURORA_LEGGINGS_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const F36 = data["AURORA_LEGGINGS_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const F37 = data["AURORA_LEGGINGS_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const F38 = data["AURORA_LEGGINGS_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const F39 = data["AURORA_LEGGINGS_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const F40 = data["AURORA_LEGGINGS_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const F41 = data["AURORA_LEGGINGS_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Aurora Boots
    const G26 = data["AURORA_BOOTS_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const G27 = data["AURORA_BOOTS_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const G28 = data["AURORA_BOOTS_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const G29 = data["AURORA_BOOTS_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const G30 = data["AURORA_BOOTS_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const G31 = data["AURORA_BOOTS_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const G32 = data["AURORA_BOOTS_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const G33 = data["AURORA_BOOTS_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const G34 = data["AURORA_BOOTS_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const G35 = data["AURORA_BOOTS_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const G36 = data["AURORA_BOOTS_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const G37 = data["AURORA_BOOTS_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const G38 = data["AURORA_BOOTS_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const G39 = data["AURORA_BOOTS_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const G40 = data["AURORA_BOOTS_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const G41 = data["AURORA_BOOTS_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Hollow Armor
    //Hollow Helmet
    const J26 = data["HOLLOW_HELMET_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const J27 = data["HOLLOW_HELMET_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const J28 = data["HOLLOW_HELMET_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const J29 = data["HOLLOW_HELMET_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const J30 = data["HOLLOW_HELMET_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const J31 = data["HOLLOW_HELMET_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const J32 = data["HOLLOW_HELMET_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const J33 = data["HOLLOW_HELMET_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const J34 = data["HOLLOW_HELMET_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const J35 = data["HOLLOW_HELMET_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const J36 = data["HOLLOW_HELMET_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const J37 = data["HOLLOW_HELMET_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const J38 = data["HOLLOW_HELMET_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const J39 = data["HOLLOW_HELMET_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const J40 = data["HOLLOW_HELMET_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const J41 = data["HOLLOW_HELMET_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Hollow Chestplate
    const K26 = data["HOLLOW_CHESTPLATE_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const K27 = data["HOLLOW_CHESTPLATE_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const K28 = data["HOLLOW_CHESTPLATE_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const K29 = data["HOLLOW_CHESTPLATE_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const K30 = data["HOLLOW_CHESTPLATE_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const K31 = data["HOLLOW_CHESTPLATE_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const K32 = data["HOLLOW_CHESTPLATE_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const K33 = data["HOLLOW_CHESTPLATE_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const K34 = data["HOLLOW_CHESTPLATE_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const K35 = data["HOLLOW_CHESTPLATE_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const K36 = data["HOLLOW_CHESTPLATE_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const K37 = data["HOLLOW_CHESTPLATE_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const K38 = data["HOLLOW_CHESTPLATE_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const K39 = data["HOLLOW_CHESTPLATE_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const K40 = data["HOLLOW_CHESTPLATE_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const K41 = data["HOLLOW_CHESTPLATE_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Hollow Leggings
    const L26 = data["HOLLOW_LEGGINGS_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const L27 = data["HOLLOW_LEGGINGS_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const L28 = data["HOLLOW_LEGGINGS_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const L29 = data["HOLLOW_LEGGINGS_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const L30 = data["HOLLOW_LEGGINGS_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const L31 = data["HOLLOW_LEGGINGS_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const L32 = data["HOLLOW_LEGGINGS_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const L33 = data["HOLLOW_LEGGINGS_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const L34 = data["HOLLOW_LEGGINGS_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const L35 = data["HOLLOW_LEGGINGS_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const L36 = data["HOLLOW_LEGGINGS_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const L37 = data["HOLLOW_LEGGINGS_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const L38 = data["HOLLOW_LEGGINGS_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const L39 = data["HOLLOW_LEGGINGS_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const L40 = data["HOLLOW_LEGGINGS_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const L41 = data["HOLLOW_LEGGINGS_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Hollow Boots
    const M26 = data["HOLLOW_BOOTS_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const M27 = data["HOLLOW_BOOTS_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const M28 = data["HOLLOW_BOOTS_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const M29 = data["HOLLOW_BOOTS_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const M30 = data["HOLLOW_BOOTS_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const M31 = data["HOLLOW_BOOTS_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const M32 = data["HOLLOW_BOOTS_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const M33 = data["HOLLOW_BOOTS_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const M34 = data["HOLLOW_BOOTS_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const M35 = data["HOLLOW_BOOTS_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const M36 = data["HOLLOW_BOOTS_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const M37 = data["HOLLOW_BOOTS_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const M38 = data["HOLLOW_BOOTS_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const M39 = data["HOLLOW_BOOTS_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const M40 = data["HOLLOW_BOOTS_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const M41 = data["HOLLOW_BOOTS_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Terror Armor
    //Terror Helmet
    const D45 = data["TERROR_HELMET_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const D46 = data["TERROR_HELMET_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const D47 = data["TERROR_HELMET_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const D48 = data["TERROR_HELMET_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const D49 = data["TERROR_HELMET_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const D50 = data["TERROR_HELMET_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const D51 = data["TERROR_HELMET_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const D52 = data["TERROR_HELMET_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const D53 = data["TERROR_HELMET_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const D54 = data["TERROR_HELMET_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const D55 = data["TERROR_HELMET_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const D56 = data["TERROR_HELMET_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const D57 = data["TERROR_HELMET_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const D58 = data["TERROR_HELMET_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const D59 = data["TERROR_HELMET_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const D60 = data["TERROR_HELMET_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Terror Chestplate
    const E45 = data["TERROR_CHESTPLATE_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const E46 = data["TERROR_CHESTPLATE_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const E47 = data["TERROR_CHESTPLATE_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const E48 = data["TERROR_CHESTPLATE_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const E49 = data["TERROR_CHESTPLATE_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const E50 = data["TERROR_CHESTPLATE_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const E51 = data["TERROR_CHESTPLATE_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const E52 = data["TERROR_CHESTPLATE_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const E53 = data["TERROR_CHESTPLATE_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const E54 = data["TERROR_CHESTPLATE_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const E55 = data["TERROR_CHESTPLATE_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const E56 = data["TERROR_CHESTPLATE_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const E57 = data["TERROR_CHESTPLATE_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const E58 = data["TERROR_CHESTPLATE_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const E59 = data["TERROR_CHESTPLATE_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const E60 = data["TERROR_CHESTPLATE_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Terror Leggings
    const F45 = data["TERROR_LEGGINGS_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const F46 = data["TERROR_LEGGINGS_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const F47 = data["TERROR_LEGGINGS_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const F48 = data["TERROR_LEGGINGS_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const F49 = data["TERROR_LEGGINGS_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const F50 = data["TERROR_LEGGINGS_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const F51 = data["TERROR_LEGGINGS_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const F52 = data["TERROR_LEGGINGS_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const F53 = data["TERROR_LEGGINGS_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const F54 = data["TERROR_LEGGINGS_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const F55 = data["TERROR_LEGGINGS_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const F56 = data["TERROR_LEGGINGS_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const F57 = data["TERROR_LEGGINGS_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const F58 = data["TERROR_LEGGINGS_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const F59 = data["TERROR_LEGGINGS_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const F60 = data["TERROR_LEGGINGS_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Terror Boots
    const G45 = data["TERROR_BOOTS_ARACHNO_RESISTANCE_III_"]?.Price ?? Infinity; //Arachno Resistence
    const G46 = data["TERROR_BOOTS_BLAZING_RESISTANCE_III_"]?.Price ?? Infinity; //Blazing Resistance
    const G47 = data["TERROR_BOOTS_BREEZE_III_"]?.Price ?? Infinity; //Breeze
    const G48 = data["TERROR_BOOTS_DOMINANCE_III_"]?.Price ?? Infinity; //Dominance
    const G49 = data["TERROR_BOOTS_ENDER_RESISTANCE_III_"]?.Price ?? Infinity; //Ender Resistance
    const G50 = data["TERROR_BOOTS_§bEXPERIENCE_III_"]?.Price ?? Infinity; //Experience
    const G51 = data["TERROR_BOOTS_FORTITUDE_III_"]?.Price ?? Infinity; //Fortitude
    const G52 = data["TERROR_BOOTS_LIFE_REGENERATION_III_"]?.Price ?? Infinity; //Life Regeneration
    const G53 = data["TERROR_BOOTS_LIFELINE_III_"]?.Price ?? Infinity; //Lifeline
    const G54 = data["TERROR_BOOTS_MAGIC_FIND_III_"]?.Price ?? Infinity; //Magic Find
    const G55 = data["TERROR_BOOTS_MANA_POOL_III_"]?.Price ?? Infinity; //Mana Pool
    const G56 = data["TERROR_BOOTS_MANA_REGENERATION_III_"]?.Price ?? Infinity; //Mana Regeneration
    const G57 = data["TERROR_BOOTS_VITALITY_III_"]?.Price ?? Infinity; //Vitality
    const G58 = data["TERROR_BOOTS_§bSPEED_III_"]?.Price ?? Infinity; //Speed
    const G59 = data["TERROR_BOOTS_UNDEAD_RESISTANCE_III_"]?.Price ?? Infinity; //Undead Resistance
    const G60 = data["TERROR_BOOTS_VETERAN_III_"]?.Price ?? Infinity; //Veteran
    //Molten Equipment
    //Molten Belt
    const J45 = data["MOLTEN_BELT_ARACHNO_RESISTANCE_III_"]?.Price || Z21; //Arachno Resistence
    const J46 = data["MOLTEN_BELT_BLAZING_RESISTANCE_III_"]?.Price || Z21; //Blazing Resistance
    const J47 = data["MOLTEN_BELT_BREEZE_III_"]?.Price || Z21; //Breeze
    const J48 = data["MOLTEN_BELT_DOMINANCE_III_"]?.Price || Z21; //Dominance
    const J49 = data["MOLTEN_BELT_ENDER_RESISTANCE_III_"]?.Price || Z21; //Ender Resistance
    const J50 = data["MOLTEN_BELT_§bEXPERIENCE_III_"]?.Price || Z21; //Experience
    const J51 = data["MOLTEN_BELT_FORTITUDE_III_"]?.Price || Z21; //Fortitude
    const J52 = data["MOLTEN_BELT_LIFE_REGENERATION_III_"]?.Price || Z21; //Life Regeneration
    const J53 = data["MOLTEN_BELT_LIFELINE_III_"]?.Price || Z21; //Lifeline
    const J54 = data["MOLTEN_BELT_MAGIC_FIND_III_"]?.Price || Z21; //Magic Find
    const J55 = data["MOLTEN_BELT_MANA_POOL_III_"]?.Price || Z21; //Mana Pool
    const J56 = data["MOLTEN_BELT_MANA_REGENERATION_III_"]?.Price || Z21; //Mana Regeneration
    const J57 = data["MOLTEN_BELT_VITALITY_III_"]?.Price || Z21; //Vitality
    const J58 = data["MOLTEN_BELT_§bSPEED_III_"]?.Price || Z21; //Speed
    const J59 = data["MOLTEN_BELT_UNDEAD_RESISTANCE_III_"]?.Price || Z21; //Undead Resistance
    const J60 = data["MOLTEN_BELT_VETERAN_III_"]?.Price || Z21; //Veteran
    //Molten Claok
    const K45 = data["MOLTEN_CLOAK_ARACHNO_RESISTANCE_III_"]?.Price || Z22; //Arachno Resistence
    const K46 = data["MOLTEN_CLOAK_BLAZING_RESISTANCE_III_"]?.Price || Z22; //Blazing Resistance
    const K47 = data["MOLTEN_CLOAK_BREEZE_III_"]?.Price || Z22; //Breeze
    const K48 = data["MOLTEN_CLOAK_DOMINANCE_III_"]?.Price || Z22; //Dominance
    const K49 = data["MOLTEN_CLOAK_ENDER_RESISTANCE_III_"]?.Price || Z22; //Ender Resistance
    const K50 = data["MOLTEN_CLOAK_§bEXPERIENCE_III_"]?.Price || Z22; //Experience
    const K51 = data["MOLTEN_CLOAK_FORTITUDE_III_"]?.Price || Z22; //Fortitude
    const K52 = data["MOLTEN_CLOAK_LIFE_REGENERATION_III_"]?.Price || Z22; //Life Regeneration
    const K53 = data["MOLTEN_CLOAK_LIFELINE_III_"]?.Price || Z22; //Lifeline
    const K54 = data["MOLTEN_CLOAK_MAGIC_FIND_III_"]?.Price || Z22; //Magic Find
    const K55 = data["MOLTEN_CLOAK_MANA_POOL_III_"]?.Price || Z22; //Mana Pool
    const K56 = data["MOLTEN_CLOAK_MANA_REGENERATION_III_"]?.Price || Z22; //Mana Regeneration
    const K57 = data["MOLTEN_CLOAK_VITALITY_III_"]?.Price || Z22; //Vitality
    const K58 = data["MOLTEN_CLOAK_§bSPEED_III_"]?.Price || Z22; //Speed
    const K59 = data["MOLTEN_CLOAK_UNDEAD_RESISTANCE_III_"]?.Price || Z22; //Undead Resistance
    const K60 = data["MOLTEN_CLOAK_VETERAN_III_"]?.Price || Z22; //Veteran
    //Molten Bracelet
    const L45 = data["MOLTEN_BRACELET_ARACHNO_RESISTANCE_III_"]?.Price || Z23; //Arachno Resistence
    const L46 = data["MOLTEN_BRACELET_BLAZING_RESISTANCE_III_"]?.Price || Z23; //Blazing Resistance
    const L47 = data["MOLTEN_BRACELET_BREEZE_III_"]?.Price || Z23; //Breeze
    const L48 = data["MOLTEN_BRACELET_DOMINANCE_III_"]?.Price || Z23; //Dominance
    const L49 = data["MOLTEN_BRACELET_ENDER_RESISTANCE_III_"]?.Price || Z23; //Ender Resistance
    const L50 = data["MOLTEN_BRACELET_§bEXPERIENCE_III_"]?.Price || Z23; //Experience
    const L51 = data["MOLTEN_BRACELET_FORTITUDE_III_"]?.Price || Z23; //Fortitude
    const L52 = data["MOLTEN_BRACELET_LIFE_REGENERATION_III_"]?.Price || Z23; //Life Regeneration
    const L53 = data["MOLTEN_BRACELET_LIFELINE_III_"]?.Price || Z23; //Lifeline
    const L54 = data["MOLTEN_BRACELET_MAGIC_FIND_III_"]?.Price || Z23; //Magic Find
    const L55 = data["MOLTEN_BRACELET_MANA_POOL_III_"]?.Price || Z23; //Mana Pool
    const L56 = data["MOLTEN_BRACELET_MANA_REGENERATION_III_"]?.Price || Z23; //Mana Regeneration
    const L57 = data["MOLTEN_BRACELET_VITALITY_III_"]?.Price || Z23; //Vitality
    const L58 = data["MOLTEN_BRACELET_§bSPEED_III_"]?.Price || Z23; //Speed
    const L59 = data["MOLTEN_BRACELET_UNDEAD_RESISTANCE_III_"]?.Price || Z23; //Undead Resistance
    const L60 = data["MOLTEN_BRACELET_VETERAN_III_"]?.Price || Z23; //Veteran
    //Molten Necklace
    const M45 = data["MOLTEN_NECKLACE_ARACHNO_RESISTANCE_III_"]?.Price || Z24; //Arachno Resistence
    const M46 = data["MOLTEN_NECKLACE_BLAZING_RESISTANCE_III_"]?.Price || Z24; //Blazing Resistance
    const M47 = data["MOLTEN_NECKLACE_BREEZE_III_"]?.Price || Z24; //Breeze
    const M48 = data["MOLTEN_NECKLACE_DOMINANCE_III_"]?.Price || Z24; //Dominance
    const M49 = data["MOLTEN_NECKLACE_ENDER_RESISTANCE_III_"]?.Price || Z24; //Ender Resistance
    const M50 = data["MOLTEN_NECKLACE_§bEXPERIENCE_III_"]?.Price || Z24; //Experience
    const M51 = data["MOLTEN_NECKLACE_FORTITUDE_III_"]?.Price || Z24; //Fortitude
    const M52 = data["MOLTEN_NECKLACE_LIFE_REGENERATION_III_"]?.Price || Z24; //Life Regeneration
    const M53 = data["MOLTEN_NECKLACE_LIFELINE_III_"]?.Price || Z24; //Lifeline
    const M54 = data["MOLTEN_NECKLACE_MAGIC_FIND_III_"]?.Price || Z24; //Magic Find
    const M55 = data["MOLTEN_NECKLACE_MANA_POOL_III_"]?.Price || Z24; //Mana Pool
    const M56 = data["MOLTEN_NECKLACE_MANA_REGENERATION_III_"]?.Price || Z24; //Mana Regeneration
    const M57 = data["MOLTEN_NECKLACE_VITALITY_III_"]?.Price || Z24; //Vitality
    const M58 = data["MOLTEN_NECKLACE_§bSPEED_III_"]?.Price || Z24; //Speed
    const M59 = data["MOLTEN_NECKLACE_UNDEAD_RESISTANCE_III_"]?.Price || Z24; //Undead Resistance
    const M60 = data["MOLTEN_NECKLACE_VETERAN_III_"]?.Price || Z24; //Veteran
    //God Roles
    //aurora Helmet
    const D64 = data["AURORA_HELMET_MP_MR"]?.Price || Z5; //MP MR
    const D65 = data["AURORA_HELMET_MP_VET"]?.Price || Z5; //MP VET
    const D66 = data["AURORA_HELMET_MP_BR"]?.Price || Z5; //MP BR
    //aurora Chestplate
    const E64 = data["AURORA_CHESTPLATE_MP_MR"]?.Price || Z6; //MP MR
    const E65 = data["AURORA_CHESTPLATE_MP_VET"]?.Price || Z6; //MP VET
    const E66 = data["AURORA_CHESTPLATE_MP_BR"]?.Price || Z6; //MP BR
    //aurora Leggings
    const F64 = data["AURORA_LEGGINGS_MP_MR"]?.Price || Z7; //MP MR
    const F65 = data["AURORA_LEGGINGS_MP_VET"]?.Price || Z7; //MP VET
    const F66 = data["AURORA_LEGGINGS_MP_BR"]?.Price || Z7; //MP BR
    //aurora Boots
    const G64 = data["AURORA_BOOTS_MP_MR"]?.Price || Z8; //MP MR
    const G65 = data["AURORA_BOOTS_MP_VET"]?.Price || Z8; //MP VET
    const G66 = data["AURORA_BOOTS_MP_BR"]?.Price || Z8; //MP BR
    // Crimson Helmet
    const D69 = data["CRIMSON_HELMET_MF_VET"]?.Price || Z1; //MF VET
    const D70 = data["CRIMSON_HELMET_VIT_VET"]?.Price || Z1; //VIT VET
    const D71 = data["CRIMSON_HELMET_MF_VIT"]?.Price || Z1; //MF VIT
    const D72 = data["CRIMSON_HELMET_MP_VET"]?.Price || Z1; //MP VET
    // Crimson Chestplate
    const E69 = data["CRIMSON_CHESTPLATE_MF_VET"]?.Price || Z2; //MF VET
    const E70 = data["CRIMSON_CHESTPLATE_VIT_VET"]?.Price || Z2; //VIT VET
    const E71 = data["CRIMSON_CHESTPLATE_MF_VIT"]?.Price || Z2; //MF VIT
    const E72 = data["CRIMSON_CHESTPLATE_MP_VET"]?.Price || Z2; //MP VET
    // Crimson Leggings
    const F69 = data["CRIMSON_LEGGINGS_MF_VET"]?.Price || Z3; //MF VET
    const F70 = data["CRIMSON_LEGGINGS_VIT_VET"]?.Price || Z3; //VIT VET
    const F71 = data["CRIMSON_LEGGINGS_MF_VIT"]?.Price || Z3; //MF VIT
    const F72 = data["CRIMSON_LEGGINGS_MP_VET"]?.Price || Z3; //MP VET
    // Crimson Boots
    const G69 = data["CRIMSON_BOOTS_MF_VET"]?.Price || Z4; //MF VET
    const G70 = data["CRIMSON_BOOTS_VIT_VET"]?.Price || Z4; //VIT VET
    const G71 = data["CRIMSON_BOOTS_MF_VIT"]?.Price || Z4; //MF VIT
    const G72 = data["CRIMSON_BOOTS_MP_VET"]?.Price || Z4; //MP VET
    
    // Terror Helmet
    const D75 = data["TERROR_HELMET_LL_MP"]?.Price || Z9; //LL MP
    const D76 = data["TERROR_HELMET_DOM_VIT"]?.Price || Z9; //DOM VIT
    const D77 = data["TERROR_HELMET_DOM_MP"]?.Price || Z9; //DOM MP
    // Terror Chestplate
    const E75 = data["TERROR_CHESTPLATE_LL_MP"]?.Price || Z10; //LL MP
    const E76 = data["TERROR_CHESTPLATE_DOM_VIT"]?.Price || Z10; //DOM VIT
    const E77 = data["TERROR_CHESTPLATE_DOM_MP"]?.Price || Z10; //DOM MP
    // Terror Leggings
    const F75 = data["TERROR_LEGGINGS_LL_MP"]?.Price || Z11; //LL MP
    const F76 = data["TERROR_LEGGINGS_DOM_VIT"]?.Price || Z11; //DOM VIT
    const F77 = data["TERROR_LEGGINGS_DOM_MP"]?.Price || Z11; //DOM MP
    // Terror Boots
    const G75 = data["TERROR_BOOTS_LL_MP"]?.Price || Z12; //LL MP
    const G76 = data["TERROR_BOOTS_DOM_VIT"]?.Price || Z12; //DOM VIT
    const G77 = data["TERROR_BOOTS_DOM_MP"]?.Price || Z12; //DOM MP
    //Molten Belt
    const D80 = data["MOLTEN_BELT_LL_MP"]?.Price || Z21; //LL MP
    const D81 = data["MOLTEN_BELT_MF_VET"]?.Price || Z21; //MF VET
    const D82 = data["MOLTEN_BELT_MP_MR"]?.Price || Z21; //MP MR
    const D83 = data["MOLTEN_BELT_MF_VIT"]?.Price || Z21; //MF VIT
    const D84 = data["MOLTEN_BELT_MP_VET"]?.Price || Z21; //MP VET
    const D85 = data["MOLTEN_BELT_DOM_MP"]?.Price || Z21; //DOM MP
    const D86 = data["MOLTEN_BELT_MP_VIT"]?.Price || Z21; //MP ViT
    const D87 = data["MOLTEN_BELT_BR_VET"]?.Price || Z21; //BR VET
    const D88 = data["MOLTEN_BELT_MR_VET"]?.Price || Z21; //MR VET
    //Molten Claok
    const E80 = data["MOLTEN_CLOAK_LL_MP"]?.Price || Z22; //LL MP
    const E81 = data["MOLTEN_CLOAK_MF_VET"]?.Price || Z22; //MF VET
    const E82 = data["MOLTEN_CLOAK_MP_MR"]?.Price || Z22; //MP MR
    const E83 = data["MOLTEN_CLOAK_MF_VIT"]?.Price || Z22; //MF VIT
    const E84 = data["MOLTEN_CLOAK_MP_VET"]?.Price || Z22; //MP VET
    const E85 = data["MOLTEN_CLOAK_DOM_MP"]?.Price || Z22; //DOM MP
    const E86 = data["MOLTEN_CLOAK_MP_VIT"]?.Price || Z22; //MP ViT
    const E87 = data["MOLTEN_CLOAK_BR_VET"]?.Price || Z22; //BR VET
    const E88 = data["MOLTEN_CLOAK_MR_VET"]?.Price || Z22; //MR VET
    //Molten Bracelet
    const F80 = data["MOLTEN_BRACELET_LL_MP"]?.Price || Z23; //LL MP
    const F81 = data["MOLTEN_BRACELET_MF_VET"]?.Price || Z23; //MF VET
    const F82 = data["MOLTEN_BRACELET_MP_MR"]?.Price || Z23; //MP MR
    const F83 = data["MOLTEN_BRACELET_MF_VIT"]?.Price || Z23; //MF VIT
    const F84 = data["MOLTEN_BRACELET_MP_VET"]?.Price || Z23; //MP VET
    const F85 = data["MOLTEN_BRACELET_DOM_MP"]?.Price || Z23; //DOM MP
    const F86 = data["MOLTEN_BRACELET_MP_VIT"]?.Price || Z23; //MP ViT
    const F87 = data["MOLTEN_BRACELET_BR_VET"]?.Price || Z23; //BR VET
    const F88 = data["MOLTEN_BRACELET_MR_VET"]?.Price || Z23; //MR VET
    //Molten Necklace
    const G80 = data["MOLTEN_NECKLACE_LL_MP"]?.Price || Z24; //LL MP
    const G81 = data["MOLTEN_NECKLACE_MF_VET"]?.Price || Z24; //MF VET
    const G82 = data["MOLTEN_NECKLACE_MP_MR"]?.Price || Z24; //MP MR
    const G83 = data["MOLTEN_NECKLACE_MF_VIT"]?.Price || Z24; //MF VIT
    const G84 = data["MOLTEN_NECKLACE_MP_VET"]?.Price || Z24; //MP VET
    const G85 = data["MOLTEN_NECKLACE_DOM_MP"]?.Price || Z24; //DOM MP
    const G86 = data["MOLTEN_NECKLACE_MP_VIT"]?.Price || Z24; //MP ViT
    const G87 = data["MOLTEN_NECKLACE_BR_VET"]?.Price || Z24; //BR VET
    const G88 = data["MOLTEN_NECKLACE_MR_VET"]?.Price || Z24; //MR VET

    // Generic Arachno Resistance
    let GenericHelmetArachnoResistance   = safeMin(D7,  J7,  D26, J26, D45);
    let GenericChestplateArachnoResistance = safeMin(E7,  K7,  E26, K26, E45);
    let GenericLeggingsArachnoResistance = safeMin(F7,  L7,  F26, L26, F45);
    let GenericBootsArachnoResistance    = safeMin(G7,  M7,  G26, M26, G45);
        
    // Generic Blazing Resistance
    let GenericHelmetBlazingResistance   = safeMin(D8,  J8,  D27, J27, D46);
    let GenericChestplateBlazingResistance = safeMin(E8,  K8,  E27, K27, E46);
    let GenericLeggingsBlazingResistance = safeMin(F8,  L8,  F27, L27, F46);
    let GenericBootsBlazingResistance    = safeMin(G8,  M8,  G27, M27, G46);
        
    // Generic Breeze
    let GenericHelmetBreeze   = safeMin(D9,  J9,  D28, J28, D47);
    let GenericChestplateBreeze = safeMin(E9,  K9,  E28, K28, E47);
    let GenericLeggingsBreeze = safeMin(F9,  L9,  F28, L28, F47);
    let GenericBootsBreeze    = safeMin(G9,  M9,  G28, M28, G47);
        
    // Generic Dominance
    let GenericHelmetDominance   = safeMin(D10, J10, D29, J29, D48);
    let GenericChestplateDominance = safeMin(E10, K10, E29, K29, E48);
    let GenericLeggingsDominance = safeMin(F10, L10, F29, L29, F48);
    let GenericBootsDominance    = safeMin(G10, M10, G29, M29, G48);
        
    // Generic Ender Resistance
    let GenericHelmetEnderResistance   = safeMin(D11, J11, D30, J30, D49);
    let GenericChestplateEnderResistance = safeMin(E11, K11, E30, K30, E49);
    let GenericLeggingsEnderResistance = safeMin(F11, L11, F30, L30, F49);
    let GenericBootsEnderResistance    = safeMin(G11, M11, G30, M30, G49);
        
    // Generic Experience
    let GenericHelmetExperience   = safeMin(D12, J12, D31, J31, D50);
    let GenericChestplateExperience = safeMin(E12, K12, E31, K31, E50);
    let GenericLeggingsExperience = safeMin(F12, L12, F31, L31, F50);
    let GenericBootsExperience    = safeMin(G12, M12, G31, M31, G50);
        
    // Generic Fortitude
    let GenericHelmetFortitude   = safeMin(D13, J13, D32, J32, D51);
    let GenericChestplateFortitude = safeMin(E13, K13, E32, K32, E51);
    let GenericLeggingsFortitude = safeMin(F13, L13, F32, L32, F51);
    let GenericBootsFortitude    = safeMin(G13, M13, G32, M32, G51);
        
    // Generic Life Regeneration
    let GenericHelmetLifeRegeneration   = safeMin(D14, J14, D33, J33, D52);
    let GenericChestplateLifeRegeneration = safeMin(E14, K14, E33, K33, E52);
    let GenericLeggingsLifeRegeneration = safeMin(F14, L14, F33, L33, F52);
    let GenericBootsLifeRegeneration    = safeMin(G14, M14, G33, M33, G52);
        
    // Generic Lifeline
    let GenericHelmetLifeline   = safeMin(D15, J15, D34, J34, D53);
    let GenericChestplateLifeline = safeMin(E15, K15, E34, K34, E53);
    let GenericLeggingsLifeline = safeMin(F15, L15, F34, L34, F53);
    let GenericBootsLifeline    = safeMin(G15, M15, G34, M34, G53);
        
    // Generic Magic Find
    let GenericHelmetMagicFind   = safeMin(D16, J16, D35, J35, D54);
    let GenericChestplateMagicFind = safeMin(E16, K16, E35, K35, E54);
    let GenericLeggingsMagicFind = safeMin(F16, L16, F35, L35, F54);
    let GenericBootsMagicFind    = safeMin(G16, M16, G35, M35, G54);
        
    // Generic Mana Pool
    let GenericHelmetManaPool   = safeMin(D17, J17, D36, J36, D55);
    let GenericChestplateManaPool = safeMin(E17, K17, E36, K36, E55);
    let GenericLeggingsManaPool = safeMin(F17, L17, F36, L36, F55);
    let GenericBootsManaPool    = safeMin(G17, M17, G36, M36, G55);
        
    // Generic Mana Regeneration
    let GenericHelmetManaRegeneration   = safeMin(D18, J18, D37, J37, D56);
    let GenericChestplateManaRegeneration = safeMin(E18, K18, E37, K37, E56);
    let GenericLeggingsManaRegeneration = safeMin(F18, L18, F37, L37, F56);
    let GenericBootsManaRegeneration    = safeMin(G18, M18, G37, M37, G56);
        
    // Generic Vitality
    let GenericHelmetVitality   = safeMin(D19, J19, D38, J38, D57);
    let GenericChestplateVitality = safeMin(E19, K19, E38, K38, E57);
    let GenericLeggingsVitality = safeMin(F19, L19, F38, L38, F57);
    let GenericBootsVitality    = safeMin(G19, M19, G38, M38, G57);
        
    // Generic Speed
    let GenericHelmetSpeed   = safeMin(D20, J20, D39, J39, D58);
    let GenericChestplateSpeed = safeMin(E20, K20, E39, K39, E58);
    let GenericLeggingsSpeed = safeMin(F20, L20, F39, L39, F58);
    let GenericBootsSpeed    = safeMin(G20, M20, G39, M39, G58);
        
    // Generic Undead Resistance
    let GenericHelmetUndeadResistance   = safeMin(D21, J21, D40, J40, D59);
    let GenericChestplateUndeadResistance = safeMin(E21, K21, E40, K40, E59);
    let GenericLeggingsUndeadResistance = safeMin(F21, L21, F40, L40, F59);
    let GenericBootsUndeadResistance    = safeMin(G21, M21, G40, M40, G59);
        
    // Generic Veteran
    let GenericHelmetVeteran   = safeMin(D22, J22, D41, J41, D60);
    let GenericChestplateVeteran = safeMin(E22, K22, E41, K41, E60);
    let GenericLeggingsVeteran = safeMin(F22, L22, F41, L41, F60);
    let GenericBootsVeteran    = safeMin(G22, M22, G41, M41, G60);
    
    let moneyKuudraT3 = (((((((((3600/A4)/100)*4.115)/100)*(12.5)/2)*(GenericHelmetArachnoResistance + GenericHelmetBlazingResistance + GenericHelmetBreeze + GenericHelmetDominance + GenericHelmetEnderResistance + GenericHelmetExperience + GenericHelmetFortitude + GenericHelmetLifeRegeneration + GenericHelmetLifeline + GenericHelmetMagicFind + GenericHelmetManaPool + GenericHelmetManaRegeneration + GenericHelmetVitality + GenericHelmetSpeed + GenericHelmetUndeadResistance + GenericHelmetVeteran + GenericChestplateArachnoResistance + GenericChestplateBlazingResistance + GenericChestplateBreeze + GenericChestplateDominance + GenericChestplateEnderResistance + GenericChestplateExperience + GenericChestplateFortitude + GenericChestplateLifeRegeneration + GenericChestplateLifeline + GenericChestplateMagicFind + GenericChestplateManaPool + GenericChestplateManaRegeneration + GenericChestplateVitality + GenericChestplateSpeed + GenericChestplateUndeadResistance + GenericChestplateVeteran + GenericLeggingsArachnoResistance + GenericLeggingsBlazingResistance + GenericLeggingsBreeze + GenericLeggingsDominance + GenericLeggingsEnderResistance + GenericLeggingsExperience + GenericLeggingsFortitude + GenericLeggingsLifeRegeneration + GenericLeggingsLifeline + GenericLeggingsMagicFind + GenericLeggingsManaPool + GenericLeggingsManaRegeneration + GenericLeggingsVitality + GenericLeggingsSpeed + GenericLeggingsUndeadResistance + GenericLeggingsVeteran + GenericBootsArachnoResistance + GenericBootsBlazingResistance + GenericBootsBreeze + GenericBootsDominance + GenericBootsEnderResistance + GenericBootsExperience + GenericBootsFortitude + GenericBootsLifeRegeneration + GenericBootsLifeline + GenericBootsMagicFind + GenericBootsManaPool + GenericBootsManaRegeneration + GenericBootsVitality + GenericBootsSpeed + GenericBootsUndeadResistance + GenericBootsVeteran)) +
                        ((((3600/A4)/100)*2.058)/100*(12.5)/2)*(J45+J46+J47+J48+J49+J50+J51+J52+J53+J54+J55+J56+J57+J58+J59+J60+K45+K46+K47+K48+K49+K50+K51+K52+K53+K54+K55+K56+K57+K58+K59+K60+L45+L46+L47+L48+L49+L50+L51+L52+L53+L54+L55+L56+L57+L58+L59+L60+M45+M46+M47+M48+M49+M50+M51+M52+M53+M54+M55+M56+M57+M58+M59+M60) +
                        ((((3600/A4)/100)*1.029)*A7) +
                        ((((3600/A4)/100)*1.44)*A10) +
                        ((((3600/A4)/100)*0.412)*A13) +
                        ((((3600/A4)/100)*3.292)*A16) +
                        ((((3600/A4)/100)*3.292)*A19) +
                        ((((3600/A4)/100)*0.106)*A22) +
                        ((((3600/A4)/100)*0.106)*A25) +
                        ((((3600/A4)/100)*1.33)*A28) +
                        ((((3600/A4)/100)*15.966)*A31) +
                        ((((3600/A4)/100)*15.966)*A34) +
                        ((((3600/A4)/100)*15.966)*A37) +
                        ((((3600/A4)/100)*15.966)*A40) +
                        ((((3600/A4)/100)*1.33)*A43) +
                        ((((3600/A4)/100)*1.33)*A46) +
                        ((((3600/A4)/100)*1.33)*A49) +
                        ((((3600/A4)/100)*1.33)*A52) +
                        ((((3600/A4)/100)*1.33)*A55) +
                        ((((3600/A4)/100)*1.33)*A58) +
                        ((((3600/A4)/100)*1.33)*A61) +
                        ((((3600/A4)/100)*1.33)*A64) +
                        ((((3600/A4)/100)*1.33)*A67) +
                        ((((3600/A4)/100)*1.33)*A70) +
                        ((((3600/A4)/100)*0.665)*A73) +
                        ((((3600/A4)/100)*0.665)*A76) +
                        ((((3600/A4)/100)*0.665)*A79) +
                        ((((3600/A4)/100)*0.665)*A82) +
                        ((((3600/A4)/100)*0.665)*A85) +
                        ((((3600/A4)/100)*0.665)*A88) +
                        ((((3600/A4)/100)*0.665)*A91) +
                        ((((3600/A4)/100)*0.665)*A94) +
                        ((((3600/A4)/100)*1.33)*A97) +
                        ((((3600/A4)/100)*1.33)*A100) +
                        ((((3600/A4)/100)*1.33)*A103) +
                        ((((3600/A4)/100)*1.33)*A106) +
                        ((((3600/A4)/100)*1.33)*A109) +
                        ((((3600/A4)/100)*1.33)*A112) +
                        ((((3600/A4)/100)*1.33)*A115) +
                        ((((3600/A4)/100)*1.33)*A118) +
                        ((((3600/A4)/100)*1.33)*A121) +
                        ((((3600/A4)/100)*1.33)*A124) +
                        ((((3600/A4)/100)*1.33)*A127) +
                        ((((3600/A4)/100)*1.33)*A130) + 
                        (((3600/A4)*400)*A151) +
                        (((3600/A4)*2)*Z200) +
                        (((((3600/A4)/100)*4.115)/100)*((1/120)*100)*(D64+E64+F64+G64 + D65+E65+F65+G65 + D66+E66+F66+G66 + D69+E69+F69+G69 + D70+E70+F70+G70 + D71+E71+F71+G71 + D72+E72+F72+G72 + D76+E76+F76+G76 + D77+E77+F77+G77)) +
                        (((((3600/A4)/100)*2.058)/100)*((1/120)*100)*(D80+E80+F80+G80 + D81+E81+F81+G81 + D82+E82+F82+G82 + D83+E83+F83+G83 + D84+E84+F84+G84 + D85+E85+F85+G85 + D86+E86+F86+G86 + D87+E87+F87+G87 + D88+E88+F88+G88))) -
                        ((3600/A4)*(600000+(16*A154)+(2*Z100))))/1000000).toFixed(2);

return `${moneyKuudraT3}M`;
}
function updateKuudraT3(data) {
    const MoneyKuudraT3 = calculateKuudraT3(data); 
    document.getElementById('KuudraT3').innerHTML = MoneyKuudraT3;
    localStorage.setItem('cached-KuudraT3', MoneyKuudraT3);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateKuudraT2(data) {
    const Z300 = 0; // Time to do 1 run in Seconds
    const Z400 = 2; // Time to do 1 run in Minutes
    const A4 = Number((Z300 + (Z400 * 60))); // Time to do 1 run in seconds with minute conversion
    
    //Loot table
    const A16 = data["RUNIC_STAFF"]?.Price || 1;
    const A19 = data["HOLLOW_WAND"]?.Price || 1;
    const A22 = data["ENCHANTMENT_FATAL_TEMPO_1"]?.Price || 1;
    const A25 = data["ENCHANTMENT_INFERNO_1"]?.Price || 1;
    const A28 = data["WHEEL_OF_FATE"]?.Price || 1;
    const A31 = data["ENCHANTMENT_STRONG_MANA_2"]?.Price || 1;
    const A34 = data["ENCHANTMENT_FEROCIOUS_MANA_2"]?.Price || 1;
    const A37 = data["ENCHANTMENT_HARDENED_MANA_2"]?.Price || 1;
    const A40 = data["ENCHANTMENT_MANA_VAMPIRE_2"]?.Price || 1;
    const A43 = data["ATTRIBUTE_SHARD_MIDAS_TOUCH_I_"]?.Price || 1;
    const A46 = data["ATTRIBUTE_SHARD_COMBO_I_"]?.Price || 1;
    const A49 = data["ATTRIBUTE_SHARD_UNDEAD_I_"]?.Price || 1;
    const A52 = data["ATTRIBUTE_SHARD_ARACHNO_I_"]?.Price || 1;
    const A55 = data["ATTRIBUTE_SHARD_§bSPEED_I_"]?.Price || 1;
    const A58 = data["ATTRIBUTE_SHARD_MANA_POOL_I_"]?.Price || 1;
    const A61 = data["ATTRIBUTE_SHARD_§bEXPERIENCE_I_"]?.Price || 1;
    const A64 = data["ATTRIBUTE_SHARD_LIFE_REGENERATION_I_"]?.Price || 1;
    const A67 = data["ATTRIBUTE_SHARD_UNDEAD_RESISTANCE_I_"]?.Price || 1;
    const A70 = data["ATTRIBUTE_SHARD_ARACHNO_RESISTANCE_I_"]?.Price || 1;
    const A73 = data["ATTRIBUTE_SHARD_§bHUNTER_I_"]?.Price || 1;
    const A76 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1;
    const A79 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1;
    const A82 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1;
    const A85 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1;
    const A88 = data["ATTRIBUTE_SHARD_DOUBLE_HOOK_I_"]?.Price || 1;
    const A91 = data["ATTRIBUTE_SHARD_TROPHY_HUNTER_I_"]?.Price || 1;
    const A94 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1;
    const A97 = data["ATTRIBUTE_SHARD_ATTACK_SPEED_I_"]?.Price || 1;
    const A100 = data["ATTRIBUTE_SHARD_ELITE_I_"]?.Price || 1;
    const A103 = data["ATTRIBUTE_SHARD_LIFE_RECOVERY_I_"]?.Price || 1;
    const A106 = data["ATTRIBUTE_SHARD_LIFELINE_I_"]?.Price || 1;
    const A109 = data["ATTRIBUTE_SHARD_BREEZE_I_"]?.Price || 1;
    const A112 = data["ATTRIBUTE_SHARD_IGNITION_I_"]?.Price || 1;
    const A151 = data["ESSENCE_CRIMSON"]?.Price || 1;
    const A154 = data["ENCHANTED_MYCELIUM"]?.Price || 1;
    const Z100 = data["CORRUPTED_NETHER_STAR"]?.Price || 1; //Nether Stars (Added)
    const Z200 = data["KUUDRA_TEETH"]?.Price || 1; //Kuudra Teeth (Added)
    const J7 = data["CRIMSON_HELMET"]?.Price || 1;
    const K7 = data["CRIMSON_CHESTPLATE"]?.Price || 1;
    const L7 = data["CRIMSON_LEGGINGS"]?.Price || 1;
    const M7 = data["CRIMSON_BOOTS"]?.Price || 1;
    const D26 = data["AURORA_HELMET"]?.Price || 1;
    const E26 = data["AURORA_CHESTPLATE"]?.Price || 1;
    const F26 = data["AURORA_LEGGINGS"]?.Price || 1;
    const G26 = data["AURORA_BOOTS"]?.Price || 1;
    const D45 = data["TERROR_HELMET"]?.Price || 1;
    const E45 = data["TERROR_CHESTPLATE"]?.Price || 1;
    const F45 = data["TERROR_LEGGINGS"]?.Price || 1;
    const G45 = data["TERROR_BOOTS"]?.Price || 1;
    const J26 = data["HOLLOW_HELMET"]?.Price || 1;
    const K26 = data["HOLLOW_CHESTPLATE"]?.Price || 1;
    const L26 = data["HOLLOW_LEGGINGS"]?.Price || 1;
    const M26 = data["HOLLOW_BOOTS"]?.Price || 1;
    const D7 = data["FERVOR_HELMET"]?.Price || 1;
    const E7 = data["FERVOR_CHESTPLATE"]?.Price || 1;
    const F7 = data["FERVOR_LEGGINGS"]?.Price || 1;
    const G7 = data["FERVOR_BOOTS"]?.Price || 1;
    const J45 = data["MOLTEN_BELT"]?.Price || 1;
    const K45 = data["MOLTEN_CLOAK"]?.Price || 1;
    const L45 = data["MOLTEN_BLACELET"]?.Price || 1;
    const M45 = data["MOLTEN_NECKLACE"]?.Price || 1;

    const Z1 = data["CRIMSON_HELMET"]?.Price || 1;
    const Z2 = data["CRIMSON_CHESTPLATE"]?.Price || 1;
    const Z3 = data["CRIMSON_LEGGINGS"]?.Price || 1;
    const Z4 = data["CRIMSON_BOOTS"]?.Price || 1;
    const Z5 = data["AURORA_HELMET"]?.Price || 1;
    const Z6 = data["AURORA_CHESTPLATE"]?.Price || 1;
    const Z7 = data["AURORA_LEGGINGS"]?.Price || 1;
    const Z8 = data["AURORA_BOOTS"]?.Price || 1;
    const Z9 = data["TERROR_HELMET"]?.Price || 1;
    const Z10 = data["TERROR_CHESTPLATE"]?.Price || 1;
    const Z11 = data["TERROR_LEGGINGS"]?.Price || 1;
    const Z12 = data["TERROR_BOOTS"]?.Price || 1;
    const Z13 = data["HOLLOW_HELMET"]?.Price || 1;
    const Z14 = data["HOLLOW_CHESTPLATE"]?.Price || 1;
    const Z15 = data["HOLLOW_LEGGINGS"]?.Price || 1;
    const Z16 = data["HOLLOW_BOOTS"]?.Price || 1;
    const Z17 = data["FERVOR_HELMET"]?.Price || 1;
    const Z18 = data["FERVOR_CHESTPLATE"]?.Price || 1;
    const Z19 = data["FERVOR_LEGGINGS"]?.Price || 1;
    const Z20 = data["FERVOR_BOOTS"]?.Price || 1;
    const Z21 = data["MOLTEN_BELT"]?.Price || 1;
    const Z22 = data["MOLTEN_CLOAK"]?.Price || 1;
    const Z23 = data["MOLTEN_BLACELET"]?.Price || 1;
    const Z24 = data["MOLTEN_NECKLACE"]?.Price || 1;

    //God Roles
    //aurora Helmet
    const D64 = data["AURORA_HELMET_MP_MR"]?.Price || Z5; //MP MR
    const D65 = data["AURORA_HELMET_MP_VET"]?.Price || Z5; //MP VET
    const D66 = data["AURORA_HELMET_MP_BR"]?.Price || Z5; //MP BR
    //aurora Chestplate
    const E64 = data["AURORA_CHESTPLATE_MP_MR"]?.Price || Z6; //MP MR
    const E65 = data["AURORA_CHESTPLATE_MP_VET"]?.Price || Z6; //MP VET
    const E66 = data["AURORA_CHESTPLATE_MP_BR"]?.Price || Z6; //MP BR
    //aurora Leggings
    const F64 = data["AURORA_LEGGINGS_MP_MR"]?.Price || Z7; //MP MR
    const F65 = data["AURORA_LEGGINGS_MP_VET"]?.Price || Z7; //MP VET
    const F66 = data["AURORA_LEGGINGS_MP_BR"]?.Price || Z7; //MP BR
    //aurora Boots
    const G64 = data["AURORA_BOOTS_MP_MR"]?.Price || Z8; //MP MR
    const G65 = data["AURORA_BOOTS_MP_VET"]?.Price || Z8; //MP VET
    const G66 = data["AURORA_BOOTS_MP_BR"]?.Price || Z8; //MP BR
    // Crimson Helmet
    const D69 = data["CRIMSON_HELMET_MF_VET"]?.Price || Z1; //MF VET
    const D70 = data["CRIMSON_HELMET_VIT_VET"]?.Price || Z1; //VIT VET
    const D71 = data["CRIMSON_HELMET_MF_VIT"]?.Price || Z1; //MF VIT
    const D72 = data["CRIMSON_HELMET_MP_VET"]?.Price || Z1; //MP VET
    // Crimson Chestplate
    const E69 = data["CRIMSON_CHESTPLATE_MF_VET"]?.Price || Z2; //MF VET
    const E70 = data["CRIMSON_CHESTPLATE_VIT_VET"]?.Price || Z2; //VIT VET
    const E71 = data["CRIMSON_CHESTPLATE_MF_VIT"]?.Price || Z2; //MF VIT
    const E72 = data["CRIMSON_CHESTPLATE_MP_VET"]?.Price || Z2; //MP VET
    // Crimson Leggings
    const F69 = data["CRIMSON_LEGGINGS_MF_VET"]?.Price || Z3; //MF VET
    const F70 = data["CRIMSON_LEGGINGS_VIT_VET"]?.Price || Z3; //VIT VET
    const F71 = data["CRIMSON_LEGGINGS_MF_VIT"]?.Price || Z3; //MF VIT
    const F72 = data["CRIMSON_LEGGINGS_MP_VET"]?.Price || Z3; //MP VET
    // Crimson Boots
    const G69 = data["CRIMSON_BOOTS_MF_VET"]?.Price || Z4; //MF VET
    const G70 = data["CRIMSON_BOOTS_VIT_VET"]?.Price || Z4; //VIT VET
    const G71 = data["CRIMSON_BOOTS_MF_VIT"]?.Price || Z4; //MF VIT
    const G72 = data["CRIMSON_BOOTS_MP_VET"]?.Price || Z4; //MP VET
    
    // Terror Helmet
    const D75 = data["TERROR_HELMET_LL_MP"]?.Price || Z9; //LL MP
    const D76 = data["TERROR_HELMET_DOM_VIT"]?.Price || Z9; //DOM VIT
    const D77 = data["TERROR_HELMET_DOM_MP"]?.Price || Z9; //DOM MP
    // Terror Chestplate
    const E75 = data["TERROR_CHESTPLATE_LL_MP"]?.Price || Z10; //LL MP
    const E76 = data["TERROR_CHESTPLATE_DOM_VIT"]?.Price || Z10; //DOM VIT
    const E77 = data["TERROR_CHESTPLATE_DOM_MP"]?.Price || Z10; //DOM MP
    // Terror Leggings
    const F75 = data["TERROR_LEGGINGS_LL_MP"]?.Price || Z11; //LL MP
    const F76 = data["TERROR_LEGGINGS_DOM_VIT"]?.Price || Z11; //DOM VIT
    const F77 = data["TERROR_LEGGINGS_DOM_MP"]?.Price || Z11; //DOM MP
    // Terror Boots
    const G75 = data["TERROR_BOOTS_LL_MP"]?.Price || Z12; //LL MP
    const G76 = data["TERROR_BOOTS_DOM_VIT"]?.Price || Z12; //DOM VIT
    const G77 = data["TERROR_BOOTS_DOM_MP"]?.Price || Z12; //DOM MP
    //Molten Belt
    const D80 = data["MOLTEN_BELT_LL_MP"]?.Price || Z21; //LL MP
    const D81 = data["MOLTEN_BELT_MF_VET"]?.Price || Z21; //MF VET
    const D82 = data["MOLTEN_BELT_MP_MR"]?.Price || Z21; //MP MR
    const D83 = data["MOLTEN_BELT_MF_VIT"]?.Price || Z21; //MF VIT
    const D84 = data["MOLTEN_BELT_MP_VET"]?.Price || Z21; //MP VET
    const D85 = data["MOLTEN_BELT_DOM_MP"]?.Price || Z21; //DOM MP
    const D86 = data["MOLTEN_BELT_MP_VIT"]?.Price || Z21; //MP ViT
    const D87 = data["MOLTEN_BELT_BR_VET"]?.Price || Z21; //BR VET
    const D88 = data["MOLTEN_BELT_MR_VET"]?.Price || Z21; //MR VET
    //Molten Claok
    const E80 = data["MOLTEN_CLOAK_LL_MP"]?.Price || Z22; //LL MP
    const E81 = data["MOLTEN_CLOAK_MF_VET"]?.Price || Z22; //MF VET
    const E82 = data["MOLTEN_CLOAK_MP_MR"]?.Price || Z22; //MP MR
    const E83 = data["MOLTEN_CLOAK_MF_VIT"]?.Price || Z22; //MF VIT
    const E84 = data["MOLTEN_CLOAK_MP_VET"]?.Price || Z22; //MP VET
    const E85 = data["MOLTEN_CLOAK_DOM_MP"]?.Price || Z22; //DOM MP
    const E86 = data["MOLTEN_CLOAK_MP_VIT"]?.Price || Z22; //MP ViT
    const E87 = data["MOLTEN_CLOAK_BR_VET"]?.Price || Z22; //BR VET
    const E88 = data["MOLTEN_CLOAK_MR_VET"]?.Price || Z22; //MR VET
    //Molten Bracelet
    const F80 = data["MOLTEN_BRACELET_LL_MP"]?.Price || Z23; //LL MP
    const F81 = data["MOLTEN_BRACELET_MF_VET"]?.Price || Z23; //MF VET
    const F82 = data["MOLTEN_BRACELET_MP_MR"]?.Price || Z23; //MP MR
    const F83 = data["MOLTEN_BRACELET_MF_VIT"]?.Price || Z23; //MF VIT
    const F84 = data["MOLTEN_BRACELET_MP_VET"]?.Price || Z23; //MP VET
    const F85 = data["MOLTEN_BRACELET_DOM_MP"]?.Price || Z23; //DOM MP
    const F86 = data["MOLTEN_BRACELET_MP_VIT"]?.Price || Z23; //MP ViT
    const F87 = data["MOLTEN_BRACELET_BR_VET"]?.Price || Z23; //BR VET
    const F88 = data["MOLTEN_BRACELET_MR_VET"]?.Price || Z23; //MR VET
    //Molten Necklace
    const G80 = data["MOLTEN_NECKLACE_LL_MP"]?.Price || Z24; //LL MP
    const G81 = data["MOLTEN_NECKLACE_MF_VET"]?.Price || Z24; //MF VET
    const G82 = data["MOLTEN_NECKLACE_MP_MR"]?.Price || Z24; //MP MR
    const G83 = data["MOLTEN_NECKLACE_MF_VIT"]?.Price || Z24; //MF VIT
    const G84 = data["MOLTEN_NECKLACE_MP_VET"]?.Price || Z24; //MP VET
    const G85 = data["MOLTEN_NECKLACE_DOM_MP"]?.Price || Z24; //DOM MP
    const G86 = data["MOLTEN_NECKLACE_MP_VIT"]?.Price || Z24; //MP ViT
    const G87 = data["MOLTEN_NECKLACE_BR_VET"]?.Price || Z24; //BR VET
    const G88 = data["MOLTEN_NECKLACE_MR_VET"]?.Price || Z24; //MR VET

    
    
    let moneyKuudraT2 = (((((((3600/A4)/100)*4.273)*D7) +
                        ((((3600/A4)/100)*4.273)*E7) +
                        ((((3600/A4)/100)*4.273)*F7) +
                        ((((3600/A4)/100)*4.273)*G7) +
                        ((((3600/A4)/100)*4.273)*J7) +
                        ((((3600/A4)/100)*4.273)*K7) +
                        ((((3600/A4)/100)*4.273)*L7) +
                        ((((3600/A4)/100)*4.273)*M7) +
                        ((((3600/A4)/100)*4.273)*D26) +
                        ((((3600/A4)/100)*4.273)*E26) +
                        ((((3600/A4)/100)*4.273)*F26) +
                        ((((3600/A4)/100)*4.273)*G26) +
                        ((((3600/A4)/100)*4.273)*J26) +
                        ((((3600/A4)/100)*4.273)*K26) +
                        ((((3600/A4)/100)*4.273)*L26) +
                        ((((3600/A4)/100)*4.273)*M26) +
                        ((((3600/A4)/100)*4.273)*D45) +
                        ((((3600/A4)/100)*4.273)*E45) +
                        ((((3600/A4)/100)*4.273)*F45) +
                        ((((3600/A4)/100)*4.273)*G45) +
                        ((((3600/A4)/100)*1.923)*J45) +
                        ((((3600/A4)/100)*1.923)*K45) +
                        ((((3600/A4)/100)*1.923)*L45) +
                        ((((3600/A4)/100)*1.923)*M45) +
                        ((((3600/A4)/100)*3.419)*A16) +
                        ((((3600/A4)/100)*3.419)*A19) +
                        ((((3600/A4)/100)*0.081)*A22) +
                        ((((3600/A4)/100)*0.081)*A25) +
                        ((((3600/A4)/100)*1.353)*A28) +
                        ((((3600/A4)/100)*16.234)*A31) +
                        ((((3600/A4)/100)*16.234)*A34) +
                        ((((3600/A4)/100)*16.234)*A37) +
                        ((((3600/A4)/100)*16.234)*A40) +
                        ((((3600/A4)/100)*1.623)*A43) +
                        ((((3600/A4)/100)*1.623)*A46) +
                        ((((3600/A4)/100)*1.623)*A49) +
                        ((((3600/A4)/100)*1.623)*A52) +
                        ((((3600/A4)/100)*1.623)*A55) +
                        ((((3600/A4)/100)*1.623)*A58) +
                        ((((3600/A4)/100)*1.623)*A61) +
                        ((((3600/A4)/100)*1.623)*A64) +
                        ((((3600/A4)/100)*1.623)*A67) +
                        ((((3600/A4)/100)*1.623)*A70) +
                        ((((3600/A4)/100)*0.947)*A73) +
                        ((((3600/A4)/100)*0.947)*A76) +
                        ((((3600/A4)/100)*0.947)*A79) +
                        ((((3600/A4)/100)*0.947)*A82) +
                        ((((3600/A4)/100)*0.947)*A85) +
                        ((((3600/A4)/100)*0.947)*A88) +
                        ((((3600/A4)/100)*0.947)*A91) +
                        ((((3600/A4)/100)*0.947)*A94) +
                        ((((3600/A4)/100)*1.623)*A97) +
                        ((((3600/A4)/100)*1.623)*A100) +
                        ((((3600/A4)/100)*1.623)*A103) +
                        ((((3600/A4)/100)*1.623)*A106) +
                        ((((3600/A4)/100)*1.623)*A109) +
                        ((((3600/A4)/100)*1.623)*A112) +
                        (((3600/A4)*200)*A151) +
                        (((3600/A4)*1)*Z200) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*D64) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*E64) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*F64) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*G64) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*D65) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*E65) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*F65) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*G65) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*D66) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*E66) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*F66) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*G66) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*D69) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*E69) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*F69) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*G69) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*D70) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*E70) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*F70) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*G70) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*D71) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*E71) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*F71) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*G71) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*D72) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*E72) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*F72) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*G72) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*D76) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*E76) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*F76) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*G76) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*D77) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*E77) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*F77) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*G77) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*D75) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*E75) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*F75) +
                        (((((3600/A4)/100)*4.273)/100)*((1/120)*100)*G75) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*D80) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*E80) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*F80) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*G80) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*D81) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*E81) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*F81) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*G81) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*D82) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*E82) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*F82) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*G82) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*D83) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*E83) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*F83) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*G83) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*D84) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*E84) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*F84) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*G84) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*D85) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*E85) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*F85) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*G85) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*D86) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*E86) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*F86) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*G86) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*D87) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*E87) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*F87) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*G87) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*D88) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*E88) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*F88) +
                        (((((3600/A4)/100)*1.923)/100)*((1/120)*100)*G88)) -
                        ((3600/A4)*(320000+(4*A154)+(2*Z100))))/1000000).toFixed(2);

return `${moneyKuudraT2}M`;
}
function updateKuudraT2(data) {
    const MoneyKuudraT2 = calculateKuudraT2(data); 
    document.getElementById('KuudraT2').innerHTML = MoneyKuudraT2;
    localStorage.setItem('cached-KuudraT2', MoneyKuudraT2);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateKuudraT1(data) {
    const Z300 = 0; // Time to do 1 run in Seconds
    const Z400 = 2; // Time to do 1 run in Minutes
    const A4 = Number((Z300 + (Z400 * 60))); // Time to do 1 run in seconds with minute conversion
    
    //Loot table
    const A16 = data["RUNIC_STAFF"]?.Price || 1;
    const A19 = data["HOLLOW_WAND"]?.Price || 1;
    const A22 = data["ENCHANTMENT_FATAL_TEMPO_1"]?.Price || 1;
    const A25 = data["ENCHANTMENT_INFERNO_1"]?.Price || 1;
    const A28 = data["WHEEL_OF_FATE"]?.Price || 1;
    const A31 = data["ENCHANTMENT_STRONG_MANA_1"]?.Price || 1;
    const A34 = data["ENCHANTMENT_FEROCIOUS_MANA_1"]?.Price || 1;
    const A37 = data["ENCHANTMENT_HARDENED_MANA_1"]?.Price || 1;
    const A40 = data["ENCHANTMENT_MANA_VAMPIRE_1"]?.Price || 1;
    const A43 = data["ATTRIBUTE_SHARD_MIDAS_TOUCH_I_"]?.Price || 1;
    const A46 = data["ATTRIBUTE_SHARD_COMBO_I_"]?.Price || 1;
    const A49 = data["ATTRIBUTE_SHARD_UNDEAD_I_"]?.Price || 1;
    const A52 = data["ATTRIBUTE_SHARD_ARACHNO_I_"]?.Price || 1;
    const A55 = data["ATTRIBUTE_SHARD_§bSPEED_I_"]?.Price || 1;
    const A58 = data["ATTRIBUTE_SHARD_MANA_POOL_I_"]?.Price || 1;
    const A61 = data["ATTRIBUTE_SHARD_§bEXPERIENCE_I_"]?.Price || 1;
    const A64 = data["ATTRIBUTE_SHARD_LIFE_REGENERATION_I_"]?.Price || 1;
    const A67 = data["ATTRIBUTE_SHARD_UNDEAD_RESISTANCE_I_"]?.Price || 1;
    const A70 = data["ATTRIBUTE_SHARD_ARACHNO_RESISTANCE_I_"]?.Price || 1;
    const A73 = data["ATTRIBUTE_SHARD_§bHUNTER_I_"]?.Price || 1;
    const A76 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1;
    const A79 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1;
    const A82 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1;
    const A85 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1;
    const A88 = data["ATTRIBUTE_SHARD_DOUBLE_HOOK_I_"]?.Price || 1;
    const A91 = data["ATTRIBUTE_SHARD_TROPHY_HUNTER_I_"]?.Price || 1;
    const A94 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1;
    const A151 = data["ESSENCE_CRIMSON"]?.Price || 1;
    const A154 = data["ENCHANTED_MYCELIUM"]?.Price || 1;
    const Z100 = data["CORRUPTED_NETHER_STAR"]?.Price || 1; //Nether Stars (Added)
    const Z200 = data["KUUDRA_TEETH"]?.Price || 1; //Kuudra Teeth (Added)
    const J7 = data["CRIMSON_HELMET"]?.Price || 1;
    const K7 = data["CRIMSON_CHESTPLATE"]?.Price || 1;
    const L7 = data["CRIMSON_LEGGINGS"]?.Price || 1;
    const M7 = data["CRIMSON_BOOTS"]?.Price || 1;
    const D26 = data["AURORA_HELMET"]?.Price || 1;
    const E26 = data["AURORA_CHESTPLATE"]?.Price || 1;
    const F26 = data["AURORA_LEGGINGS"]?.Price || 1;
    const G26 = data["AURORA_BOOTS"]?.Price || 1;
    const D45 = data["TERROR_HELMET"]?.Price || 1;
    const E45 = data["TERROR_CHESTPLATE"]?.Price || 1;
    const F45 = data["TERROR_LEGGINGS"]?.Price || 1;
    const G45 = data["TERROR_BOOTS"]?.Price || 1;
    const J26 = data["HOLLOW_HELMET"]?.Price || 1;
    const K26 = data["HOLLOW_CHESTPLATE"]?.Price || 1;
    const L26 = data["HOLLOW_LEGGINGS"]?.Price || 1;
    const M26 = data["HOLLOW_BOOTS"]?.Price || 1;
    const D7 = data["FERVOR_HELMET"]?.Price || 1;
    const E7 = data["FERVOR_CHESTPLATE"]?.Price || 1;
    const F7 = data["FERVOR_LEGGINGS"]?.Price || 1;
    const G7 = data["FERVOR_BOOTS"]?.Price || 1;
    const J45 = data["MOLTEN_BELT"]?.Price || 1;
    const K45 = data["MOLTEN_CLOAK"]?.Price || 1;
    const L45 = data["MOLTEN_BLACELET"]?.Price || 1;
    const M45 = data["MOLTEN_NECKLACE"]?.Price || 1;

    const Z1 = data["CRIMSON_HELMET"]?.Price || 1;
    const Z2 = data["CRIMSON_CHESTPLATE"]?.Price || 1;
    const Z3 = data["CRIMSON_LEGGINGS"]?.Price || 1;
    const Z4 = data["CRIMSON_BOOTS"]?.Price || 1;
    const Z5 = data["AURORA_HELMET"]?.Price || 1;
    const Z6 = data["AURORA_CHESTPLATE"]?.Price || 1;
    const Z7 = data["AURORA_LEGGINGS"]?.Price || 1;
    const Z8 = data["AURORA_BOOTS"]?.Price || 1;
    const Z9 = data["TERROR_HELMET"]?.Price || 1;
    const Z10 = data["TERROR_CHESTPLATE"]?.Price || 1;
    const Z11 = data["TERROR_LEGGINGS"]?.Price || 1;
    const Z12 = data["TERROR_BOOTS"]?.Price || 1;
    const Z13 = data["HOLLOW_HELMET"]?.Price || 1;
    const Z14 = data["HOLLOW_CHESTPLATE"]?.Price || 1;
    const Z15 = data["HOLLOW_LEGGINGS"]?.Price || 1;
    const Z16 = data["HOLLOW_BOOTS"]?.Price || 1;
    const Z17 = data["FERVOR_HELMET"]?.Price || 1;
    const Z18 = data["FERVOR_CHESTPLATE"]?.Price || 1;
    const Z19 = data["FERVOR_LEGGINGS"]?.Price || 1;
    const Z20 = data["FERVOR_BOOTS"]?.Price || 1;
    const Z21 = data["MOLTEN_BELT"]?.Price || 1;
    const Z22 = data["MOLTEN_CLOAK"]?.Price || 1;
    const Z23 = data["MOLTEN_BLACELET"]?.Price || 1;
    const Z24 = data["MOLTEN_NECKLACE"]?.Price || 1;

    //God Roles
    //aurora Helmet
    const D64 = data["AURORA_HELMET_MP_MR"]?.Price || Z5; //MP MR
    const D65 = data["AURORA_HELMET_MP_VET"]?.Price || Z5; //MP VET
    const D66 = data["AURORA_HELMET_MP_BR"]?.Price || Z5; //MP BR
    //aurora Chestplate
    const E64 = data["AURORA_CHESTPLATE_MP_MR"]?.Price || Z6; //MP MR
    const E65 = data["AURORA_CHESTPLATE_MP_VET"]?.Price || Z6; //MP VET
    const E66 = data["AURORA_CHESTPLATE_MP_BR"]?.Price || Z6; //MP BR
    //aurora Leggings
    const F64 = data["AURORA_LEGGINGS_MP_MR"]?.Price || Z7; //MP MR
    const F65 = data["AURORA_LEGGINGS_MP_VET"]?.Price || Z7; //MP VET
    const F66 = data["AURORA_LEGGINGS_MP_BR"]?.Price || Z7; //MP BR
    //aurora Boots
    const G64 = data["AURORA_BOOTS_MP_MR"]?.Price || Z8; //MP MR
    const G65 = data["AURORA_BOOTS_MP_VET"]?.Price || Z8; //MP VET
    const G66 = data["AURORA_BOOTS_MP_BR"]?.Price || Z8; //MP BR
    // Crimson Helmet
    const D69 = data["CRIMSON_HELMET_MF_VET"]?.Price || Z1; //MF VET
    const D70 = data["CRIMSON_HELMET_VIT_VET"]?.Price || Z1; //VIT VET
    const D71 = data["CRIMSON_HELMET_MF_VIT"]?.Price || Z1; //MF VIT
    const D72 = data["CRIMSON_HELMET_MP_VET"]?.Price || Z1; //MP VET
    // Crimson Chestplate
    const E69 = data["CRIMSON_CHESTPLATE_MF_VET"]?.Price || Z2; //MF VET
    const E70 = data["CRIMSON_CHESTPLATE_VIT_VET"]?.Price || Z2; //VIT VET
    const E71 = data["CRIMSON_CHESTPLATE_MF_VIT"]?.Price || Z2; //MF VIT
    const E72 = data["CRIMSON_CHESTPLATE_MP_VET"]?.Price || Z2; //MP VET
    // Crimson Leggings
    const F69 = data["CRIMSON_LEGGINGS_MF_VET"]?.Price || Z3; //MF VET
    const F70 = data["CRIMSON_LEGGINGS_VIT_VET"]?.Price || Z3; //VIT VET
    const F71 = data["CRIMSON_LEGGINGS_MF_VIT"]?.Price || Z3; //MF VIT
    const F72 = data["CRIMSON_LEGGINGS_MP_VET"]?.Price || Z3; //MP VET
    // Crimson Boots
    const G69 = data["CRIMSON_BOOTS_MF_VET"]?.Price || Z4; //MF VET
    const G70 = data["CRIMSON_BOOTS_VIT_VET"]?.Price || Z4; //VIT VET
    const G71 = data["CRIMSON_BOOTS_MF_VIT"]?.Price || Z4; //MF VIT
    const G72 = data["CRIMSON_BOOTS_MP_VET"]?.Price || Z4; //MP VET
    
    // Terror Helmet
    const D75 = data["TERROR_HELMET_LL_MP"]?.Price || Z9; //LL MP
    const D76 = data["TERROR_HELMET_DOM_VIT"]?.Price || Z9; //DOM VIT
    const D77 = data["TERROR_HELMET_DOM_MP"]?.Price || Z9; //DOM MP
    // Terror Chestplate
    const E75 = data["TERROR_CHESTPLATE_LL_MP"]?.Price || Z10; //LL MP
    const E76 = data["TERROR_CHESTPLATE_DOM_VIT"]?.Price || Z10; //DOM VIT
    const E77 = data["TERROR_CHESTPLATE_DOM_MP"]?.Price || Z10; //DOM MP
    // Terror Leggings
    const F75 = data["TERROR_LEGGINGS_LL_MP"]?.Price || Z11; //LL MP
    const F76 = data["TERROR_LEGGINGS_DOM_VIT"]?.Price || Z11; //DOM VIT
    const F77 = data["TERROR_LEGGINGS_DOM_MP"]?.Price || Z11; //DOM MP
    // Terror Boots
    const G75 = data["TERROR_BOOTS_LL_MP"]?.Price || Z12; //LL MP
    const G76 = data["TERROR_BOOTS_DOM_VIT"]?.Price || Z12; //DOM VIT
    const G77 = data["TERROR_BOOTS_DOM_MP"]?.Price || Z12; //DOM MP
    //Molten Belt
    const D80 = data["MOLTEN_BELT_LL_MP"]?.Price || Z21; //LL MP
    const D81 = data["MOLTEN_BELT_MF_VET"]?.Price || Z21; //MF VET
    const D82 = data["MOLTEN_BELT_MP_MR"]?.Price || Z21; //MP MR
    const D83 = data["MOLTEN_BELT_MF_VIT"]?.Price || Z21; //MF VIT
    const D84 = data["MOLTEN_BELT_MP_VET"]?.Price || Z21; //MP VET
    const D85 = data["MOLTEN_BELT_DOM_MP"]?.Price || Z21; //DOM MP
    const D86 = data["MOLTEN_BELT_MP_VIT"]?.Price || Z21; //MP ViT
    const D87 = data["MOLTEN_BELT_BR_VET"]?.Price || Z21; //BR VET
    const D88 = data["MOLTEN_BELT_MR_VET"]?.Price || Z21; //MR VET
    //Molten Claok
    const E80 = data["MOLTEN_CLOAK_LL_MP"]?.Price || Z22; //LL MP
    const E81 = data["MOLTEN_CLOAK_MF_VET"]?.Price || Z22; //MF VET
    const E82 = data["MOLTEN_CLOAK_MP_MR"]?.Price || Z22; //MP MR
    const E83 = data["MOLTEN_CLOAK_MF_VIT"]?.Price || Z22; //MF VIT
    const E84 = data["MOLTEN_CLOAK_MP_VET"]?.Price || Z22; //MP VET
    const E85 = data["MOLTEN_CLOAK_DOM_MP"]?.Price || Z22; //DOM MP
    const E86 = data["MOLTEN_CLOAK_MP_VIT"]?.Price || Z22; //MP ViT
    const E87 = data["MOLTEN_CLOAK_BR_VET"]?.Price || Z22; //BR VET
    const E88 = data["MOLTEN_CLOAK_MR_VET"]?.Price || Z22; //MR VET
    //Molten Bracelet
    const F80 = data["MOLTEN_BRACELET_LL_MP"]?.Price || Z23; //LL MP
    const F81 = data["MOLTEN_BRACELET_MF_VET"]?.Price || Z23; //MF VET
    const F82 = data["MOLTEN_BRACELET_MP_MR"]?.Price || Z23; //MP MR
    const F83 = data["MOLTEN_BRACELET_MF_VIT"]?.Price || Z23; //MF VIT
    const F84 = data["MOLTEN_BRACELET_MP_VET"]?.Price || Z23; //MP VET
    const F85 = data["MOLTEN_BRACELET_DOM_MP"]?.Price || Z23; //DOM MP
    const F86 = data["MOLTEN_BRACELET_MP_VIT"]?.Price || Z23; //MP ViT
    const F87 = data["MOLTEN_BRACELET_BR_VET"]?.Price || Z23; //BR VET
    const F88 = data["MOLTEN_BRACELET_MR_VET"]?.Price || Z23; //MR VET
    //Molten Necklace
    const G80 = data["MOLTEN_NECKLACE_LL_MP"]?.Price || Z24; //LL MP
    const G81 = data["MOLTEN_NECKLACE_MF_VET"]?.Price || Z24; //MF VET
    const G82 = data["MOLTEN_NECKLACE_MP_MR"]?.Price || Z24; //MP MR
    const G83 = data["MOLTEN_NECKLACE_MF_VIT"]?.Price || Z24; //MF VIT
    const G84 = data["MOLTEN_NECKLACE_MP_VET"]?.Price || Z24; //MP VET
    const G85 = data["MOLTEN_NECKLACE_DOM_MP"]?.Price || Z24; //DOM MP
    const G86 = data["MOLTEN_NECKLACE_MP_VIT"]?.Price || Z24; //MP ViT
    const G87 = data["MOLTEN_NECKLACE_BR_VET"]?.Price || Z24; //BR VET
    const G88 = data["MOLTEN_NECKLACE_MR_VET"]?.Price || Z24; //MR VET

    
    
    let moneyKuudraT1 = (((((((3600/A4)/100)*4.31)*D7) +
                        ((((3600/A4)/100)*4.31)*E7) +
                        ((((3600/A4)/100)*4.31)*F7) +
                        ((((3600/A4)/100)*4.31)*G7) +
                        ((((3600/A4)/100)*4.31)*J7) +
                        ((((3600/A4)/100)*4.31)*K7) +
                        ((((3600/A4)/100)*4.31)*L7) +
                        ((((3600/A4)/100)*4.31)*M7) +
                        ((((3600/A4)/100)*4.31)*D26) +
                        ((((3600/A4)/100)*4.31)*E26) +
                        ((((3600/A4)/100)*4.31)*F26) +
                        ((((3600/A4)/100)*4.31)*G26) +
                        ((((3600/A4)/100)*4.31)*J26) +
                        ((((3600/A4)/100)*4.31)*K26) +
                        ((((3600/A4)/100)*4.31)*L26) +
                        ((((3600/A4)/100)*4.31)*M26) +
                        ((((3600/A4)/100)*4.31)*D45) +
                        ((((3600/A4)/100)*4.31)*E45) +
                        ((((3600/A4)/100)*4.31)*F45) +
                        ((((3600/A4)/100)*4.31)*G45) +
                        ((((3600/A4)/100)*1.724)*J45) +
                        ((((3600/A4)/100)*1.724)*K45) +
                        ((((3600/A4)/100)*1.724)*L45) +
                        ((((3600/A4)/100)*1.724)*M45) +
                        ((((3600/A4)/100)*3.448)*A16) +
                        ((((3600/A4)/100)*3.448)*A19) +
                        ((((3600/A4)/100)*0.06)*A22) +
                        ((((3600/A4)/100)*0.06)*A25) +
                        ((((3600/A4)/100)*1.5)*A28) +
                        ((((3600/A4)/100)*17.996)*A31) +
                        ((((3600/A4)/100)*17.996)*A34) +
                        ((((3600/A4)/100)*17.996)*A37) +
                        ((((3600/A4)/100)*17.996)*A40) +
                        ((((3600/A4)/100)*1.8)*A43) +
                        ((((3600/A4)/100)*1.8)*A46) +
                        ((((3600/A4)/100)*1.8)*A49) +
                        ((((3600/A4)/100)*1.8)*A52) +
                        ((((3600/A4)/100)*1.8)*A55) +
                        ((((3600/A4)/100)*1.8)*A58) +
                        ((((3600/A4)/100)*1.8)*A61) +
                        ((((3600/A4)/100)*1.8)*A64) +
                        ((((3600/A4)/100)*1.8)*A67) +
                        ((((3600/A4)/100)*1.8)*A70) +
                        ((((3600/A4)/100)*1.05)*A73) +
                        ((((3600/A4)/100)*1.05)*A76) +
                        ((((3600/A4)/100)*1.05)*A79) +
                        ((((3600/A4)/100)*1.05)*A82) +
                        ((((3600/A4)/100)*1.05)*A85) +
                        ((((3600/A4)/100)*1.05)*A88) +
                        ((((3600/A4)/100)*1.05)*A91) +
                        ((((3600/A4)/100)*1.05)*A94) +
                        (((3600/A4)*80)*A151) +
                        (((3600/A4)*1)*Z200) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*D64) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*E64) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*F64) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*G64) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*D65) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*E65) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*F65) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*G65) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*D66) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*E66) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*F66) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*G66) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*D69) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*E69) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*F69) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*G69) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*D70) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*E70) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*F70) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*G70) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*D71) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*E71) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*F71) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*G71) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*D72) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*E72) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*F72) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*G72) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*D76) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*E76) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*F76) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*G76) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*D77) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*E77) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*F77) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*G77) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*D75) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*E75) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*F75) +
                        (((((3600/A4)/100)*4.31)/100)*((1/120)*100)*G75) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*D80) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*E80) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*F80) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*G80) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*D81) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*E81) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*F81) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*G81) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*D82) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*E82) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*F82) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*G82) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*D83) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*E83) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*F83) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*G83) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*D84) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*E84) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*F84) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*G84) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*D85) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*E85) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*F85) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*G85) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*D86) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*E86) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*F86) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*G86) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*D87) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*E87) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*F87) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*G87) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*D88) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*E88) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*F88) +
                        (((((3600/A4)/100)*1.724)/100)*((1/120)*100)*G88)) -
                        ((3600/A4)*(160000+(2*A154)+(2*Z100))))/1000000).toFixed(2);

return `${moneyKuudraT1}M`;
}
function updateKuudraT1(data) {
    const MoneyKuudraT1 = calculateKuudraT1(data); 
    document.getElementById('KuudraT1').innerHTML = MoneyKuudraT1;
    localStorage.setItem('cached-KuudraT1', MoneyKuudraT1);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBarbarianDukeXBZ(data) {

const L20 = 34; //Barbarian kills in 20 minutes
const A3 = data["LEATHER_CLOTH"]?.Price || 1;
const A13 = data["MAGMA_URCHIN"]?.Price || 1;

const moneyBarbarianDukeXBZ = (((((L20*3)*A3))+((((((((L20*3)/4)*5)))/50)*A13)))/1000000).toFixed(2);

return `${moneyBarbarianDukeXBZ}M`; 
}

function updateBarbarianDukeXBZ(data) {
const BarbarianDukeXBZMoney = calculateBarbarianDukeXBZ(data); 
document.getElementById('BarbarianDukeXBZ').innerHTML = BarbarianDukeXBZMoney;
    localStorage.setItem('cached-BarbarianDukeXBZ', BarbarianDukeXBZMoney); 
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateTrophyfishing(data) {


function computeReduction(U12, targetName) {
// Recalculate values dynamically each time function is called
let values = [
    { name: "Sulphur Skitter", value: 0 * U12 },
    { name: "Obfuscated 1", value: 0 * U12 },
    { name: "Steaming-Hot Flounder", value: 0 * U12 },
    { name: "Obfuscated 2", value: 0 * U12 },
    { name: "Gusher", value: 0 * U12 },
    { name: "Blobfish", value: 25 * U12 },
    { name: "Slugfish", value: 0 * U12 },
    { name: "Obfuscated 3", value: 0 * U12 },
    { name: "Flyfish", value: 0 * U12 },
    { name: "Lavahorse", value: 4 * U12 },
    { name: "Mana Ray", value: 0 * U12 },
    { name: "Vanille", value: 0 * U12 },
    { name: "Volcanic Stonefish", value: 0 * U12 },
    { name: "Skeleton Fish", value: 0 * U12 },
    { name: "Moldfin", value: 0 * U12 },
    { name: "Soul Fish", value: 0 * U12 },
    { name: "Karate Fish", value: 0 * U12 }
];


// **Sort by value first, then alphabetically**
values.sort((a, b) => {
    if (b.value !== a.value) {
        return b.value - a.value; // Higher values first
    }
    return a.name.localeCompare(b.name); // Alphabetical order for ties
});

// Find the index of the target fish AFTER sorting
let targetIndex = values.findIndex(item => item.name === targetName);
if (targetIndex === -1) return null; // If the fish is not found, return null

// Get the base value of the current fish
let base = values[targetIndex].value;

// Get only the reduction factors that follow in the new sorted order
let reductionFactors = values.slice(targetIndex + 1);

// Compute the reduction
let numericalValue = base;
let formulaString = `(${base})`;

for (let i = 0; i < reductionFactors.length; i++) {
    let reductionFactor = (1 - (reductionFactors[i].value / 100));
    numericalValue *= reductionFactor;
    formulaString += ` * (1 - (${reductionFactors[i].value} / 100))`;
}

return numericalValue;
}

// Example usage
let S4 = 1260; // Catches / hour
let U12 = 1+((100)/100); // Trophy fish chance total
let S7 = 3000; // Users mana
let Y4 = 5; // Charm Enchantent
let Z4 = 10; // Midas Lure Perk
let AA4 = 10; // Radiant Fisher Perk
let V12 = 1+(Y4*0.02)+(AA4*0.02); // rarety multiplier diamond
let V14 = 1+(Y4*0.02)+(Z4*0.02); //rarety multiplier gold

let V16 = (0.2*V12); // Diamond Chances
let V18 = (2*V14); // Gold Chances
let V20 = 25; // Silver Chances
let V22 = 100-(V16+V18+V20); // Bronze Chances

// Magma Fish
let S33 = data["MAGMA_FISH_SILVER"]?.Price || 1;

// Store computed values properly (No need to pass baseValue anymore)
let T13 = computeReduction(S7, U12, "Sulphur Skitter");
let T14 = computeReduction(S7, U12, "Obfuscated 1");
let T15 = computeReduction(S7, U12, "Steaming-Hot Flounder");
let T16 = computeReduction(S7, U12, "Obfuscated 2");
let T17 = computeReduction(S7, U12, "Gusher");
let T18 = computeReduction(S7, U12, "Blobfish");
let T19 = computeReduction(S7, U12, "Slugfish");
let T20 = computeReduction(S7, U12, "Obfuscated 3");
let T21 = computeReduction(S7, U12, "Flyfish");
let T22 = computeReduction(S7, U12, "Lavahorse");
let T23 = computeReduction(S7, U12, "Vanille");
let T24 = computeReduction(S7, U12, "Volcanic Stonefish");
let T25 = computeReduction(S7, U12, "Skeleton Fish");
let T26 = computeReduction(S7, U12, "Moldfin");
let T27 = computeReduction(S7, U12, "Soul Fish");
let T28 = computeReduction(S7, U12, "Karate Fish");
let T29 = computeReduction(S7, U12, "Mana Ray");

// Bronze
let W13 = ((((S4/100)*T13)/100)*V22);
let W14 = ((((S4/100)*T14)/100)*V22);
let W15 = ((((S4/100)*T15)/100)*V22);
let W16 = ((((S4/100)*T16)/100)*V22);
let W17 = ((((S4/100)*T17)/100)*V22);
let W18 = ((((S4/100)*T18)/100)*V22);
let W19 = ((((S4/100)*T19)/100)*V22);
let W20 = ((((S4/100)*T20)/100)*V22);
let W21 = ((((S4/100)*T21)/100)*V22);
let W22 = ((((S4/100)*T22)/100)*V22);
let W23 = ((((S4/100)*T23)/100)*V22);
let W24 = ((((S4/100)*T24)/100)*V22);
let W25 = ((((S4/100)*T25)/100)*V22);
let W26 = ((((S4/100)*T26)/100)*V22);
let W27 = ((((S4/100)*T27)/100)*V22);
let W28 = ((((S4/100)*T28)/100)*V22);
let W29 = ((((S4/100)*T29)/100)*V22);

// Silver
let X13 = ((((S4/100)*T13)/100)*V20);
let X14 = ((((S4/100)*T14)/100)*V20);
let X15 = ((((S4/100)*T15)/100)*V20);
let X16 = ((((S4/100)*T16)/100)*V20);
let X17 = ((((S4/100)*T17)/100)*V20);
let X18 = ((((S4/100)*T18)/100)*V20);
let X19 = ((((S4/100)*T19)/100)*V20);
let X20 = ((((S4/100)*T20)/100)*V20);
let X21 = ((((S4/100)*T21)/100)*V20);
let X22 = ((((S4/100)*T22)/100)*V20);
let X23 = ((((S4/100)*T23)/100)*V20);
let X24 = ((((S4/100)*T24)/100)*V20);
let X25 = ((((S4/100)*T25)/100)*V20);
let X26 = ((((S4/100)*T26)/100)*V20);
let X27 = ((((S4/100)*T27)/100)*V20);
let X28 = ((((S4/100)*T28)/100)*V20);
let X29 = ((((S4/100)*T29)/100)*V20);

// Gold
let Y13 = ((((S4/100)*T13)/100)*V18);
let Y14 = ((((S4/100)*T14)/100)*V18);
let Y15 = ((((S4/100)*T15)/100)*V18);
let Y16 = ((((S4/100)*T16)/100)*V18);
let Y17 = ((((S4/100)*T17)/100)*V18);
let Y18 = ((((S4/100)*T18)/100)*V18);
let Y19 = ((((S4/100)*T19)/100)*V18);
let Y20 = ((((S4/100)*T20)/100)*V18);
let Y21 = ((((S4/100)*T21)/100)*V18);
let Y22 = ((((S4/100)*T22)/100)*V18);
let Y23 = ((((S4/100)*T23)/100)*V18);
let Y24 = ((((S4/100)*T24)/100)*V18);
let Y25 = ((((S4/100)*T25)/100)*V18);
let Y26 = ((((S4/100)*T26)/100)*V18);
let Y27 = ((((S4/100)*T27)/100)*V18);
let Y28 = ((((S4/100)*T28)/100)*V18);
let Y29 = ((((S4/100)*T29)/100)*V18);

// Diamond
let Z13 = ((((S4/100)*T13)/100)*V16);
let Z14 = ((((S4/100)*T14)/100)*V16);
let Z15 = ((((S4/100)*T15)/100)*V16);
let Z16 = ((((S4/100)*T16)/100)*V16);
let Z17 = ((((S4/100)*T17)/100)*V16);
let Z18 = ((((S4/100)*T18)/100)*V16);
let Z19 = ((((S4/100)*T19)/100)*V16);
let Z20 = ((((S4/100)*T20)/100)*V16);
let Z21 = ((((S4/100)*T21)/100)*V16);
let Z22 = ((((S4/100)*T22)/100)*V16);
let Z23 = ((((S4/100)*T23)/100)*V16);
let Z24 = ((((S4/100)*T24)/100)*V16);
let Z25 = ((((S4/100)*T25)/100)*V16);
let Z26 = ((((S4/100)*T26)/100)*V16);
let Z27 = ((((S4/100)*T27)/100)*V16);
let Z28 = ((((S4/100)*T28)/100)*V16);
let Z29 = ((((S4/100)*T29)/100)*V16);

let moneyTrophyfishing = (((((W13*40) + (X13*60) + (Y13*80) + (Z13*120) + (W14*16) + (X14*24) + (Y14*32) + (Z14*48) + (W15*20) + (X15*28) + (Y15*40) + (Z15*60) + (W16*40) + (X16*60) + (Y16*80) + (Z16*120) + (W17*32) + (X17*48) + (Y17*64) + (Z17*96) + (W18*4) + (X18*8) + (Y18*12) + (Z18*16) + (W19*40) + (X19*60) + (Y19*80) + (Z19*120) + (W20*400) + (X20*700) + (Y20*1000) + (Z20*1300) + (W21*32) + (X21*48) + (Y21*64) + (Z21*96) + (W22*12) + (X22*16) + (Y22*20) + (Z22*24) + (W23*20) + (X23*28) + (Y23*40) + (Z23*60) + (W24*80) + (X24*120) + (Y24*160) + (Z24*240) + (W25*32) + (X25*48) + (Y25*64) + (Z25*96) + (W26*32) + (X26*48) + (Y26*64) + (Z26*96) + (W27*32) + (X27*48) + (Y27*64) + (Z27*96) + (W28*40) + (X28*60) + (Y28*80) + (Z28*120) + (W29*40) + (X29*60) + (Y29*80) + (Z29*120))/80)*S33)/1000000).toFixed(2);



//Chance of it not being a trophy fish
let chanceNotTrophy = 1 - ((T13+T14+T15+T16+T17+T18+T19+T20+T21+T22+T23+T24+T25+T26+T27+T28+T29)/100);

//Crimson Treasure Fishing
let B141 = S4; // Catches / hour
let B142 = 10; // Treasure Chance

//weight
let D69 = 25;
let D70 = 50;
let D71 = 50;
let D72 = 25;
let D73 = 50;
let D74 = 3;
let D75 = 80;
let D76 = 80;
let D77 = 80;
let D78 = 60;
let D79 = 250;
let D80 = 50;
let D81 = 100;
let D82 = 100;
let D83 = 50;
let D84 = 80;
let D85 = 80;
let D86 = 40;
let D87 = 40;
let D88 = 30;
let D89 = 30;
let D90 = 30;
let D91 = 30;
let D92 = 30;
let D93 = 50;
let D94 = 20;
let D95 = 5;
let D96 = 40;
let D97 = 35;
let D98 = 30;
let D99 = 25;
let D100 = 20;
let D101 = 5;
let D102 = 5;
let D103 = 3;
let D104 = 10;
let D105 = 10;
let D106 = 20;
let D107 = 15;
let D108 = 15;
let D109 = 5;
let D110 = 5;
let D111 = 5;
let D112 = 10;
let D113 = 100;
let D114 = 60;
let D115 = 20;
let D116 = 15;
let D117 = 5;
let D118 = 60;
let D119 = 10;
let D120 = 40;
let D121 = 40;
let D122 = 60;
let D123 = 20;
let D124 = 20;
let D125 = 20;
let D126 = 20;
let D127 = 20;
let D128 = 20;
let D129 = 20;
let D130 = 20;
let D131 = 10;
let D132 = 10;

//total weight
let B134 = D132+D131+D130+D129+D128+D127+D126+D125+D124+D123+D122+D121+D120+D119+D118+D117+D116+D115+D114+D113;
let B135 = D112+D111+D110+D109+D108+D107+D106+D105+D104+D103+D102;
let B136 = D101+D100+D99+D98+D97+D96+D95+D94+D93+D92+D91+D90+D89+D88+D87+D86+D85+D84+D83+D82+D81+D80+D79+D78+D77+D76+D75;
let B137 = D74+D73+D72+D71+D70+D69;


//Chances
let E69 = D69/B137;
let E70 = D70/B137;
let E71 = D71/B137;
let E72 = D72/B137;
let E73 = D73/B137;
let E74 = D74/B137;
let E75 = D75/B136;
let E76 = D76/B136;
let E77 = D77/B136;
let E78 = D78/B136;
let E79 = D79/B136;
let E80 = D80/B136;
let E81 = D81/B136;
let E82 = D82/B136;
let E83 = D83/B136;
let E84 = D84/B136;
let E85 = D85/B136;
let E86 = D86/B136;
let E87 = D87/B136;
let E88 = D88/B136;
let E89 = D89/B136;
let E90 = D90/B136;
let E91 = D91/B136;
let E92 = D92/B136;
let E93 = D93/B136;
let E94 = D94/B136;
let E95 = D95/B136;
let E96 = D96/B136;
let E97 = D97/B136;
let E98 = D98/B136;
let E99 = D99/B136;
let E100 = D100/B136;
let E101 = D101/B136;
let E102 = D102/B135;
let E103 = D103/B135;
let E104 = D104/B135;
let E105 = D105/B135;
let E106 = D106/B135;
let E107 = D107/B135;
let E108 = D108/B135;
let E109 = D109/B135;
let E110 = D110/B135;
let E111 = D111/B135;
let E112 = D112/B135;
let E113 = D113/B134;
let E114 = D114/B134;
let E115 = D115/B134;
let E116 = D116/B134;
let E117 = D117/B134;
let E118 = D118/B134;
let E119 = D119/B134;
let E120 = D120/B134;
let E121 = D121/B134;
let E122 = D122/B134;
let E123 = D123/B134;
let E124 = D124/B134;
let E125 = D125/B134;
let E126 = D126/B134;
let E127 = D127/B134;
let E128 = D128/B134;
let E129 = D129/B134;
let E130 = D130/B134;
let E131 = D131/B134;
let E132 = D132/B134;

//Prices
let B69 = 750000;
let B70 = (data["LAVA_SHELL"]?.Price || 1)*4;
let B71 = (data["FLAMES"]?.Price || 1)*16;
let B72 = (data["CORRUPTED_NETHER_STAR"]?.Price || 1)*4;
let B73 = (data["HEAVY_PEARL"]?.Price || 1)*9;
let B74 = (data["LAVA_WATER_ORB"]?.Price || 1);
let B75 = (data["ENCHANTED_MAGMA_CREAM"]?.Price || 1)*16;
let B76 = (data["ENCHANTED_BLAZE_POWDER"]?.Price || 1)*16;
let B77 = (data["ENCHANTED_NETHER_STALK"]?.Price || 1)*64;
let B78 = (data["ENCHANTED_COAL"]?.Price || 1)*64;
let B79 = (data["LAVA_SHELL"]?.Price || 1);
let B80 = (data["TITANIC_EXP_BOTTLE"]?.Price || 1);
let B81 = (data["ENCHANTED_RED_SAND"]?.Price || 1)*64;
let B82 = (data["ENCHANTED_MYCELIUM"]?.Price || 1)*64;
let B83 = (data["ENCHANTED_SULPHUR"]?.Price || 1)*16;
let B84 = (data["ENCHANTED_QUARTZ"]?.Price || 1)*32;
let B85 = (data["ENCHANTED_GLOWSTONE_DUST"]?.Price || 1)*32;
let B86 = (data["ENCHANTED_BLAZE_ROD"]?.Price || 1);
let B87 = (data["WHIPPED_MAGMA_CREAM"]?.Price || 1);
let B88 = (data["LUMINO_FIBER"]?.Price || 1);
let B89 = (data["LEATHER_CLOTH"]?.Price || 1);
let B90 = (data["SPELL_POWDER"]?.Price || 1);
let B91 = (data["HALLOWED_SKULL"]?.Price || 1);
let B92 = (data["REKINDLED_EMBER_FRAGMENT"]?.Price || 1);
let B93 = (data["FLAMES"]?.Price || 1)*6;
let B94 = (data["CORRUPTED_NETHER_STAR"]?.Price || 1);
let B95 = (data["HEAVY_PEARL"]?.Price || 1)*3;
let B96 = 0;
let B97 = 0;
let B98 = 0;
let B99 = 0;
let B100 = 0;
let B101 = 175000;
let B102 = (data["GRAND_EXP_BOTTLE"]?.Price || 1)*6;
let B103 = (data["MAGMA_FISH_SILVER"]?.Price || 1)*3;
let B104 = (data["ENCHANTED_RED_SAND"]?.Price || 1)*24;
let B105 = (data["ENCHANTED_MYCELIUM"]?.Price || 1)*24;
let B106 = (data["SULPHUR_ORE"]?.Price || 1)*48;
let B107 = (data["ENCHANTED_QUARTZ"]?.Price || 1)*6;
let B108 = (data["ENCHANTED_GLOWSTONE_DUST"]?.Price || 1)*6;
let B109 = (data["GAZING_PEARL"]?.Price || 1);
let B110 = (data["TENTACLE_MEAT"]?.Price || 1);
let B111 = (data["FLAMES"]?.Price || 1)*3;
let B112 = 37500;
let B113 = (data["MAGMA_FISH"]?.Price || 1)*3;
let B114 = (data["MAGMA_CREAM"]?.Price || 1)*24;
let B115 = (data["NETHERRACK"]?.Price || 1)*48;
let B116 = (data["BLAZE_ROD"]?.Price || 1)*6;
let B117 = (data["COAL"]?.Price || 1)*48;
let B118 = (data["GLOWSTONE_DUST"]?.Price || 1)*24;
let B119 = (data["SULPHUR_ORE"]?.Price || 1)*3;
let B120 = (data["SAND:1"]?.Price || 1)*24;
let B121 = (data["MYCEL"]?.Price || 1)*24;
let B122 = (data["QUARTZ"]?.Price || 1)*24;
let B123 = (data["BURNING_EYE"]?.Price || 1);
let B124 = (data["WITHER_SOUL"]?.Price || 1);
let B125 = (data["SPECTRE_DUST"]?.Price || 1);
let B126 = (data["BLAZE_ASHES"]?.Price || 1);
let B127 = (data["MUTATED_BLAZE_ASHES"]?.Price || 1);
let B128 = (data["MAGMA_CHUNK"]?.Price || 1);
let B129 = (data["BEZOS"]?.Price || 1);
let B130 = (data["DIGESTED_MUSHROOMS"]?.Price || 1);
let B131 = (data["KADA_LEAD"]?.Price || 1);
let B132 = (data["MAGMAG"]?.Price || 1);


let B145 = (89*(B142/100))/100;
let B146 = (10*(B142/100))/100;
let B147 = (1*(B142/100)/100);
let B144 = 1-B145-B146-B147;


let Blessing = 6;
let BlessedBait = 1.5;
let RarityPet = 0.1;
let HermitCrabLevel = 100;
let BlessingMultiplier = (1 + Number(Blessing)*0.02);
let BlessedBaitMultiplier = Number(BlessedBait);
let RarityPetMultiplier = Number(RarityPet);
let HermitCrabLevelMultiplier = Number(HermitCrabLevel);
let PetEffect = 1 + ((RarityPetMultiplier*HermitCrabLevelMultiplier)/100);
let CatchMultiplier = (BlessingMultiplier*BlessedBaitMultiplier*PetEffect)
B146 //Great
= B146*CatchMultiplier
B147 //Outstanding
= B147*CatchMultiplier
let Over100Chance = ((B144+B145+B146+B147)-1)
B145 //Good
= B145 - Over100Chance;

let moneyLavaFishingSource = ((((B141*B144*E132*B132)+(B141*B144*E131*B131)+(B141*B144*E130*B130)+(B141*B144*E129*B129)+(B141*B144*E128*B128)+(B141*B144*E127*B127)+(B141*B144*E126*B126)+(B141*B144*E125*B125)+(B141*B144*E124*B124)+(B141*B144*E123*B123)+(B141*B144*E122*B122)+(B141*B144*E121*B121)+(B141*B144*E120*B120)+(B141*B144*E119*B119)+(B141*B144*E118*B118)+(B141*B144*E117*B117)+(B141*B144*E116*B116)+(B141*B144*E115*B115)+(B141*B144*E114*B114)+(B141*B144*E113*B113)+(B141*B145*E112*B112)+(B141*B145*E111*B111)+(B141*B145*E110*B110)+(B141*B145*E109*B109)+(B141*B145*E108*B108)+(B141*B145*E107*B107)+(B141*B145*E106*B106)+(B141*B145*E105*B105)+(B141*B145*E104*B104)+(B141*B145*E103*B103)+(B141*B145*E102*B102)+(B141*B146*E101*B101)+(B141*B146*E100*B100)+(B141*B146*E99*B99)+(B141*B146*E98*B98)+(B141*B146*E97*B97)+(B141*B146*E96*B96)+(B141*B146*E95*B95)+(B141*B146*E94*B94)+(B141*B146*E93*B93)+(B141*B146*E92*B92)+(B141*B146*E91*B91)+(B141*B146*E90*B90)+(B141*B146*E89*B89)+(B141*B146*E88*B88)+(B141*B146*E87*B87)+(B141*B146*E86*B86)+(B141*B146*E85*B85)+(B141*B146*E84*B84)+(B141*B146*E83*B83)+(B141*B146*E82*B82)+(B141*B146*E81*B81)+(B141*B146*E80*B80)+(B141*B146*E79*B79)+(B141*B146*E78*B78)+(B141*B146*E77*B77)+(B141*B146*E76*B76)+(B141*B146*E75*B75)+(B141*B147*E74*B74)+(B141*B147*E73*B73)+(B141*B147*E72*B72)+(B141*B147*E71*B71)+(B141*B147*E70*B70)+(B141*B147*E69*B69))*chanceNotTrophy)/1000000).toFixed(2);
 



moneyTrophyfishing = Number(moneyTrophyfishing) + Number(moneyLavaFishingSource);









return `${moneyTrophyfishing.toFixed(2)}M`; 
}

function updateTrophyfishing(data) {
const TrophyfishingMoney = calculateTrophyfishing(data); 
document.getElementById('Trophyfishing').innerHTML = TrophyfishingMoney;
    localStorage.setItem('cached-Trophyfishing', TrophyfishingMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMagmaNecklaceCrafting(data) {



const I57 = 4000; // Total crafts
const J57 = 30; // Time Crafting in minutes
const K57 = 120; // Time Combining in minutes
let L57 = I57/(J57+K57); //Crafts / minutes
const M57 = 15; // Amount of Attributes availible
const N57 = ((M57*(M57-1))/2); // combinations
const K54 = data["MAGMA_CHUNK"]?.Price || 1;
const D59 = data["ENCHANTED_MAGMA_CREAM"]?.Price || 1;
const M62 = data["MAGMA_NECKLACE_VETERAN_V_VITALITY_V"]?.Price || 1;
const M63 = data["MAGMA_NECKLACE_VIT_VET"]?.Price || 1;
const M64 = data["MAGMA_NECKLACE_MANA_POOL_V_MANA_REGENERATION_V"]?.Price || 1;
const M65 = data["MAGMA_NECKLACE_MP_MR"]?.Price || 1;

// Attribute chances

//vet
let I60 = ((M57-2)/N57);
//vit
let J60 = ((M57-2)/N57);
//mp
let L60 = ((M57-4)/N57);
//mr
let M60 = ((M57-4)/N57);



var moneyMagmaNecklaceCrafting = ((((((M62/32)*(I60+J60))*L57*60)+((((L57*60)/N57)*M63)-(((L57*60*(I60+J60))/32)*M63)))+((((M64/32)*(L60+M60))*L57*60)+((((L57*60)/N57)*M65)-(((L57*60*(L60+M60))/32)*M65)))-((L57*60*12*D59)+(L57*60*20*K54)))/1000000).toFixed(2);




return `${moneyMagmaNecklaceCrafting}M`; 
}

function updateMagmaNecklaceCrafting(data) {
const MagmaNecklaceCraftingMoney = calculateMagmaNecklaceCrafting(data); 
document.getElementById('MagmaNecklaceCrafting').innerHTML = MagmaNecklaceCraftingMoney;
    localStorage.setItem('cached-MagmaNecklaceCrafting', MagmaNecklaceCraftingMoney); 
}


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateGhastCloakCrafting(data) {



const I57 = 4000; // Total crafts
const J57 = 30; // Time Crafting in minutes
const K57 = 120; // Time Combining in minutes
let L57 = I57/(J57+K57); //Crafts / minutes
const M57 = 15; // Amount of Attributes availible
const N57 = ((M57*(M57-1))/2); // combinations
const K54 = data["TENTACLE_MEAT"]?.Price || 1;
const J54 = data["ENCHANTED_GHAST_TEAR"]?.Price || 1;
const M62 = data["GHAST_CLOAK_VETERAN_V_VITALITY_V"]?.Price || 1;
const M63 = data["GHAST_CLOAK_VIT_VET"]?.Price || 1;
const M64 = data["GHAST_CLOAK_MANA_POOL_V_MANA_REGENERATION_V"]?.Price || 1;
const M65 = data["GHAST_CLOAK_MP_MR"]?.Price || 1;

// Attribute chances

//vet
let I60 = ((M57-2)/N57);
//vit
let J60 = ((M57-2)/N57);
//mp
let L60 = ((M57-4)/N57);
//mr
let M60 = ((M57-4)/N57);



var moneyGhastCloakCrafting = ((((((M62/32)*(I60+J60))*L57*60)+((((L57*60)/N57)*M63)-(((L57*60*(I60+J60))/32)*M63)))+((((M64/32)*(L60+M60))*L57*60)+((((L57*60)/N57)*M65)-(((L57*60*(L60+M60))/32)*M65)))-((L57*60*10*K54)+(L57*60*192*J54)))/1000000).toFixed(2);




return `${moneyGhastCloakCrafting}M`; 
}

function updateGhastCloakCrafting(data) {
const GhastCloakCraftingMoney = calculateGhastCloakCrafting(data); 
document.getElementById('GhastCloakCrafting').innerHTML = GhastCloakCraftingMoney;
    localStorage.setItem('cached-GhastCloakCrafting', GhastCloakCraftingMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBlazeBeltCrafting(data) {



const E11 = 4000; // Total crafts
const F11 = 30; // Time Crafting in minutes
const G11 = 60; // Time Combining in minutes
let H11 = E11/(F11+G11); //Crafts / minutes
const I11 = 15; // Amount of Attributes availible
const J11 = ((I11*(I11-1))/2); // combinations
const G8 = data["BLAZE_ASHES"]?.Price || 1;
const E8 = data["ENCHANTED_BLAZE_POWDER"]?.Price || 1;
const I16 = data["BLAZE_BELT_VETERAN_V_VITALITY_V"]?.Price || 1;
const I17 = data["BLAZE_BELT_VIT_VET"]?.Price || 1;


// Attribute chances

//vet
let E14 = ((I11-2)/J11);
//vit
let F14 = ((I11-2)/J11);



var moneyBlazeBeltCrafting = ((((((I16/32)*(E14+F14))*H11*60)+((((H11*60)/J11)*I17)-(((H11*60*(E14+F14))/32)*I17)))-(((G8*25)+(E8*12))*H11*60))/1000000).toFixed(2);




return `${moneyBlazeBeltCrafting}M`; 
}

function updateBlazeBeltCrafting(data) {
const BlazeBeltCraftingMoney = calculateBlazeBeltCrafting(data); 
document.getElementById('BlazeBeltCrafting').innerHTML = BlazeBeltCraftingMoney;
    localStorage.setItem('cached-BlazeBeltCrafting', BlazeBeltCraftingMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateGlowstoneGauntletCrafting(data) {



const K48 = 6000; // Total crafts
const L48 = 45; // Time Crafting in minutes
const M48 = 180; // Time Combining in minutes
let N48 = K48/(L48+M48); //Crafts / minutes
const O48 = 15; // Amount of Attributes availible
const P48 = ((O48*(O48-1))/2); // combinations
const L23 = data["ENCHANTED_LEATHER"]?.Price || 1;
const N23 = data["ENCHANTED_GLOWSTONE_DUST"]?.Price || 1;
const U30 = data["GLOWSTONE_GAUNTLET_MANA_POOL_X_MANA_REGENERATION_X"]?.Price || 1;
const U31 = data["GLOWSTONE_GAUNTLET_VETERAN_X_VITALITY_X"]?.Price || 1;
const U32 = data["GLOWSTONE_GAUNTLET_DOMINANCE_X_SPEED_X"]?.Price || 1;


// Attribute chances

//mp
let K51 = ((O48-1)/P48);
//mr
let L51 = ((O48-2)/P48);
//vet
let M51 = ((O48-3)/P48);
//vit
let N51 = ((O48-4)/P48);
//dom
let O51 = ((O48-5)/P48);
//speed
let P51 = ((O48-6)/P48);



var moneyGlowstoneGauntletCrafting = ((((((U30/1024)*(K51+L51))+((U31/1024)*(M51+N51))+((U32/1024)*(O51+P51)))*N48*60)-(((N23*12)+(L23*3))*N48*60))/1000000).toFixed(2);




return `${moneyGlowstoneGauntletCrafting}M`; 
}

function updateGlowstoneGauntletCrafting(data) {
const GlowstoneGauntletCraftingMoney = calculateGlowstoneGauntletCrafting(data); 
document.getElementById('GlowstoneGauntletCrafting').innerHTML = GlowstoneGauntletCraftingMoney;
    localStorage.setItem('cached-GlowstoneGauntletCrafting', GlowstoneGauntletCraftingMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMagmaRodCrafting(data) {



const B22 = 1500; // Total crafts
const C22 = 15; // Time Crafting in minutes
const D22 = 67; // Time Combining in minutes
let E22 = B22/(C22+D22); //Crafts / minutes
const F22 = 5; // Amount of Attributes availible
const G22 = ((F22*(F22-1))/2); // combinations
const A7 = data["MAGMA_FISH_SILVER"]?.Price || 1;
const A15 = data["MAGMA_ROD_TROPHY_HUNTER_X_FISHERMAN_X"]?.Price || 1;
const A17 = data["MAGMA_ROD_DOUBLE_HOOK_X_FISHING_SPEED_X"]?.Price || 1;

// Attribute chances

//vet
let B25 = ((F22-1)/G22);
//vit
let C25 = ((F22-2)/G22);
//mp
let D25 = ((F22-3)/G22);
//mr
let E25 = ((F22-4)/G22);



var moneyMagmaRodCrafting = ((((((A17/1024)*(B25+C25))+((A15/1024)*(D25+E25)))*E22*60)-((A7*10*E22*60)))/1000000).toFixed(2);




return `${moneyMagmaRodCrafting}M`; 
}

function updateMagmaRodCrafting(data) {
const MagmaRodCraftingMoney = calculateMagmaRodCrafting(data); 
document.getElementById('MagmaRodCrafting').innerHTML = MagmaRodCraftingMoney;
    localStorage.setItem('cached-MagmaRodCrafting', MagmaRodCraftingMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateImplosionBeltCrafting(data) {



const K49 = 1500; // Total crafts
const J49 = 120; // Time Crafting match sticks in minutes
const L49 = 12; // Time Crafting in minutes
const M49 = 34; // Time Combining in minutes
let N49 = K49/(L49+M49+J49); //Crafts / minutes
const O49 = 15; // Amount of Attributes availible
const P49 = ((O49*(O49-1))/2); // combinations
const L22 = data["ENCHANTED_SULPHUR_CUBE"]?.Price || 1;
const N30 = data["IMPLOSION_BELT_MANA_POOL_V_MANA_REGENERATION_V"]?.Price || 1;
const N31 = data["IMPLOSION_BELT_MP_MR"]?.Price || 1;

// Attribute chances

//MP
let K52 = ((O49-2)/P49);
//MR
let L52 = ((O49-2)/P49);

//Amount remaining
let M52 = (1-K52-L52)/2;

//MP
let N52 = M52*K52;
//MR
let O52 = M52*L52;

//Amount remaining
let P52 = M52*M52;

//MP
let Q52 = P52*K52;
//MR
let R52 = L52*P52


var moneyImplosionBeltCrafting = (((((((N30/32)*(K52+L52+N52+O52+Q52+R52)))*N49*60)+((((N49*60)/P49)*N31)-(((N49*60*(K52+L52))/32)*N31)))-((4*L22)*N49*60))/1000000).toFixed(2);




return `${moneyImplosionBeltCrafting}M`; 
}

function updateImplosionBeltCrafting(data) {
const ImplosionBeltCraftingMoney = calculateImplosionBeltCrafting(data); 
document.getElementById('ImplosionBeltCrafting').innerHTML = ImplosionBeltCraftingMoney;
    localStorage.setItem('cached-ImplosionBeltCrafting', ImplosionBeltCraftingMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateNucleus(data) {



const A4 = 17; // Avg Time per nucleus run in Seconds
const A5 = 3; // Avg Time per nucleus run in Seconds ((A5 * 60) + A4)
const D7 = 100; // Mole pet lvl 100
const E7 = 1; // Higher Roller perk
const A7 = data["FLAWED_RUBY_GEM"]?.Price || 1;
const A10 = data["FINE_RUBY_GEM"]?.Price || 1;
const A13 = data["FLAWLESS_RUBY_GEM"]?.Price || 1;
const A16 = data["FLAWED_AMETHYST_GEM"]?.Price || 1;
const A19 = data["FINE_AMETHYST_GEM"]?.Price || 1;
const A22 = data["FLAWLESS_AMETHYST_GEM"]?.Price || 1;
const A25 = data["FLAWED_JADE_GEM"]?.Price || 1;
const A28 = data["FINE_JADE_GEM"]?.Price || 1;
const A31 = data["FLAWLESS_JADE_GEM"]?.Price || 1;
const A34 = data["FLAWED_AMBER_GEM"]?.Price || 1;
const A37 = data["FINE_AMBER_GEM"]?.Price || 1;
const A40 = data["FLAWLESS_AMBER_GEM"]?.Price || 1;
const A43 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1;
const A46 = data["FINE_SAPPHIRE_GEM"]?.Price || 1;
const A49 = data["FLAWLESS_SAPPHIRE_GEM"]?.Price || 1;
const A52 = data["FLAWED_TOPAZ_GEM"]?.Price || 1;
const A55 = data["FINE_TOPAZ_GEM"]?.Price || 1;
const A58 = data["FLAWLESS_TOPAZ_GEM"]?.Price || 1;
const A61 = data["FLAWED_JASPER_GEM"]?.Price || 1;
const A64 = data["FINE_JASPER_GEM"]?.Price || 1;
const A67 = data["FLAWLESS_JASPER_GEM"]?.Price || 1;
const A70 = data["DIVAN_FRAGMENT"]?.Price || 1;
const A73 = data["PREHISTORIC_EGG"]?.Price || 1;
const A76 = data["OIL_BARREL"]?.Price || 1;
const A79 = data["HELIX"]?.Price || 1;
const A82 = data["PICKONIMBUS"]?.Price || 1;
const A85 = data["BOB_OMB"]?.Price || 1;
const A88 = data["JADERALD"]?.Price || 1;
const A91 = data["WISHING_COMPASS"]?.Price || 1;
const A94 = data["TREASURITE"]?.Price || 1;
const A97 = data["RECALL_POTION"]?.Price || 1;
const A100 = data["PRECIOUS_PEARL"]?.Price || 1;
const A103 = data["CLAW_FOSSIL"]?.Price || 1;
const A106 = data["GEMSTONE_MIXTURE"]?.Price || 1;
const A109 = data["ENCHANTMENT_FORTUNE_4"]?.Price || 1;
const A112 = data["ENCHANTMENT_LAPIDARY_1"]?.Price || 1;
const A115 = data["PET_ITEM_QUICK_CLAW"]?.Price || 1;
const A118 = data["ESSENCE_GOLD"]?.Price || 1;
const A121 = data["ESSENCE_DIAMOND"]?.Price || 1;
const A124 = data["DWARVEN_OS_GEMSTONE_GRAHAMS"]?.Price || 1;
const A127 = data["DIVAN_ALLOY"]?.Price || 1;

const C13 = data["CONTROL_SWITCH"]?.Price || 1;
const C16 = data["SUPERLITE_MOTOR"]?.Price || 1;
const C19 = data["ROBOTRON_REFLECTOR"]?.Price || 1;
const C22 = data["FTX_3070"]?.Price || 1;
const C25 = data["ELECTRON_TRANSMITTER"]?.Price || 1;
const C28 = data["SYNTHETIC_HEART"]?.Price || 1;
const C31 = data["JUNGLE_KEY"]?.Price || 1;



var moneyNucleus = (((((((((((3600/((A5 * 60) + A4))/100)*67.068*6)*A7) + ((((3600/((A5 * 60) + A4))/100)*42.075*12)*A7) + ((((3600/((A5 * 60) + A4))/100)*23.719*24)*A7) + ((((3600/((A5 * 60) + A4))/100)*10.216*40)*A7) + ((((3600/((A5 * 60) + A4))/100)*4.725*1)*A10) + ((((3600/((A5 * 60) + A4))/100)*0.08*1)*A13) + ((((3600/((A5 * 60) + A4))/100)*67.068*6)*A16) + ((((3600/((A5 * 60) + A4))/100)*42.075*12)*A16) + ((((3600/((A5 * 60) + A4))/100)*23.719*24)*A16) + ((((3600/((A5 * 60) + A4))/100)*10.216*40)*A16) + ((((3600/((A5 * 60) + A4))/100)*4.725*1)*A19) + ((((3600/((A5 * 60) + A4))/100)*0.08*1)*A22) + ((((3600/((A5 * 60) + A4))/100)*67.068*6)*A25) + ((((3600/((A5 * 60) + A4))/100)*42.075*12)*A25) + ((((3600/((A5 * 60) + A4))/100)*23.719*24)*A25) + ((((3600/((A5 * 60) + A4))/100)*10.216*40)*A25) + ((((3600/((A5 * 60) + A4))/100)*4.725*1)*A28) + ((((3600/((A5 * 60) + A4))/100)*0.08*1)*A31) + ((((3600/((A5 * 60) + A4))/100)*67.068*6)*A34) + ((((3600/((A5 * 60) + A4))/100)*42.075*12)*A34) + ((((3600/((A5 * 60) + A4))/100)*23.719*24)*A34) + ((((3600/((A5 * 60) + A4))/100)*10.216*40)*A34) + ((((3600/((A5 * 60) + A4))/100)*4.725*1)*A37) + ((((3600/((A5 * 60) + A4))/100)*0.08*1)*A40) + ((((3600/((A5 * 60) + A4))/100)*67.068*6)*A43) + ((((3600/((A5 * 60) + A4))/100)*42.075*12)*A43) + ((((3600/((A5 * 60) + A4))/100)*23.719*24)*A43) + ((((3600/((A5 * 60) + A4))/100)*10.216*40)*A43) + ((((3600/((A5 * 60) + A4))/100)*4.725*1)*A46) + ((((3600/((A5 * 60) + A4))/100)*0.08*1)*A49) + ((((3600/((A5 * 60) + A4))/100)*67.068*6)*A52) + ((((3600/((A5 * 60) + A4))/100)*42.075*12)*A52) + ((((3600/((A5 * 60) + A4))/100)*23.719*24)*A52) + ((((3600/((A5 * 60) + A4))/100)*10.216*40)*A52) + ((((3600/((A5 * 60) + A4))/100)*4.725*1)*A55) + ((((3600/((A5 * 60) + A4))/100)*0.08*1)*A58) + ((((3600/((A5 * 60) + A4))/100)*42.075*6)*A61) + ((((3600/((A5 * 60) + A4))/100)*23.719*12)*A61) + ((((3600/((A5 * 60) + A4))/100)*10.216*24)*A61) + ((((3600/((A5 * 60) + A4))/100)*3.693*32)*A61) + ((((3600/((A5 * 60) + A4))/100)*1.068*1)*A64) + ((((3600/((A5 * 60) + A4))/100)*0.026*1)*A67) + ((((3600/((A5 * 60) + A4))/100)*27.779*1)*A70) + ((((3600/((A5 * 60) + A4))/100)*23.719*1)*A73) + ((((3600/((A5 * 60) + A4))/100)*35.297*1)*A76) + ((((3600/((A5 * 60) + A4))/100)*19.446*1)*A79) + ((((3600/((A5 * 60) + A4))/100)*42.075*1)*A82) + ((((3600/((A5 * 60) + A4))/100)*42.075*20)*A85) + ((((3600/((A5 * 60) + A4))/100)*7.509*1)*A88) + ((((3600/((A5 * 60) + A4))/100)*2.651*3)*A91) + ((((3600/((A5 * 60) + A4))/100)*10.216*5)*A94) + ((((3600/((A5 * 60) + A4))/100)*1.068*10)*A94) + ((((3600/((A5 * 60) + A4))/100)*1.334*1)*A97) + ((((3600/((A5 * 60) + A4))/100)*2.651*1)*A100) + ((((3600/((A5 * 60) + A4))/100)*2.651*1)*A103) + ((((3600/((A5 * 60) + A4))/100)*3.693*1)*A106) + ((((3600/((A5 * 60) + A4))/100)*3.693*1)*A109) + ((((3600/((A5 * 60) + A4))/100)*19.446*1)*A112) + ((((3600/((A5 * 60) + A4))/100)*0.268*1)*A115) + ((((3600/((A5 * 60) + A4))/100)*3.952*10)*A118) + ((((3600/((A5 * 60) + A4))/100)*3.952*10)*A121) + ((((3600/((A5 * 60) + A4))/100)*7.509*1)*A124) + ((((3600/((A5 * 60) + A4))/100)*0.091*1)*A127)))/16.5)*(16.5+(D7/100)+E7)) + ((3600/((A5 * 60) + A4))*(A37+A46+A55+A64+A28+A10+A19)) + ((((3600/((A5 * 60) + A4))*1000)/1000000)*A127))-((3600/((A5 * 60) + A4))*(C13+C16+C19+C22+C25+C28+C31)))/1000000).toFixed(2);




return `${moneyNucleus}M`; 
}

function updateNucleus(data) {
const NucleusMoney = calculateNucleus(data); 
document.getElementById('Nucleus').innerHTML = NucleusMoney;
    localStorage.setItem('cached-Nucleus', NucleusMoney); 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateHellwisp(data) {
const O48 = 624; //Diving Ghast kills /hour
const Q48 = 5; //looting

const R27 = 15; // Attributes Available

const E60 = data["STARFALL"]?.Price || 1;
const E63 = data["ENCHANTED_GHAST_TEAR"]?.Price || 1;
const E66 = data["METEOR_SHARD"]?.Price || 1;
const E69 = data["CORRUPTED_NETHER_STAR"]?.Price || 1;
const E72 = data["VANQUISHED_GHAST_CLOAK"]?.Price || 1;
const I54 = data["GHAST_CLOAK_VIT_VET"]?.Price || 1;
const K54 = data["GHAST_CLOAK_MP_MR"]?.Price || 1;

var moneyHellwispMeteor = (((((((O48/100)*(15*(1+(0.15*Q48))))/10)*E66)-((E60*20*(((O48/100)*(15*(1+(0.15*Q48))))/10))+((((O48/100)*(15*(1+(0.15*Q48))))/10)*E63*40*25))))/1000000).toFixed(2);
var moneyHellwispVanqGuastCloak = ((((((O48*0.15*(1+(Q48*0.15)))/10)*E72)+((((O48*0.15*(1+(Q48*0.15)))/10)/((R27*(R27-1))/2))*(I54+K54)))-((((O48*0.15*(1+(Q48*0.15)))/10)*6592*E63)+(((O48*0.15*(1+(Q48*0.15)))/10)*3*E69)))/1000000).toFixed(2);


let moneyHellwisp = Math.max(moneyHellwispMeteor,moneyHellwispVanqGuastCloak);

return `${moneyHellwisp}M`; 
}

function updateHellwisp(data) {
const MoneyHellwisp = calculateHellwisp(data); 
document.getElementById('Hellwisp').innerHTML = MoneyHellwisp;
    localStorage.setItem('cached-Hellwisp', MoneyHellwisp);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateHellwispBZ(data) {
const A3 = 624; //Diving Ghast kills /hour
const A6 = 5; //looting
const A9 = data["TENTACLE_MEAT"]?.Price || 1;

var moneyHellwispBZ = (((A3*0.15*(1+(A6*0.15)))*A9)/1000000).toFixed(2);

return `${moneyHellwispBZ}M`; 
}

function updateHellwispBZ(data) {
const MoneyHellwispBZ = calculateHellwispBZ(data); 
document.getElementById('HellwispBZ').innerHTML = MoneyHellwispBZ;
    localStorage.setItem('cached-HellwispBZ', MoneyHellwispBZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateDivingGhast(data) {
const O48 = 447; //Diving Ghast kills /hour
const Q48 = 5; //looting

const R27 = 15; // Attributes Available

const E60 = data["STARFALL"]?.Price || 1;
const E63 = data["ENCHANTED_GHAST_TEAR"]?.Price || 1;
const E66 = data["METEOR_SHARD"]?.Price || 1;
const E69 = data["CORRUPTED_NETHER_STAR"]?.Price || 1;
const E72 = data["VANQUISHED_GHAST_CLOAK"]?.Price || 1;
const I54 = data["GHAST_CLOAK_VIT_VET"]?.Price || 1;
const K54 = data["GHAST_CLOAK_MP_MR"]?.Price || 1;

var moneyDivingGhastMeteor = (((((((O48/100)*(10*(1+(0.15*Q48))))/10)*E66)-((E60*20*(((O48/100)*(10*(1+(0.15*Q48))))/10))+((((O48/100)*(10*(1+(0.15*Q48))))/10)*E63*40*25))))/1000000).toFixed(2);
var moneyDivingGhastVanqGuastCloak = ((((((O48*0.1*(1+(Q48*0.15)))/10)*E72)+((((O48*0.1*(1+(Q48*0.15)))/10)/((R27*(R27-1))/2))*(I54+K54)))-((((O48*0.1*(1+(Q48*0.15)))/10)*6592*E63)+(((O48*0.1*(1+(Q48*0.15)))/10)*3*E69)))/1000000).toFixed(2);

let moneyDivingGhast = Math.max(moneyDivingGhastMeteor,moneyDivingGhastVanqGuastCloak);

return `${moneyDivingGhast}M`; 
}

function updateDivingGhast(data) {
const MoneyDivingGhast = calculateDivingGhast(data); 
document.getElementById('DivingGhast').innerHTML = MoneyDivingGhast;
    localStorage.setItem('cached-DivingGhast', MoneyDivingGhast);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBlazeBZ(data) {
const L8 = 3948; //Blaze Ghast kills /hour
const O8 = 5; //looting
const G8 = data["BLAZE_ASHES"]?.Price || 1;

var moneyBlazeBZ = ((((L8/100)*20*(1+(O8*0.15)))*G8)/1000000).toFixed(2);

return `${moneyBlazeBZ}M`; 
}

function updateBlazeBZ(data) {
const MoneyBlazeBZ = calculateBlazeBZ(data); 
document.getElementById('BlazeBZ').innerHTML = MoneyBlazeBZ;
    localStorage.setItem('cached-BlazeBZ', MoneyBlazeBZ);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBurningDesert(data) {
const L20 = 0; // Magma cube kills in 5 minutes
const L23 = 326; // Magma cube  rider kills in 5 minutes
const L26 = 5; //looting

const G965 = 392; // Flaming spider kills in 5 minutes
const G981 = 81; // Petluck


const K54 = data["MAGMA_CHUNK"]?.Price || 1;
const D59 = data["ENCHANTED_MAGMA_CREAM"]?.Price || 1;
const D62 = data["ENCHANTED_NETHERRACK"]?.Price || 1;
const D65 = data["SEARING_STONE"]?.Price || 1;

const G968 = data["SNAIL;3"]?.Price || 1;
const G971 = data["SNAIL;4"]?.Price || 1;
const G974 = data["ENCHANTED_RED_SAND"]?.Price || 1;
const G977 = data["SUPER_EGG"]?.Price || 1;
const G984 = data["KAT_FLOWER"]?.Price || 1;




var moneyMagmaCube = ((((((((L20*12)/100)*((1+(0.15*L26))*20))+(((L23*12)/100)*((1+(0.15*L26))*25)))/50)*D65)-(((((((L20*12)/100)*((1+(0.15*L26))*20))+(((L23*12)/100)*((1+(0.15*L26))*25)))/50)*D59*10*5)+((((((L20*12)/100)*((1+(0.15*L26))*20))+(((L23*12)/100)*((1+(0.15*L26))*25)))/50)*D62*10*3)))/1000000).toFixed(2);
var moneyFlamingSpiderNotKat = (((((((G965*12*0.2*(1+(L26*0.15)))/128)/100)*((20*(1+G981/100))/((20*(1+G981/100))+80)*100)*G971)+((((G965*12*0.2*(1+(L26*0.15)))/128)/100)*(100-((20*(1+G981/100))/((20*(1+G981/100))+80)*100))*G968))- (((((((G965*12*0.2*(1+(L26*0.15)))/128)/100)*((20*(1+G981/100))/((20*(1+G981/100))+80)*100))+((((G965*12*0.2*(1+(L26*0.15)))/128)/100)*(100-((20*(1+G981/100))/((20*(1+G981/100))+80)*100))))*((G974*128)+G977))))/1000000).toFixed(2);
var moneyFlamingSpiderKat = ((((((((G965*12*0.2*(1+(L26*0.15)))/128))*(1-(((20*(1+G981/100))/((20*(1+G981/100))+80)*100)/100)))*G971)-(((((G965*12*0.2*(1+(L26*0.15)))/128))*(1-(((20*(1+G981/100))/((20*(1+G981/100))+80)*100)/100)))*((G984*3)+(((((((((((20*(1+G981/100))/((20*(1+G981/100))+80)*100)*G971))+(((100-((((20*(1+G981/100))/((20*(1+G981/100))+80)*100)))))*G968))))-(((G974*128)+G977)*100))/100)/128)*20)+(G974*128)+G977)))+((((((G965*12*0.2*(1+(L26*0.15)))/128))*(((20*(1+G981/100))/((20*(1+G981/100))+80)*100)/100))*G971)-(((((G965*12*0.2*(1+(L26*0.15)))/128))*(((20*(1+G981/100))/((20*(1+G981/100))+80)*100)/100))*(G977+(G974*128)))))/1000000).toFixed(2);

let moneyFlamingSpider = Math.max(moneyFlamingSpiderNotKat,moneyFlamingSpiderKat);

let moneyBurningDesert = Number(moneyFlamingSpider) + Number(moneyMagmaCube);

return `${moneyBurningDesert.toFixed(2)}M`; 
}

function updateBurningDesert(data) {
const MoneyBurningDesert = calculateBurningDesert(data); 
document.getElementById('BurningDesert').innerHTML = MoneyBurningDesert;
    localStorage.setItem('cached-BurningDesert', MoneyBurningDesert);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateReaperScythe(data) {

const A4 = 82; // Souls obtained in 30 minutes
const A7 = data["REAPER_SCYTHE"]?.Price || 1;
const A10 = data["REAPER_SCYTHE_M3"]?.Price || 1;

var moneyReaperScythe = ((((A4*2)/8)*(A10-A7-((A10/100)*2.5)))/1000000).toFixed(2);

return `${moneyReaperScythe}M`; 
}

function updateReaperScythe(data) {
const MoneyReaperScythe = calculateReaperScythe(data); 
document.getElementById('ReaperScythe').innerHTML = MoneyReaperScythe;
    localStorage.setItem('cached-ReaperScythe', MoneyReaperScythe);
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateCobblestone(data) {


    const A4 = 7227; // Enchanted Cobblestone in 5 minutes
    const A7 = data["ENCHANTED_COBBLESTONE"]?.Price || 1;
    
    
    var moneyCobblestone = ((A4*12*A7)/1000000).toFixed(2);
    
    return `${moneyCobblestone}M`; 
    }
    
    function updateCobblestone(data) {
    const CobblestoneMoney = calculateCobblestone(data); 
    document.getElementById('Cobblestone').innerHTML = CobblestoneMoney;
    localStorage.setItem('cached-Cobblestone', CobblestoneMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateEndstone(data) {


    const A4 = 4987; // Enchanted Endstone in 5 minutes
    const A7 = data["ENCHANTED_ENDSTONE"]?.Price || 1;
    
    
    var moneyEndstone = ((A4*12*A7)/1000000).toFixed(2);
    
    return `${moneyEndstone}M`; 
    }
    
    function updateEndstone(data) {
    const EndstoneMoney = calculateEndstone(data); 
    document.getElementById('Endstone').innerHTML = EndstoneMoney;
    localStorage.setItem('cached-Endstone', EndstoneMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateNetherrack(data) {


    const A4 = 2361; // Enchanted Netherrack in 5 minutes
    const A7 = data["ENCHANTED_NETHERRACK"]?.Price || 1;
    
    
    var moneyNetherrack = ((A4*12*A7)/1000000).toFixed(2);
    
    return `${moneyNetherrack}M`; 
    }
    
    function updateNetherrack(data) {
    const NetherrackMoney = calculateNetherrack(data); 
    document.getElementById('Netherrack').innerHTML = NetherrackMoney;
    localStorage.setItem('cached-Netherrack', NetherrackMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateNetherrack(data) {


    const A4 = 2361; // Enchanted Netherrack in 5 minutes
    const A7 = data["ENCHANTED_NETHERRACK"]?.Price || 1;
    
    
    var moneyNetherrack = ((A4*12*A7)/1000000).toFixed(2);
    
    return `${moneyNetherrack}M`; 
    }
    
    function updateNetherrack(data) {
    const NetherrackMoney = calculateNetherrack(data); 
    document.getElementById('Netherrack').innerHTML = NetherrackMoney;
    localStorage.setItem('cached-Netherrack', NetherrackMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateWaterFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 1200; // Squid
    let B6  = 800;  // Sea Walker
    let B7  = 600;  // Sea Guardian
    let B8  = 700;  // Sea Witch
    let B9  = 550;  // Sea Archer
    let B10 = 400;  // Rider of the Deep
    let B11 = 250;  // Catfish
    let B12 = 160;  // Sea Leech
    let B13 = 130;   // Guardian Defender
    let B14 = 88;  // Deep Sea Protector
    let B15 = 18;  // Water Hydra
    let B16 = 10;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 950;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 300;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 0; // Magma Slug
    let T6  = 0; // Moogma
    let T7  = 0;  // Lava Leech
    let T8  = 0;  // Pyroclastic Worm
    let T9  = 0;  // Lava Flame
    let T10 = 0;  // Fire Eel
    let T11 = 0;  // Taurus
    let T12 = 0;   // Thunder
    let T13 = 0;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 0;   // Alligator
    let W6  = 0;  // Banshee
    let W7  = 0;  // Bayou Sludge
    let W8  = 0;  // Dumpster Diver
    let W9  = 0;   // Titanoboa
    let W10 = 0;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
 // THUNDER
 let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
 let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
 let T103 = 1; // Hunter I
 let T104 = 1; // Blazing Fortune I
 let T105 = 1; // Infection I
 let T106 = 1; // Fishing Experience I
 let T107 = 1; // Fisherman I
 let T108 = 1; // Fishing Speed I
 let T109 = 1; // Double Hook I
 let T110 = 1; // Trophy Hunter I
 let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ7;

    let moneyWaterFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneyWaterFishing}M`; 
    }
    
    function updateWaterFishing(data) {
    const WaterFishingMoney = calculateWaterFishing(data); 
    document.getElementById('WaterFishing').innerHTML = WaterFishingMoney;
    localStorage.setItem('cached-WaterFishing', WaterFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateOasisFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 1200; // Squid
    let B6  = 800;  // Sea Walker
    let B7  = 600;  // Sea Guardian
    let B8  = 700;  // Sea Witch
    let B9  = 550;  // Sea Archer
    let B10 = 400;  // Rider of the Deep
    let B11 = 250;  // Catfish
    let B12 = 160;  // Sea Leech
    let B13 = 130;   // Guardian Defender
    let B14 = 88;  // Deep Sea Protector
    let B15 = 18;  // Water Hydra
    let B16 = 10;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 950;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 300;  // Carrot King
    let E8  = 300;  // Oasis Rabbit
    let E9  = 700;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 0; // Magma Slug
    let T6  = 0; // Moogma
    let T7  = 0;  // Lava Leech
    let T8  = 0;  // Pyroclastic Worm
    let T9  = 0;  // Lava Flame
    let T10 = 0;  // Fire Eel
    let T11 = 0;  // Taurus
    let T12 = 0;   // Thunder
    let T13 = 0;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 0;   // Alligator
    let W6  = 0;  // Banshee
    let W7  = 0;  // Bayou Sludge
    let W8  = 0;  // Dumpster Diver
    let W9  = 0;   // Titanoboa
    let W10 = 0;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

   
    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
 // THUNDER
 let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
 let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
 let T103 = 1; // Hunter I
 let T104 = 1; // Blazing Fortune I
 let T105 = 1; // Infection I
 let T106 = 1; // Fishing Experience I
 let T107 = 1; // Fisherman I
 let T108 = 1; // Fishing Speed I
 let T109 = 1; // Double Hook I
 let T110 = 1; // Trophy Hunter I
 let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ7;

    let moneyOasisFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneyOasisFishing}M`; 
    }
    
    function updateOasisFishing(data) {
    const OasisFishingMoney = calculateOasisFishing(data); 
    document.getElementById('OasisFishing').innerHTML = OasisFishingMoney;
    localStorage.setItem('cached-OasisFishing', OasisFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateSquidFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 1200; // Squid
    let B6  = 800;  // Sea Walker
    let B7  = 600;  // Sea Guardian
    let B8  = 700;  // Sea Witch
    let B9  = 550;  // Sea Archer
    let B10 = 400;  // Rider of the Deep
    let B11 = 250;  // Catfish
    let B12 = 160;  // Sea Leech
    let B13 = 130;   // Guardian Defender
    let B14 = 88;  // Deep Sea Protector
    let B15 = 18;  // Water Hydra
    let B16 = 10;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 950;  // Agarimoo
    let E6  = 1100; // Night Squid
    let E7  = 300;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 0; // Magma Slug
    let T6  = 0; // Moogma
    let T7  = 0;  // Lava Leech
    let T8  = 0;  // Pyroclastic Worm
    let T9  = 0;  // Lava Flame
    let T10 = 0;  // Fire Eel
    let T11 = 0;  // Taurus
    let T12 = 0;   // Thunder
    let T13 = 0;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 0;   // Alligator
    let W6  = 0;  // Banshee
    let W7  = 0;  // Bayou Sludge
    let W8  = 0;  // Dumpster Diver
    let W9  = 0;   // Titanoboa
    let W10 = 0;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31)))*2; //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2)))*2; //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
  // THUNDER
  let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
  let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
  let T103 = 1; // Hunter I
  let T104 = 1; // Blazing Fortune I
  let T105 = 1; // Infection I
  let T106 = 1; // Fishing Experience I
  let T107 = 1; // Fisherman I
  let T108 = 1; // Fishing Speed I
  let T109 = 1; // Double Hook I
  let T110 = 1; // Trophy Hunter I
  let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ7;

    let moneySquidFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneySquidFishing}M`; 
    }
    
    function updateSquidFishing(data) {
    const SquidFishingMoney = calculateSquidFishing(data); 
    document.getElementById('SquidFishing').innerHTML = SquidFishingMoney;
    localStorage.setItem('cached-SquidFishing', SquidFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculatePiscaryFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 1200; // Squid
    let B6  = 800;  // Sea Walker
    let B7  = 600;  // Sea Guardian
    let B8  = 700;  // Sea Witch
    let B9  = 550;  // Sea Archer
    let B10 = 400;  // Rider of the Deep
    let B11 = 250;  // Catfish
    let B12 = 160;  // Sea Leech
    let B13 = 130;   // Guardian Defender
    let B14 = 88;  // Deep Sea Protector
    let B15 = 18;  // Water Hydra
    let B16 = 10;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 950;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 300;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 90;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 0; // Magma Slug
    let T6  = 0; // Moogma
    let T7  = 0;  // Lava Leech
    let T8  = 0;  // Pyroclastic Worm
    let T9  = 0;  // Lava Flame
    let T10 = 0;  // Fire Eel
    let T11 = 0;  // Taurus
    let T12 = 0;   // Thunder
    let T13 = 0;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 0;   // Alligator
    let W6  = 0;  // Banshee
    let W7  = 0;  // Bayou Sludge
    let W8  = 0;  // Dumpster Diver
    let W9  = 0;   // Titanoboa
    let W10 = 0;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
 // THUNDER
 let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
 let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
 let T103 = 1; // Hunter I
 let T104 = 1; // Blazing Fortune I
 let T105 = 1; // Infection I
 let T106 = 1; // Fishing Experience I
 let T107 = 1; // Fisherman I
 let T108 = 1; // Fishing Speed I
 let T109 = 1; // Double Hook I
 let T110 = 1; // Trophy Hunter I
 let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ7;

    let moneyPiscaryFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneyPiscaryFishing}M`; 
    }
    
    function updatePiscaryFishing(data) {
    const PiscaryFishingMoney = calculatePiscaryFishing(data); 
    document.getElementById('PiscaryFishing').innerHTML = PiscaryFishingMoney;
    localStorage.setItem('cached-PiscaryFishing', PiscaryFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateWaterWormFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 1200; // Squid
    let B6  = 800;  // Sea Walker
    let B7  = 600;  // Sea Guardian
    let B8  = 700;  // Sea Witch
    let B9  = 550;  // Sea Archer
    let B10 = 400;  // Rider of the Deep
    let B11 = 250;  // Catfish
    let B12 = 160;  // Sea Leech
    let B13 = 130;   // Guardian Defender
    let B14 = 88;  // Deep Sea Protector
    let B15 = 18;  // Water Hydra
    let B16 = 10;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 950;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 300;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 300;  // Water Worm
    let E11 = 300;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 0; // Magma Slug
    let T6  = 0; // Moogma
    let T7  = 0;  // Lava Leech
    let T8  = 0;  // Pyroclastic Worm
    let T9  = 0;  // Lava Flame
    let T10 = 0;  // Fire Eel
    let T11 = 0;  // Taurus
    let T12 = 0;   // Thunder
    let T13 = 0;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 0;   // Alligator
    let W6  = 0;  // Banshee
    let W7  = 0;  // Bayou Sludge
    let W8  = 0;  // Dumpster Diver
    let W9  = 0;   // Titanoboa
    let W10 = 0;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
 // THUNDER
 let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
 let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
 let T103 = 1; // Hunter I
 let T104 = 1; // Blazing Fortune I
 let T105 = 1; // Infection I
 let T106 = 1; // Fishing Experience I
 let T107 = 1; // Fisherman I
 let T108 = 1; // Fishing Speed I
 let T109 = 1; // Double Hook I
 let T110 = 1; // Trophy Hunter I
 let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ7;

    let moneyWaterWormFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneyWaterWormFishing}M`; 
    }
    
    function updateWaterWormFishing(data) {
    const WaterWormFishingMoney = calculateWaterWormFishing(data); 
    document.getElementById('WaterWormFishing').innerHTML = WaterWormFishingMoney;
    localStorage.setItem('cached-WaterWormFishing', WaterWormFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateQuarryFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 1200; // Squid
    let B6  = 800;  // Sea Walker
    let B7  = 600;  // Sea Guardian
    let B8  = 700;  // Sea Witch
    let B9  = 550;  // Sea Archer
    let B10 = 400;  // Rider of the Deep
    let B11 = 250;  // Catfish
    let B12 = 160;  // Sea Leech
    let B13 = 130;   // Guardian Defender
    let B14 = 88;  // Deep Sea Protector
    let B15 = 18;  // Water Hydra
    let B16 = 10;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 950;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 300;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 0; // Magma Slug
    let T6  = 0; // Moogma
    let T7  = 0;  // Lava Leech
    let T8  = 0;  // Pyroclastic Worm
    let T9  = 0;  // Lava Flame
    let T10 = 0;  // Fire Eel
    let T11 = 0;  // Taurus
    let T12 = 0;   // Thunder
    let T13 = 0;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 0;   // Alligator
    let W6  = 0;  // Banshee
    let W7  = 0;  // Bayou Sludge
    let W8  = 0;  // Dumpster Diver
    let W9  = 0;   // Titanoboa
    let W10 = 0;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 385; // Mithril Grubber
    let AC6 = 210; // Medium Mithril Grubber
    let AC7 = 70;  // Large Mithril Grubber
    let AC8 = 35;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
 // THUNDER
 let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
 let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
 let T103 = 1; // Hunter I
 let T104 = 1; // Blazing Fortune I
 let T105 = 1; // Infection I
 let T106 = 1; // Fishing Experience I
 let T107 = 1; // Fisherman I
 let T108 = 1; // Fishing Speed I
 let T109 = 1; // Double Hook I
 let T110 = 1; // Trophy Hunter I
 let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ7;

    let moneyQuarryFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneyQuarryFishing}M`; 
    }
    
    function updateQuarryFishing(data) {
    const QuarryFishingMoney = calculateQuarryFishing(data); 
    document.getElementById('QuarryFishing').innerHTML = QuarryFishingMoney;
    localStorage.setItem('cached-QuarryFishing', QuarryFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateSpookyFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 1200; // Squid
    let B6  = 800;  // Sea Walker
    let B7  = 600;  // Sea Guardian
    let B8  = 700;  // Sea Witch
    let B9  = 550;  // Sea Archer
    let B10 = 400;  // Rider of the Deep
    let B11 = 250*1.25;  // Catfish
    let B12 = 160*1.25;  // Sea Leech
    let B13 = 130*1.25;   // Guardian Defender
    let B14 = 88*1.25;  // Deep Sea Protector
    let B15 = 18*1.25;  // Water Hydra
    let B16 = 10*1.25;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 950;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 0;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight (Sonar + Spooky Hook  + phantom hook + Whale Bait)
    let H5  = 1000*1.25*1.1*2; // Scarecrow
    let H6  = 550*1.25*1.1*2;  // Nightmare
    let H7  = 250*1.25*1.25*1.1*2;  // Werewolf
    let H8  = 90*1.25*1.25*1.1*2;   // Phantom Fisher
    let H9  = 25*1.25*1.25*1.1*2;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 0; // Magma Slug
    let T6  = 0; // Moogma
    let T7  = 0;  // Lava Leech
    let T8  = 0;  // Pyroclastic Worm
    let T9  = 0;  // Lava Flame
    let T10 = 0;  // Fire Eel
    let T11 = 0;  // Taurus
    let T12 = 0;   // Thunder
    let T13 = 0;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 0;   // Alligator
    let W6  = 0;  // Banshee
    let W7  = 0;  // Bayou Sludge
    let W8  = 0;  // Dumpster Diver
    let W9  = 0;   // Titanoboa
    let W10 = 0;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
 // THUNDER
 let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
 let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
 let T103 = 1; // Hunter I
 let T104 = 1; // Blazing Fortune I
 let T105 = 1; // Infection I
 let T106 = 1; // Fishing Experience I
 let T107 = 1; // Fisherman I
 let T108 = 1; // Fishing Speed I
 let T109 = 1; // Double Hook I
 let T110 = 1; // Trophy Hunter I
 let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ15;

    let moneySpookyFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneySpookyFishing}M`; 
    }
    
    function updateSpookyFishing(data) {
    const SpookyFishingMoney = calculateSpookyFishing(data); 
    document.getElementById('SpookyFishing').innerHTML = SpookyFishingMoney;
    localStorage.setItem('cached-SpookyFishing', SpookyFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateWinterFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 1200; // Squid
    let B6  = 800;  // Sea Walker
    let B7  = 600;  // Sea Guardian
    let B8  = 700;  // Sea Witch
    let B9  = 550;  // Sea Archer
    let B10 = 400;  // Rider of the Deep
    let B11 = 250;  // Catfish
    let B12 = 160;  // Sea Leech
    let B13 = 130;   // Guardian Defender
    let B14 = 88;  // Deep Sea Protector
    let B15 = 18;  // Water Hydra
    let B16 = 10;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 950;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 0;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 1100*1.35*1.1*3; // Frozen Steve
    let K6  = 800*1.35*1.1*3;  // Frosty
    let K7  = 50*1.35*1.1*3;   // Grinch
    let K8  = 30*1.35*1.1*3;   // Yeti
    let K9  = 60*1.35*1.1*3;   // Nutcracker
    let K10 = 6*1.35*1.1*3;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 0; // Magma Slug
    let T6  = 0; // Moogma
    let T7  = 0;  // Lava Leech
    let T8  = 0;  // Pyroclastic Worm
    let T9  = 0;  // Lava Flame
    let T10 = 0;  // Fire Eel
    let T11 = 0;  // Taurus
    let T12 = 0;   // Thunder
    let T13 = 0;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 0;   // Alligator
    let W6  = 0;  // Banshee
    let W7  = 0;  // Bayou Sludge
    let W8  = 0;  // Dumpster Diver
    let W9  = 0;   // Titanoboa
    let W10 = 0;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
 // THUNDER
 let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
 let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
 let T103 = 1; // Hunter I
 let T104 = 1; // Blazing Fortune I
 let T105 = 1; // Infection I
 let T106 = 1; // Fishing Experience I
 let T107 = 1; // Fisherman I
 let T108 = 1; // Fishing Speed I
 let T109 = 1; // Double Hook I
 let T110 = 1; // Trophy Hunter I
 let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ16;

    let moneyWinterFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneyWinterFishing}M`; 
    }
    
    function updateWinterFishing(data) {
    const WinterFishingMoney = calculateWinterFishing(data); 
    document.getElementById('WinterFishing').innerHTML = WinterFishingMoney;
    localStorage.setItem('cached-WinterFishing', WinterFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateFestivalFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 1200; // Squid
    let B6  = 800;  // Sea Walker
    let B7  = 600;  // Sea Guardian
    let B8  = 700;  // Sea Witch
    let B9  = 550;  // Sea Archer
    let B10 = 400;  // Rider of the Deep
    let B11 = 250*1.25;  // Catfish
    let B12 = 160*1.25;  // Sea Leech
    let B13 = 130*1.25;   // Guardian Defender
    let B14 = 88*1.25;  // Deep Sea Protector
    let B15 = 18*1.25;  // Water Hydra
    let B16 = 10*1.25;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 950;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 0;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 1100*1.1*1.25*1.2; // Nurse Shark
    let N6 = 550*1.1*1.25*1.2;  // Blue Shark
    let N7 = 300*1.25*1.1*1.25*1.2;  // Tiger Shark
    let N8 = 150*1.25*1.1*1.25*1.2;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 0; // Magma Slug
    let T6  = 0; // Moogma
    let T7  = 0;  // Lava Leech
    let T8  = 0;  // Pyroclastic Worm
    let T9  = 0;  // Lava Flame
    let T10 = 0;  // Fire Eel
    let T11 = 0;  // Taurus
    let T12 = 0;   // Thunder
    let T13 = 0;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 0;   // Alligator
    let W6  = 0;  // Banshee
    let W7  = 0;  // Bayou Sludge
    let W8  = 0;  // Dumpster Diver
    let W9  = 0;   // Titanoboa
    let W10 = 0;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
    // THUNDER
    let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
    let T103 = 1; // Hunter I
    let T104 = 1; // Blazing Fortune I
    let T105 = 1; // Infection I
    let T106 = 1; // Fishing Experience I
    let T107 = 1; // Fisherman I
    let T108 = 1; // Fishing Speed I
    let T109 = 1; // Double Hook I
    let T110 = 1; // Trophy Hunter I
    let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ15;

    let moneyFestivalFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneyFestivalFishing}M`; 
    }
    
    function updateFestivalFishing(data) {
    const FestivalFishingMoney = calculateFestivalFishing(data); 
    document.getElementById('FestivalFishing').innerHTML = FestivalFishingMoney;
    localStorage.setItem('cached-FestivalFishing', FestivalFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBayouFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 1200; // Squid
    let B6  = 800;  // Sea Walker
    let B7  = 600;  // Sea Guardian
    let B8  = 700;  // Sea Witch
    let B9  = 550;  // Sea Archer
    let B10 = 400;  // Rider of the Deep
    let B11 = 250*1.25;  // Catfish
    let B12 = 160*1.25;  // Sea Leech
    let B13 = 130*1.25;   // Guardian Defender
    let B14 = 88*1.25;  // Deep Sea Protector
    let B15 = 18*1.25;  // Water Hydra
    let B16 = 10*1.25;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 950;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 0;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 0; // Magma Slug
    let T6  = 0; // Moogma
    let T7  = 0;  // Lava Leech
    let T8  = 0;  // Pyroclastic Worm
    let T9  = 0;  // Lava Flame
    let T10 = 0;  // Fire Eel
    let T11 = 0;  // Taurus
    let T12 = 0;   // Thunder
    let T13 = 0;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 50*1.25;   // Alligator
    let W6  = 300*1.25;  // Banshee
    let W7  = 100*1.25;  // Bayou Sludge
    let W8  = 500;  // Dumpster Diver
    let W9  = 10*1.25*1.15;   // Titanoboa
    let W10 = 750;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
 // THUNDER
 let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
 let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
 let T103 = 1; // Hunter I
 let T104 = 1; // Blazing Fortune I
 let T105 = 1; // Infection I
 let T106 = 1; // Fishing Experience I
 let T107 = 1; // Fisherman I
 let T108 = 1; // Fishing Speed I
 let T109 = 1; // Double Hook I
 let T110 = 1; // Trophy Hunter I
 let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ15;

    let moneyBayouFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneyBayouFishing}M`; 
    }
    
    function updateBayouFishing(data) {
    const BayouFishingMoney = calculateBayouFishing(data); 
    document.getElementById('BayouFishing').innerHTML = BayouFishingMoney;
    localStorage.setItem('cached-BayouFishing', BayouFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateBayouHotspotFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 1200; // Squid
    let B6  = 800;  // Sea Walker
    let B7  = 600;  // Sea Guardian
    let B8  = 700;  // Sea Witch
    let B9  = 550;  // Sea Archer
    let B10 = 400;  // Rider of the Deep
    let B11 = 250;  // Catfish
    let B12 = 160;  // Sea Leech
    let B13 = 130;   // Guardian Defender
    let B14 = 88;  // Deep Sea Protector
    let B15 = 18;  // Water Hydra
    let B16 = 10;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 950;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 0;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 0; // Magma Slug
    let T6  = 0; // Moogma
    let T7  = 0;  // Lava Leech
    let T8  = 0;  // Pyroclastic Worm
    let T9  = 0;  // Lava Flame
    let T10 = 0;  // Fire Eel
    let T11 = 0;  // Taurus
    let T12 = 0;   // Thunder
    let T13 = 0;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 50;   // Alligator
    let W6  = 300;  // Banshee
    let W7  = 100;  // Bayou Sludge
    let W8  = 500;  // Dumpster Diver
    let W9  = 10*1.15;   // Titanoboa
    let W10 = 750;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 25*1.5;   // Blue Ringed Octopus
    let Z6 = 1000*1.5; // Frog Man
    let Z7 = 250*1.5;  // Snapping Turtle
    let Z8 = 5*1.15*1.5;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
    // THUNDER
    let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
    let T103 = 1; // Hunter I
    let T104 = 1; // Blazing Fortune I
    let T105 = 1; // Infection I
    let T106 = 1; // Fishing Experience I
    let T107 = 1; // Fisherman I
    let T108 = 1; // Fishing Speed I
    let T109 = 1; // Double Hook I
    let T110 = 1; // Trophy Hunter I
    let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ19;

    let moneyBayouHotspotFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneyBayouHotspotFishing}M`; 
    }
    
    function updateBayouHotspotFishing(data) {
    const BayouHotspotFishingMoney = calculateBayouHotspotFishing(data); 
    document.getElementById('BayouHotspotFishing').innerHTML = BayouHotspotFishingMoney;
    localStorage.setItem('cached-BayouHotspotFishing', BayouHotspotFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateFlamingWormFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 0; // Squid
    let B6  = 0;  // Sea Walker
    let B7  = 0;  // Sea Guardian
    let B8  = 0;  // Sea Witch
    let B9  = 0;  // Sea Archer
    let B10 = 0;  // Rider of the Deep
    let B11 = 0;  // Catfish
    let B12 = 0;  // Sea Leech
    let B13 = 0;   // Guardian Defender
    let B14 = 0;  // Deep Sea Protector
    let B15 = 0;  // Water Hydra
    let B16 = 0;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 0;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 0;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 180; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 0; // Magma Slug
    let T6  = 0; // Moogma
    let T7  = 0;  // Lava Leech
    let T8  = 0;  // Pyroclastic Worm
    let T9  = 0;  // Lava Flame
    let T10 = 0;  // Fire Eel
    let T11 = 0;  // Taurus
    let T12 = 0;   // Thunder
    let T13 = 0;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 0;   // Alligator
    let W6  = 0;  // Banshee
    let W7  = 0;  // Bayou Sludge
    let W8  = 0;  // Dumpster Diver
    let W9  = 0;   // Titanoboa
    let W10 = 0;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
    // THUNDER
    let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
    let T103 = 1; // Hunter I
    let T104 = 1; // Blazing Fortune I
    let T105 = 1; // Infection I
    let T106 = 1; // Fishing Experience I
    let T107 = 1; // Fisherman I
    let T108 = 1; // Fishing Speed I
    let T109 = 1; // Double Hook I
    let T110 = 1; // Trophy Hunter I
    let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ6;

    let moneyFlamingWormFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneyFlamingWormFishing}M`; 
    }
    
    function updateFlamingWormFishing(data) {
    const FlamingWormFishingMoney = calculateFlamingWormFishing(data); 
    document.getElementById('FlamingWormFishing').innerHTML = FlamingWormFishingMoney;
    localStorage.setItem('cached-FlamingWormFishing', FlamingWormFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateMagmaCoreFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 0; // Squid
    let B6  = 0;  // Sea Walker
    let B7  = 0;  // Sea Guardian
    let B8  = 0;  // Sea Witch
    let B9  = 0;  // Sea Archer
    let B10 = 0;  // Rider of the Deep
    let B11 = 0;  // Catfish
    let B12 = 0;  // Sea Leech
    let B13 = 0;   // Guardian Defender
    let B14 = 0;  // Deep Sea Protector
    let B15 = 0;  // Water Hydra
    let B16 = 0;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 0;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 0;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 36;  // Lava Blaze
    let Q7 = 36;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 0; // Magma Slug
    let T6  = 0; // Moogma
    let T7  = 0;  // Lava Leech
    let T8  = 0;  // Pyroclastic Worm
    let T9  = 0;  // Lava Flame
    let T10 = 0;  // Fire Eel
    let T11 = 0;  // Taurus
    let T12 = 0;   // Thunder
    let T13 = 0;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 0;   // Alligator
    let W6  = 0;  // Banshee
    let W7  = 0;  // Bayou Sludge
    let W8  = 0;  // Dumpster Diver
    let W9  = 0;   // Titanoboa
    let W10 = 0;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
 // THUNDER
 let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
 let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
 let T103 = 1; // Hunter I
 let T104 = 1; // Blazing Fortune I
 let T105 = 1; // Infection I
 let T106 = 1; // Fishing Experience I
 let T107 = 1; // Fisherman I
 let T108 = 1; // Fishing Speed I
 let T109 = 1; // Double Hook I
 let T110 = 1; // Trophy Hunter I
 let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ6;

    let moneyMagmaCoreFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneyMagmaCoreFishing}M`; 
    }
    
    function updateMagmaCoreFishing(data) {
    const MagmaCoreFishingMoney = calculateMagmaCoreFishing(data); 
    document.getElementById('MagmaCoreFishing').innerHTML = MagmaCoreFishingMoney;
    localStorage.setItem('cached-MagmaCoreFishing', MagmaCoreFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateCrimsonFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 0; // Squid
    let B6  = 0;  // Sea Walker
    let B7  = 0;  // Sea Guardian
    let B8  = 0;  // Sea Witch
    let B9  = 0;  // Sea Archer
    let B10 = 0;  // Rider of the Deep
    let B11 = 0;  // Catfish
    let B12 = 0;  // Sea Leech
    let B13 = 0;   // Guardian Defender
    let B14 = 0;  // Deep Sea Protector
    let B15 = 0;  // Water Hydra
    let B16 = 0;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 0;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 0;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 1600; // Magma Slug
    let T6  = 1200; // Moogma
    let T7  = 600;  // Lava Leech
    let T8  = 400;  // Pyroclastic Worm
    let T9  = 360*1.25;  // Lava Flame
    let T10 = 280*1.25;  // Fire Eel
    let T11 = 160*1.25;  // Taurus
    let T12 = 40*1.25*1.15;   // Thunder
    let T13 = 8*1.25*1.15;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 0; // Fried Chicken
    let T19 = 0;  // Fireproof Witch
    let T20 = 0;   // Fiery Scuttler
    let T21 = 0;    // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 0;   // Alligator
    let W6  = 0;  // Banshee
    let W7  = 0;  // Bayou Sludge
    let W8  = 0;  // Dumpster Diver
    let W9  = 0;   // Titanoboa
    let W10 = 0;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
    // THUNDER
    let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
    let T103 = 1; // Hunter I
    let T104 = 1; // Blazing Fortune I
    let T105 = 1; // Infection I
    let T106 = 1; // Fishing Experience I
    let T107 = 1; // Fisherman I
    let T108 = 1; // Fishing Speed I
    let T109 = 1; // Double Hook I
    let T110 = 1; // Trophy Hunter I
    let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ15;

    let moneyCrimsonFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneyCrimsonFishing}M`; 
    }
    
    function updateCrimsonFishing(data) {
    const CrimsonFishingMoney = calculateCrimsonFishing(data); 
    document.getElementById('CrimsonFishing').innerHTML = CrimsonFishingMoney;
    localStorage.setItem('cached-CrimsonFishing', CrimsonFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateCrimsonHotspotFishing(data) {


    let B1 = 1200; // Catches per hour
    let E1 = 100; // Sea Creature Chance
    let E2 = E1/100; // Sea Creature Chance Multiplier
    let H1 = 5; // Looting
    let H2 = 1+(H1*0.15); // Looting Multiplier
    let K1 = 300; // Magic Find
    let K2 = 1+(K1/100); // Magic Find Multiplier
    let N1 = 9; // Double Hook Chance
    let N2 = 1+(N1/100); // Double Hook Chance Multiplier
    let Q1 = 7; // Luck Enchant
    let Q2 = 1+(Q1*0.05); // Luck Enchant Multiplier
    let T1 = 6; // Caster Enchant
    let T2 = 1-(T1*0.05); // Caster Enchant Multiplier


    // Water Fishing Weight
    let B5  = 0; // Squid
    let B6  = 0;  // Sea Walker
    let B7  = 0;  // Sea Guardian
    let B8  = 0;  // Sea Witch
    let B9  = 0;  // Sea Archer
    let B10 = 0;  // Rider of the Deep
    let B11 = 0;  // Catfish
    let B12 = 0;  // Sea Leech
    let B13 = 0;   // Guardian Defender
    let B14 = 0;  // Deep Sea Protector
    let B15 = 0;  // Water Hydra
    let B16 = 0;   // The Sea Emperor

    // Water Condition Fishing Weight
    let E5  = 0;  // Agarimoo
    let E6  = 0; // Night Squid
    let E7  = 0;  // Carrot King
    let E8  = 0;  // Oasis Rabbit
    let E9  = 0;  // Oasis Sheep
    let E10 = 0;  // Water Worm
    let E11 = 0;  // Poisoned Water Worm
    let E12 = 0;   // Abyssal Miner

    // SPOOKY FISHING Weight
    let H5  = 0; // Scarecrow
    let H6  = 0;  // Nightmare
    let H7  = 0;  // Werewolf
    let H8  = 0;   // Phantom Fisher
    let H9  = 0;   // Grim Reaper
    
    // WINTER Weight
    let K5  = 0; // Frozen Steve
    let K6  = 0;  // Frosty
    let K7  = 0;   // Grinch
    let K8  = 0;   // Yeti
    let K9  = 0;   // Nutcracker
    let K10 = 0;    // Reindrake
    
    // FISHING FESTIVAL Weight
    let N5 = 0; // Nurse Shark
    let N6 = 0;  // Blue Shark
    let N7 = 0;  // Tiger Shark
    let N8 = 0;  // Great White Shark
    
    // CRYSTAL HOLLOW Weight
    let Q5 = 0; // Flaming Worm
    let Q6 = 0;  // Lava Blaze
    let Q7 = 0;  // Lava Pigman
    
    // CRIMSON ISLE Weight
    let T5  = 1600; // Magma Slug
    let T6  = 1200; // Moogma
    let T7  = 600;  // Lava Leech
    let T8  = 400;  // Pyroclastic Worm
    let T9  = 360;  // Lava Flame
    let T10 = 280;  // Fire Eel
    let T11 = 160;  // Taurus
    let T12 = 40*1.15;   // Thunder
    let T13 = 8*1.15;    // Lord Jawbus
    
    // Hotspot creatures Weight 
    let T18 = 1000*1.2*1.5*2; // Fried Chicken
    let T19 = 250*1.2*1.5*2; // Fireproof Witch
    let T20 = 25*1.2*1.5*2; // Fiery Scuttler
    let T21 = 5*1.2*1.5*2*1.15;  // Ragnarok
    
    // BACKWATER BAYOU FISHING Weight
    let W5  = 0;   // Alligator
    let W6  = 0;  // Banshee
    let W7  = 0;  // Bayou Sludge
    let W8  = 0;  // Dumpster Diver
    let W9  = 0;   // Titanoboa
    let W10 = 0;  // Trash Gobbler
    
    // BAYOU HOTSPOT Weight
    let Z5 = 0;   // Blue Ringed Octopus
    let Z6 = 0; // Frog Man
    let Z7 = 0;  // Snapping Turtle
    let Z8 = 0;    // Wiki Tiki
    
    // QUARRY Weight
    let AC5 = 0; // Mithril Grubber
    let AC6 = 0; // Medium Mithril Grubber
    let AC7 = 0;  // Large Mithril Grubber
    let AC8 = 0;  // Bloated Mithril Grubber

    //////TOTAL WEIGHT //////
    let B2 = B5+B6+B7+B8+B9+B10+B11+B12+B13+B14+B15+B16+E5+E6+E7+E8+E9+E10+E11+E12+H5+H6+H7+H8+H9+K5+K6+K7+K8+K9+K10+N5+N6+N7+N8+Q5+Q6+Q7+T5+T6+T7+T8+T9+T10+T11+T12+T13+T18+T19+T20+T21+W5+W6+W7+W8+W9+W10+Z5+Z6+Z7+Z8+AC5+AC6+AC7+AC8; // Total weight


    ////// Sea Creature Chance In Decimal //////
    //Water Fishing
    let C5 = B5/B2;
    let C6 = B6/B2;
    let C7 = B7/B2;
    let C8 = B8/B2;
    let C9 = B9/B2;
    let C10 = B10/B2;
    let C11 = B11/B2;
    let C12 = B12/B2;
    let C13 = B13/B2;
    let C14 = B14/B2;
    let C15 = B15/B2;
    let C16 = B16/B2;
    //Water Condition
    let F5 = E5/B2;
    let F6 = E6/B2;
    let F7 = E7/B2;
    let F8 = E8/B2;
    let F9 = E9/B2;
    let F10 = E10/B2;
    let F11 = E11/B2;
    let F12 = E12/B2;
    //Spooky Fishing
    let I5 = H5/B2;
    let I6 = H6/B2;
    let I7 = H7/B2;
    let I8 = H8/B2;
    let I9 = H9/B2;
    //Winter
    let L5 = K5/B2;
    let L6 = K6/B2;
    let L7 = K7/B2;
    let L8 = K8/B2;
    let L9 = K9/B2;
    let L10 = K10/B2;
    //Fishing Festival
    let O5 = N5/B2;
    let O6 = N6/B2;
    let O7 = N7/B2;
    let O8 = N8/B2;
    //Crystal hollow
    let R5 = Q5/B2;
    let R6 = Q6/B2;
    let R7 = Q7/B2;
    //Crimson
    let U5 = T5/B2;
    let U6 = T6/B2;
    let U7 = T7/B2;
    let U8 = T8/B2;
    let U9 = T9/B2;
    let U10 = T10/B2;
    let U11 = T11/B2;
    let U12 = T12/B2;
    let U13 = T13/B2;
    let U18 = T18/B2;
    let U19 = T19/B2;
    let U20 = T20/B2;
    let U21 = T21/B2;
    //Backwater Bayou Fishing
    let X5 = W5/B2;
    let X6 = W6/B2;
    let X7 = W7/B2;
    let X8 = W8/B2;
    let X9 = W9/B2;
    let X10 = W10/B2;
    //Bayou Hotspot
    let AA5 = Z5/B2;
    let AA6 = Z6/B2;
    let AA7 = Z7/B2;
    let AA8 = Z8/B2;
    //Quarry
    let AD5 = AC5/B2;
    let AD6 = AC6/B2;
    let AD7 = AC7/B2;
    let AD8 = AC8/B2;

    //////Water Fishing//////

    //Squid
    let B30 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let B31 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C30 = 2.5; //Amount of Ink Sac
    let C31 = 1; //Amount of Lily Pad
    let B32 = (B1*E2*N2*C5*((H2*C30*B30)+(H2*C31*B31))); //Money per hour

    //Sea Walker
    let B39 = data["ROTTEN_FLESH"]?.Price || 1; //Rotten Flesh
    let B40 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B41 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let C39 = 6.5; //Amount of Rotten Flesh
    let C40 = 2; //Amount of Raw Fish
    let C41 = 1; //Amount of Lily Pad
    let B42 = (B1*E2*N2*C6*((H2*C39*B39)+(H2*C40*B40)+(H2*C41*B41))); //Money per hour


    //Sea Guardian
    let B49 = data["PRISMARINE_CRYSTALS"]?.Price || 1; //Prismarine Crystals
    let B50 = data["PRISMARINE_SHARD"]?.Price || 1; //Prismarine Shard
    let B51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    
    let C49 = 2.5; //Amount of Prismarine Crystals
    let C50 = 2.5; //Amount of Prismarine Shard
    let C51 = 1.5; //Amount of Lily Pad
    
    let B52 = (B1*E2*N2*C7*((H2*C49*B49)+(H2*C50*B50)+(H2*C51*B51))); //Money per hour
    
    
    //Sea Witch
    let B59 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B60 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B61 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    
    let C59 = 2;    //Amount of Raw Salmon
    let C60 = 1.5;  //Amount of Lily Pad
    let C61 = 0.2;  //Amount of Clownfish
    
    let B62 = (B1*E2*N2*C8*((H2*C59*B59)+(H2*C60*B60)+(H2*C61*B61))); //Money per hour
    
    
    //Sea Archer
    let B69 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B70 = data["BONE"]?.Price || 1; //Bone
    let B71 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B72 = data["ENCHANTED_BONE"]?.Price || 1; //Enchanted Bone
    
    let C69 = 2;     //Amount of Raw Fish
    let C70 = 10.5;  //Amount of Bone
    let C71 = 1;     //Amount of Lily Pad
    let C72 = 0.01;   //Amount of Enchanted Bone
    
    let B73 = (B1*E2*N2*C9*((H2*C69*B69)+(H2*C70*B70)+(H2*C71*B71)+(H2*C72*B72*K2))); //Money per hour
    
    
    //Rider of the Deep
    let B80 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B81 = data["DARK_BAIT"]?.Price || 1; //Dark Bait
    let B82 = data["ENCHANTED_FEATHER"]?.Price || 1; //Enchanted Feather
    let B83 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1; //Enchanted Rotten Flesh
    let B84 = data["SPONGE"]?.Price || 1; //Sponge
    let B85 = data["ENCHANTMENT_MAGNET_6"]?.Price || 1; //Magnet VI
    
    let C80 = 2;     //Amount of Lily Pad
    let C81 = 0.5;   //Amount of Dark Bait
    let C82 = 0.5;   //Amount of Enchanted Feather
    let C83 = 0.5;   //Amount of Enchanted Rotten Flesh
    let C84 = 0.2;   //Amount of Sponge
    let C85 = 0.02;  //Amount of Magnet VI
    
    let B86 = (B1*E2*N2*C10*((H2*C80*B80)+(H2*C81*B81)+(H2*C82*B82)+(H2*C83*B83)+(H2*C84*B84)+(H2*C85*B85*K2))); //Money per hour
    
    
    //Catfish
    let B93 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B94 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B95 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B96 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B97 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B98 = data["SPONGE"]?.Price || 1; //Sponge
    let B99 = data["ENCHANTMENT_FRAIL_6"]?.Price || 1; //Frail VI
    
    let C93 = 10;    //Amount of Raw Salmon
    let C94 = 5;     //Amount of Pufferfish
    let C95 = 2.5;   //Amount of Lily Pad
    let C96 = 2;     //Amount of Clownfish
    let C97 = 20;    //Amount of Raw Fish
    let C98 = 0.2;   //Amount of Sponge
    let C99 = 0.01;  //Amount of Frail VI
    
    let B100 = (B1*E2*N2*C11*((H2*C93*B93)+(H2*C94*B94)+(H2*C95*B95)+(H2*C96*B96)+(H2*C97*B97)+(H2*C98*B98)+(H2*C99*B99*K2))); //Money per hour
    
    
    //Sea Leech
    let B107 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B108 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B109 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B110 = data["SPONGE"]?.Price || 1; //Sponge
    let B111 = data["ENCHANTMENT_SPIKED_HOOK_6"]?.Price || 1; //Spiked Hook VI
    let B112 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //Fishing Exp Boost
    let B113 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C107 = 3.5;    //Amount of Lily Pad
    let C108 = 10;     //Amount of Raw Fish
    let C109 = 2;      //Amount of Clownfish
    let C110 = 0.4;    //Amount of Sponge
    let C111 = 0.02;   //Amount of Spiked Hook VI
    let C112 = 0.0008; //Amount of Fishing Exp Boost
    let C113 = 0.0002;  //Amount of Fishing Exp Boost
    
    let B114 = (B1*E2*N2*C12*((H2*C107*B107)+(H2*C108*B108)+(H2*C109*B109)+(H2*C110*B110)+(H2*C111*B111*K2)+(H2*C112*B112*K2)+(H2*C113*B113*K2))); //Money per hour
    
    
    //Guardian Defender
    let B121 = data["SPONGE"]?.Price || 1; //Sponge
    let B122 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B123 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B124 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B125 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B126 = data["ENCHANTMENT_LURE_6"]?.Price || 1; //Lure VI
    
    let C121 = 1;    //Amount of Sponge
    let C122 = 6.1;  //Amount of Lily Pad
    let C123 = 15;   //Amount of Raw Fish
    let C124 = 0.6;  //Amount of Enchanted Prismarine Shard
    let C125 = 0.5;  //Amount of Enchanted Prismarine Crystals
    let C126 = 0.02; //Amount of Lure VI
    
    let B127 = (B1*E2*N2*C13*((H2*C121*B121)+(H2*C122*B122)+(H2*C123*B123)+(H2*C124*B124)+(H2*C125*B125)+(H2*C126*B126*K2))); //Money per hour
    
    
    //Deep Sea Protector
    let B134 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B135 = data["SPONGE"]?.Price || 1; //Sponge
    let B136 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B137 = data["ENCHANTED_IRON"]?.Price || 1; //Enchanted Iron
    let B138 = data["ENCHANTMENT_ANGLER_6"]?.Price || 1; //Angler VI
    let B139 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C134 = 13.5;   //Amount of Lily Pad
    let C135 = 1;      //Amount of Sponge
    let C136 = 1.5;    //Amount of Clownfish
    let C137 = 2;    //Amount of Enchanted Iron
    let C138 = 0.02;   //Amount of Angler VI
    let C139 = 0.0002; //Amount of Fishing Exp Boost
    
    let B140 = (B1*E2*N2*C14*((H2*C134*B134)+(H2*C135*B135)+(H2*C136*B136)+(H2*C137*B137)+(H2*C138*B138*K2)+(H2*C139*B139*K2))); //Money per hour
    
    
    //Water Hydra
    let B147 = data["RAW_FISH:1"]?.Price || 1; //Raw Salmon
    let B148 = data["RAW_FISH:3"]?.Price || 1; //Pufferfish
    let B149 = data["SPONGE"]?.Price || 1; //Sponge
    let B150 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B151 = data["RAW_FISH:2"]?.Price || 1; //Clownfish
    let B152 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B153 = data["FISH_AFFINITY_TALISMAN"]?.Price || 1; //Fish Affinity Talisman
    let B154 = data["WATER_HYDRA_HEAD"]?.Price || 1; //Water Hydra Head
    let B155 = data["ENCHANTMENT_LUCK_OF_THE_SEA_6"]?.Price || 1; //Luck of the Sea VI
    let B156 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C147 = 4;       //Amount of Raw Salmon
    let C148 = 4;       //Amount of Pufferfish
    let C149 = 10;       //Amount of Sponge
    let C150 = 34;      //Amount of Lily Pad
    let C151 = 4;       //Amount of Clownfish
    let C152 = 40;      //Amount of Raw Fish
    let C153 = 0.6;     //Amount of Fish Affinity Talisman
    let C154 = 0.28;     //Amount of Water Hydra Head
    let C155 = 1.2;    //Amount of Luck of the Sea VI
    let C156 = 0.0008;  //Amount of Fishing Exp Boost
    
    let B157 = (B1*E2*N2*C15*((H2*C147*B147)+(H2*C148*B148)+(H2*C149*B149)+(H2*C150*B150)+(H2*C151*B151)+(H2*C152*B152)+(H2*C153*B153)+(H2*C154*B154*Q2)+(H2*C155*B155)+(H2*C156*B156*K2))); //Money per hour

    // The Sea Emperor
    let B164 = data["SPONGE"]?.Price || 1; //Sponge
    let B165 = data["DIVER_FRAGMENT"]?.Price || 1; //Emperor's Skull
    let B166 = data["RAW_FISH"]?.Price || 1; //Raw Fish
    let B167 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let B168 = data["ENCHANTED_WATER_LILY"]?.Price || 1; //Enchanted Lily Pad
    let B169 = data["ENCHANTED_PRISMARINE_SHARD"]?.Price || 1; //Enchanted Prismarine Shard
    let B170 = data["ENCHANTED_PRISMARINE_CRYSTALS"]?.Price || 1; //Enchanted Prismarine Crystals
    let B171 = data["FLYING_FISH;2"]?.Price || 1; //RARE Flying Fish Pet
    let B172 = data["FLYING_FISH;3"]?.Price || 1; //EPIC Flying Fish Pet
    let B173 = data["FLYING_FISH;4"]?.Price || 1; //LEGENDARY Flying Fish Pet
    let B174 = data["ENCHANTMENT_BLESSING_6"]?.Price || 1; //Blessing VI
    let B175 = data["SHREDDED_LINE"]?.Price || 1; //Shredded Line
    let B176 = data["BOBBIN_SCRIPTURES"]?.Price || 1; //Bobbin' Scriptures
    let B177 = data["PET_ITEM_FISHING_SKILL_BOOST_EPIC"]?.Price || 1; //Fishing Exp Boost
    
    let C164 = 2.5; //Amount of Sponge
    let C165 = 1; //Amount of Emperor's Skull
    let C166 = 16; //Amount of Raw Fish
    let C167 = 32; //Amount of Lily Pad
    let C168 = 1; //Amount of Enchanted Lily Pad
    let C169 = 0.5; //Amount of Enchanted Prismarine Shard
    let C170 = 0.5; //Amount of Enchanted Prismarine Crystals
    let C171 = 0.2; //Amount of RARE Flying Fish Pet
    let C172 = 0.08; //Amount of EPIC Flying Fish Pet
    let C173 = 0.02; //Amount of LEGENDARY Flying Fish Pet
    let C174 = 0.02; //Amount of Blessing VI
    let C175 = 0.02;    //Amount of Shredded Line
    let C176 = 0.0185;    //Amount of Bobbin' Scriptures
    let C177 = 0.0002;    //Amount of Fishing Exp Boost
    
    let B178 = (B1*E2*N2*C16*((H2*C164*B164)+(H2*C165*B165)+(H2*C166*B166)+(H2*C167*B167)+(H2*C168*B168)+(H2*C169*B169)+(H2*C170*B170)+(C171*B171)+(C172*B172)+(C173*B173*K2)+(H2*C174*B174*K2)+(H2*C175*B175*K2)+(H2*C176*B176*K2)+(H2*C177*B177*K2))); //Money per hour

    //////Water Condition Fishing//////

    // Agarimoo
    let E30 = data["RED_MUSHROOM"]?.Price || 1; //Red Mushroom
    let E31 = data["AGARIMOO_TONGUE"]?.Price || 1; //Agarimoo Tongue
    let F30 = 45.5; //Amount of Red Mushroom
    let F31 = 3; //Amount of Agarimoo Tongue
    let E32 = (B1*E2*N2*F5*((H2*F30*E30)+(H2*F31*E31))); //Money per hour
    

    // NIGHT SQUID
    let E39 = data["INK_SACK"]?.Price || 1; //Ink Sac
    let E40 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E41 = 15; //Squid Boots
    let E42 = data["PET_ITEM_FISHING_SKILL_BOOST_UNCOMMON"]?.Price || 1; //UNCOMMON Fishing Exp Boost
    let E43 = data["PET_ITEM_FISHING_SKILL_BOOST_RARE"]?.Price || 1; //RARE Fishing Exp Boost
    
    let F39 = 11.5; //Amount of Ink Sac
    let F40 = 1;  //Amount of Lily Pad
    let F41 = 0.08;  //Amount of Squid Boots
    let F42 = 0.005; //Amount of UNCOMMON Fishing Exp Boost
    let F43 = 0.001;//Amount of RARE Fishing Exp Boost
    
    let E44 = (B1*E2*N2*F6*((H2*F39*E39)+(H2*F40*E40)+(H2*F41*E41)+(H2*F42*E42*K2)+(H2*F43*E43*K2))); //Money per hour
    
    
    
    // CARROT KING
    let E51 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E52 = data["ENCHANTED_CARROT"]?.Price || 1; //Enchanted Carrot
    let E53 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; //Enchanted Rabbit Foot
    let E54 = data["SPONGE"]?.Price || 1; //Sponge
    let E55 = data["RABBIT_HAT"]?.Price || 1; //Rabbit Hat
    let E56 = data["ENCHANTMENT_CASTER_6"]?.Price || 1; //Caster VI Book
    let E57 = data["PET_ITEM_LUCKY_CLOVER_DROP"]?.Price || 1; //Lucky Clover Core
    
    let F51 = 2.50;  //Amount of Lily Pad
    let F52 = 1.00;  //Amount of Enchanted Carrot
    let F53 = 1.00;  //Amount of Enchanted Rabbit Foot
    let F54 = 0.5;  //Amount of Sponge
    let F55 = 0.25;  //Amount of Rabbit Hat
    let F56 = 0.02;  //Amount of Caster VI Book
    let F57 = 0.0066; //Amount of Lucky Clover Core
    
    let E58 = (B1*E2*N2*F7*((H2*F51*E51)+(H2*F52*E52)+(H2*F53*E53)+(H2*F54*E54)+(H2*F55*E55)+(H2*F56*E56*K2)+(H2*F57*E57*K2))); //Money per hour
    
    
    
    // OASIS RABBIT
    let E65 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E66 = data["RABBIT"]?.Price || 1; //Raw Rabbit
    let E67 = data["RABBIT_HIDE"]?.Price || 1; //Rabbit Hide
    let E68 = data["RABBIT_FOOT"]?.Price || 1; //Rabbit's Foot
    let E69 = data["ENCHANTED_RABBIT"]?.Price || 1; //Enchanted Raw Rabbit
    
    let F65 = 1.50; //Amount of Lily Pad
    let F66 = 1.00; //Amount of Raw Rabbit
    let F67 = 0.70; //Amount of Rabbit Hide
    let F68 = 0.70; //Amount of Rabbit's Foot
    let F69 = 0.75; //Amount of Enchanted Raw Rabbit
    
    let E70 = (B1*E2*N2*F8*((H2*F65*E65)+(H2*F66*E66)+(H2*F67*E67)+(H2*F68*E68)+(H2*F69*E69))); //Money per hour
    
    
    
    // OASIS SHEEP
    let E77 = data["MUTTON"]?.Price || 1; //Mutton
    let E78 = data["WATER_LILY"]?.Price || 1; //Lily Pad
    let E79 = 0; //White Wool
    let E80 = data["ENCHANTED_MUTTON"]?.Price || 1; //Enchanted Mutton
    let E81 = data["ENCHANTED_COOKED_MUTTON"]?.Price || 1; //Enchanted Cooked Mutton
    
    let F77 = 1.00;   //Amount of Mutton
    let F78 = 1.50;   //Amount of Lily Pad
    let F79 = 1.00;   //Amount of White Wool
    let F80 = 0.75;   //Amount of Enchanted Mutton
    let F81 = 0.001;  //Amount of Enchanted Cooked Mutton
    
    let E82 = (B1*E2*N2*F9*((H2*F77*E77)+(H2*F78*E78)+(H2*F79*E79)+(H2*F80*E80)+(H2*F81*E81*K2))); //Money per hour
    
    
    
    // WATER WORM
    let E89 = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E90 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E91 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F89 = 15.25; //Amount of Rough Amber Gemstone
    let F90 = 10; //Amount of Hard Stone
    let F91 = 0.15;  //Amount of Worm Membrane
    
    let E92 = (B1*E2*N2*F10*((H2*F89*E89)+(H2*F90*E90)+(H2*F91*E91))); //Money per hour
    
    
    
    // POISONED WATER WORM
    let E99  = data["ROUGH_AMBER_GEM"]?.Price || 1; //Rough Amber Gemstone
    let E100 = data["HARD_STONE"]?.Price || 1; //Hard Stone
    let E101 = data["WORM_MEMBRANE"]?.Price || 1; //Worm Membrane
    
    let F99  = 27.50; //Amount of Rough Amber Gemstone
    let F100 = 10.00; //Amount of Hard Stone
    let F101 = 0.20;  //Amount of Worm Membrane
    
    let E102 = (B1*E2*N2*F11*((H2*F99*E99)+(H2*F100*E100)+(H2*F101*E101))); //Money per hour
    
    
    
    // ABYSSAL MINER
    let E109 = data["ROUGH_AMETHYST_GEM"]?.Price || 1; //Rough Amethyst Gemstone
    let E110 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; //Rough Sapphire Gemstone
    let E111 = data["ROUGH_JADE_GEM"]?.Price || 1; //Rough Jade Gemstone
    let E112 = data["QUARTZ"]?.Price || 1; //Nether Quartz
    let E113 = data["FLAWED_AMETHYST_GEM"]?.Price || 1; //Flawed Amethyst Gemstone
    let E114 = data["FLAWED_SAPPHIRE_GEM"]?.Price || 1; //Flawed Sapphire Gemstone
    let E115 = data["FLAWED_JADE_GEM"]?.Price || 1; //Flawed Jade Gemstone
    let E116 = data["ENCHANTMENT_PISCARY_6"]?.Price || 1; //Piscary VI Book
    
    let F109 = 20; //Amount of Rough Amethyst Gemstone
    let F110 = 20; //Amount of Rough Sapphire Gemstone
    let F111 = 20; //Amount of Rough Jade Gemstone
    let F112 = 10; //Amount of Nether Quartz
    let F113 = 0.2;  //Amount of Flawed Amethyst Gemstone
    let F114 = 0.2;  //Amount of Flawed Sapphire Gemstone
    let F115 = 0.2;  //Amount of Flawed Jade Gemstone
    let F116 = 0.02;  //Amount of Piscary VI Book
    
    let E117 = (B1*E2*N2*F12*((H2*F109*E109)+(H2*F110*E110)+(H2*F111*E111)+(H2*F112*E112)+(H2*F113*E113)+(H2*F114*E114)+(H2*F115*E115)+(H2*F116*E116*K2))); //Money per hour


    //////Spooky Fishing//////

    //Scarecrow
    let H30 = data["WATER_LILY"]?.Price || 1;
    let H31 = data["HAY_BLOCK"]?.Price || 1;
    let H32 = data["GREEN_CANDY"]?.Price || 1;
    let H33 = data["PURPLE_CANDY"]?.Price || 1;

    let I30 = 4;
    let I31 = 2;
    let I32 = 1;
    let I33 = 0.25;

    let H34 = (B1*E2*N2*I5*((H2*I30*H30)+(H2*I31*H31)+(H2*I32*H32)+(H2*I33*H33)));
    
    //Nightmare
    let H41 = data["WATER_LILY"]?.Price || 1;
    let H42 = data["GREEN_CANDY"]?.Price || 1;
    let H43 = data["ENCHANTED_ROTTEN_FLESH"]?.Price || 1;
    let H44 = data["PURPLE_CANDY"]?.Price || 1;
    let H45 = data["LUCKY_HOOF"]?.Price || 1;

    let I41 = 7.2;
    let I42 = 2;
    let I43 = 1;
    let I44 = 0.9;
    let I45 = 0.01;

    let H46 = (B1*E2*N2*I6*((H2*I41*H41)+(H2*I42*H42)+(H2*I43*H43)+(H2*I44*H44)+(H2*I45*H45*K2)));
    
    //Werewolf
    let H53 = data["WATER_LILY"]?.Price || 1;
    let H54 = data["GREEN_CANDY"]?.Price || 1;
    let H55 = data["PURPLE_CANDY"]?.Price || 1;
    let H56 = data["WEREWOLF_SKIN"]?.Price || 1;
    let H57 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I53 = 9.5;
    let I54 = 2;
    let I55 = 1;
    let I56 = 1.1;
    let I57 = 0.001;

    let H58 = (B1*E2*N2*I7*((H2*I53*H53)+(H2*I54*H54)+(H2*I55*H55)+(H2*I56*H56)+(H2*I57*H57*K2)));
    
    //Phantom Fisher
    let H65 = data["PURPLE_CANDY"]?.Price || 1;
    let H66 = data["WATER_LILY"]?.Price || 1;
    let H67 = data["GREEN_CANDY"]?.Price || 1;
    let H68 = data["PHANTOM_HOOK"]?.Price || 1;
    let H69 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I65 = 2.5;
    let I66 = 19;
    let I67 = 5;
    let I68 = 0.01;
    let I69 = 0.01;

    let H70 = (B1*E2*N2*I8*((H2*I65*H65)+(H2*I66*H66)+(H2*I67*H67)+(H2*I68*H68*K2)+(H2*I69*H69*K2)));
    
    //Grim Reaper
    let H77 = data["WATER_LILY"]?.Price || 1;
    let H78 = data["GREEN_CANDY"]?.Price || 1;
    let H79 = data["PURPLE_CANDY"]?.Price || 1;
    let H80 = data["SPONGE"]?.Price || 1;
    let H81 = data["SOUL_FRAGMENT"]?.Price || 1;
    let H82 = data["PET_ITEM_VAMPIRE_FANG"]?.Price || 1;
    let H83 = data["BOBBIN_SCRIPTURES"]?.Price || 1;
    let H84 = data["DEEP_SEA_ORB"]?.Price || 1;

    let I77 = 38;
    let I78 = 7;
    let I79 = 4;
    let I80 = 3;
    let I81 = 1;
    let I82 = 0.11;
    let I83 = 0.0185;
    let I84 = 0.01;

    let H85 = (B1*E2*N2*I9*((H2*I77*H77)+(H2*I78*H78)+(H2*I79*H79)+(H2*I80*H80)+(I81*H81)+(H2*I82*H82)+(H2*I83*H83*K2)+(H2*I84*H84*K2)));
    
    //////Winter Fishing//////

    // FROZEN STEVE
    let K30 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K31 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let K32 = data["ICE"]?.Price || 1; // Ice
    let K33 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K34 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K35 = data["RAW_FISH:3"]?.Price || 1; // Pufferfish
    let K36 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K37 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    let K38 = data["ICY_SINKER"]?.Price || 1; // Icy Sinker
    
    let L30 = 2;     // Amount of Raw Fish
    let L31 = 3;     // Amount of Raw Salmon
    let L32 = 2.5;   // Amount of Ice
    let L33 = 1;     // Amount of Hunk Of Ice
    let L34 = 1;     // Amount of Lily Pad
    let L35 = 0.5;   // Amount of Pufferfish
    let L36 = 0.25;  // Amount of Ice Essence
    let L37 = 0.1;   // Amount of White Gift
    let L38 = 0.04;  // Amount of Icy Sinker
    
    let K39 = (B1*E2*N2*L5*((H2*L30*K30)+(H2*L31*K31)+(H2*L32*K32)+(H2*L33*K33)+(H2*L34*K34)+(H2*L35*K35)+(L36*K36)+(H2*L37*K37)+(H2*L38*K38*K2)));      // Money per hour (Frozen Steve)
    
    //FROSTY
    let K46 = data["SNOW_BLOCK"]?.Price || 1; // Snow Block
    let K47 = data["ICE"]?.Price || 1; // Ice
    let K48 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K49 = data["ICE_HUNK"]?.Price || 1; // Hunk Of Ice
    let K50 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K51 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K52 = data["SPONGE"]?.Price || 1; // Sponge
    let K53 = data["CARROT_ITEM"]?.Price || 1; // Carrot
    let K54 = data["WHITE_GIFT"]?.Price || 1; // White Gift
    
    let L46 = 8;     // Amount of Snow Block
    let L47 = 4;     // Amount of Ice
    let L48 = 2;     // Amount of Raw Fish
    let L49 = 2;     // Amount of Hunk Of Ice
    let L50 = 2;     // Amount of Lily Pad
    let L51 = 2;     // Amount of Ice Essence
    let L52 = 1;     // Amount of Sponge
    let L53 = 1;     // Amount of Carrot
    let L54 = 0.4;   // Amount of White Gift
    
    let K55 = (B1*E2*N2*L6*((H2*L46*K46)+(H2*L47*K47)+(H2*L48*K48)+(H2*L49*K49)+(H2*L50*K50)+(L51*K51)+(H2*L52*K52)+(H2*L53*K53)+(H2*L54*K54)));      // Money per hour (Frosty)
    
    
    //GRINCH
    let K62 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    
    let L62 = 4;     // Amount of Ice Essence
    
    let K63 = (B1*E2*N2*L7*((L62*K62)));      // Money per hour (Grinch)
    
    
    //YETI
    let K70 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let K71 = data["ICE"]?.Price || 1; // Ice
    let K72 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let K73 = data["ESSENCE_ICE"]?.Price || 1; // Ice Essence
    let K74 = data["SPONGE"]?.Price || 1; // Sponge
    let K75 = data["BLUE_ICE_HUNK"]?.Price || 1; // Hunk Of Blue Ice
    let K76 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K77 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K78 = data["ENCHANTED_PACKED_ICE"]?.Price || 1; // Enchanted Packed Ice
    let K79 = data["BABY_YETI;3"]?.Price || 1; // EPIC Baby Yeti Pet
    let K80 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let K81 = data["HILT_OF_TRUE_ICE"]?.Price || 1; // Hilt Of True Ice
    let K82 = data["BABY_YETI;4"]?.Price || 1; // LEGENDARY Baby Yeti Pet
    
    let L70 = 38;    // Amount of Lily Pad
    let L71 = 20;    // Amount of Ice
    let L72 = 20;    // Amount of Raw Fish
    let L73 = 10;    // Amount of Ice Essence
    let L74 = 3;     // Amount of Sponge
    let L75 = 3.5;   // Amount of Hunk Of Blue Ice
    let L76 = 1;     // Amount of Red Gift
    let L77 = 1;     // Amount of Enchanted Lily Pad
    let L78 = 0.5;   // Amount of Enchanted Packed Ice
    let L79 = 0.03;  // Amount of EPIC Baby Yeti Pet
    let L80 = 0.018; // Amount of Bobbin' Scriptures
    let L81 = 0.015; // Amount of Hilt Of True Ice
    let L82 = 0.008; // Amount of LEGENDARY Baby Yeti Pet
    
    let K83 = (B1*E2*N2*L8*((H2*L70*K70)+(H2*L71*K71)+(H2*L72*K72)+(L73*K73)+(H2*L74*K74)+(H2*L75*K75)+(H2*L76*K76)+(H2*L77*K77)+(H2*L78*K78)+(L79*K79*K2)+(H2*L80*K80*K2)+(H2*L81*K81*K2)+(H2*L82*K82)));      // Money per hour (Yeti)
    
    
    //NUTCRACKER
    let K90 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let K91 = data["RED_GIFT"]?.Price || 1; // Red Gift
    let K92 = ((data["NUTCRACKER_CHESTPLATE"]?.Price || 1)-(data["SNOW_SUIT_CHESTPLATE"]?.Price || 1))/24; // Walnut
    let K93 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    
    let L90 = 2;     // Amount of Enchanted Lily Pad
    let L91 = 2;     // Amount of Red Gift
    let L92 = 1;     // Amount of Walnut
    let L93 = 100;   // Amount of Lily Pad
    
    let K94 = (B1*E2*N2*L9*((H2*L90*K90)+(H2*L91*K91)+(H2*L92*K92)+(H2*L93*K93)));      // Money per hour (Nutcracker)
    
    
    //REINDRAKE
    let K101 = data["ENCHANTMENT_PROSPERITY_1"]?.Price || 1; // Prosperity I Book
    let L101 = 1;    // Amount of Prosperity I Book
    let K102 = (B1*E2*N2*L10*((L101*K101)));     // Money per hour (Reindrake)


    
    ////// Fetstival Fishing //////

    // NURSE SHARK
    let N30 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N31 = data["NURSE_SHARK_TOOTH"]?.Price || 1;    // Nurse Shark Tooth
    
    let O30 = 2;      // Amount of Shark Fin
    let O31 = 0.1;    // Amount of Nurse Shark Tooth
    
    let N32 = (B1*E2*N2*O5*((H2*O30*N30)+(H2*O31*N31)));       // Money per hour (Nurse Shark)
    
    
    // BLUE SHARK
    let N40 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N41 = data["BLUE_SHARK_TOOTH"]?.Price || 1;     // Blue Shark Tooth
    
    let O40 = 4;      // Amount of Shark Fin
    let O41 = 0.1;    // Amount of Blue Shark Tooth
    
    let N42 = (B1*E2*N2*O6*((H2*O40*N40)+(H2*O41*N41)));       // Money per hour (Blue Shark)
    
    
    // TIGER SHARK
    let N50 = data["SHARK_FIN"]?.Price || 1;            // Shark Fin
    let N51 = data["TIGER_SHARK_TOOTH"]?.Price || 1;    // Tiger Shark Tooth
    let N52 = data["MEGALODON;3"]?.Price || 1;   // EPIC Megalodon Pet
    
    let O50 = 8;       // Amount of Shark Fin
    let O51 = 0.1;     // Amount of Tiger Shark Tooth
    let O52 = 0.01;    // Amount of EPIC Megalodon Pet
    
    let N53 = (B1*E2*N2*O7*((H2*O50*N50)+(H2*O51*N51)+(O52*N52*K2)));        // Money per hour (Tiger Shark)
    
    
    // GREAT WHITE SHARK
    let N61 = data["SHARK_FIN"]?.Price || 1;                // Shark Fin
    let N62 = data["GREAT_WHITE_SHARK_TOOTH"]?.Price || 1;  // Great White Shark Tooth
    let N63 = data["MEGALODON;4"]?.Price || 1;  // LEGENDARY Megalodon Pet
    
    let O61 = 16;     // Amount of Shark Fin
    let O62 = 0.1;    // Amount of Great White Shark Tooth
    let O63 = 0.01;   // Amount of LEGENDARY Megalodon Pet
    
    let N64 = (B1*E2*N2*O8*((H2*O61*N61)+(H2*O62*N62)+(O63*N63*K2)));       // Money per hour (Great White Shark)

    ////// Crystal Hollow Fishing //////

    // Flaming Worm
    let Q30 = data["ROUGH_SAPPHIRE_GEM"]?.Price || 1; // Rough Sapphire Gemstone
    let Q31 = data["WORM_MEMBRANE"]?.Price || 1; // Worm Membrane
    let Q32 = 0; // Eternal Flame Ring
    
    let R30 = 27.5;   // Amount of Rough Sapphire Gemstone
    let R31 = 0.25;   // Amount of Worm Membrane
    let R32 = 0;      // Amount of Eternal Flame Ring
    
    let Q33 = (B1*E2*N2*R5*((H2*R30*Q30)+(H2*R31*Q31)));       // Money per hour for Flaming Worm
    
    // Lava Blaze
    let Q40 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q41 = data["BLAZE_ROD"]?.Price || 1; // Blaze Rod
    let Q42 = data["BLAZEN_SPHERE"]?.Price || 1; // Blazen Sphere
    let Q43 = 0; // Eternal Flame Ring
    let Q44 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R40 = 27.5;   // Amount of Rough Topaz Gemstone
    let R41 = 5;      // Amount of Blaze Rod
    let R42 = 0.01;   // Amount of Blazen Sphere
    let R43 = 0;      // Amount of Eternal Flame Ring
    let R44 = 0.005;  // Amount of Magma Core
    
    let Q45 = (B1*E2*N2*R6*((H2*R40*Q40)+(H2*R41*Q41)+(H2*R42*Q42*K2)+(H2*R44*Q44*K2)));       // Money per hour for Lava Blaze
    
    // Lava Pigman
    let Q52 = data["ROUGH_TOPAZ_GEM"]?.Price || 1; // Rough Topaz Gemstone
    let Q53 = 0; // Eternal Flame Ring
    let Q54 = data["MAGMA_CORE"]?.Price || 1; // Magma Core
    
    let R52 = 27.5;   // Amount of Rough Topaz Gemstone
    let R53 = 0;      // Amount of Eternal Flame Ring
    let R54 = 0.005;  // Amount of Magma Core
    
    let Q55 = (B1*E2*N2*R7*((H2*R52*Q52)+(H2*R54*Q54*K2)));       // Money per hour for Lava Pigman

    ////// Crimson Fishing //////

    // MAGMA SLUG
    let T30 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T31 = data["LUMP_OF_MAGMA"]?.Price || 1; // Lump Of Magma
    let T32 = (data["ESSENCE_CRIMSON"]?.Price || 1)*15; // Slug Boots
    
    let U30 = 5;     // Amount of Magmafish
    let U31 = 1.5;   // Amount of Lump Of Magma
    let U32 = 0.02;  // Amount of Slug Boots
    
    let T33 = (B1*E2*N2*U5*((H2*U30*T30)+(H2*U31*T31)+(H2*U32*T32*K2*Q2)));      // Money per hour (Magma Slug)
    
    
    // MOOGMA
    let T40 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T41 = data["MOOGMA_PELT"]?.Price || 1; // Moogma Pelt
    let T42 = (data["ESSENCE_CRIMSON"]?.Price || 1)*20; // Moogma Leggings
    
    let U40 = 8;     // Amount of Magmafish
    let U41 = 1.5;   // Amount of Moogma Pelt
    let U42 = 0.02;  // Amount of Moogma Leggings
    
    let T43 = (B1*E2*N2*U6*((H2*U40*T40)+(H2*U41*T41)+(H2*U42*T42*K2*Q2)));      // Money per hour (Moogma)
    
    
    // LAVA LEECH
    let T50 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T51 = data["CUP_OF_BLOOD"]?.Price || 1; // Cup Of Blood
    let T52 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Blade Of The Volcano
    let T53 = data["PITCHIN_KOI"]?.Price || 1; // Pitchin' Koi
    
    let U50 = 20;    // Amount of Magmafish
    let U51 = 1;     // Amount of Cup Of Blood
    let U52 = 0.05;  // Amount of Blade Of The Volcano
    let U53 = 0.004; // Amount of Pitchin' Koi
    
    let T54 = (B1*E2*N2*U7*((H2*U50*T50)+(H2*U51*T51)+(H2*U52*T52*K2)+(H2*U53*T53*K2)));      // Money per hour (Lava Leech)
    
    
    // PYROCLASTIC WORM
    let T61 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T62 = data["PYROCLASTIC_SCALE"]?.Price || 1; // Pyroclastic Scale
    let T63 = data["ENCHANTMENT_CHARM_1"]?.Price || 1; // Charm I Book
    
    let U61 = 10;    // Amount of Magmafish
    let U62 = 1;     // Amount of Pyroclastic Scale
    let U63 = 0.01;  // Amount of Charm I Book
    
    let T64 = (B1*E2*N2*U8*((H2*U61*T61)+(H2*U62*T62)+(H2*U63*T63*K2)));      // Money per hour (Pyroclastic Worm)
    
    
    // LAVA FLAME
    let T71 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T72 = data["FLAMING_HEART"]?.Price || 1; // Flaming Heart
    let T73 = (data["ESSENCE_CRIMSON"]?.Price || 1)*25; // Flaming Chestplate
    
    let U71 = 40;    // Amount of Magmafish
    let U72 = 1;     // Amount of Flaming Heart
    let U73 = 0.02;  // Amount of Flaming Chestplate
    
    let T74 = (B1*E2*N2*U9*((H2*U71*T71)+(H2*U72*T72)+(H2*U73*T73*K2*Q2)));      // Money per hour (Lava Flame)
    
    
    // FIRE EEL
    let T81 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T82 = data["ORB_OF_ENERGY"]?.Price || 1; // Orb Of Energy
    let T83 = (data["ESSENCE_CRIMSON"]?.Price || 1)*10; // Staff Of The Volcano
    
    let U81 = 50;    // Amount of Magmafish
    let U82 = 1;     // Amount of Orb Of Energy
    let U83 = 0.05;  // Amount of Staff Of The Volcano
    
    let T84 = (B1*E2*N2*U10*((H2*U81*T81)+(H2*U82*T82)+(H2*U83*T83*K2)));      // Money per hour (Fire Eel)
    
    
    // TAURUS
    let T91 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T92 = data["HORN_OF_TAURUS"]?.Price || 1; // Horn Of Taurus
    let T93 = (data["ESSENCE_CRIMSON"]?.Price || 1)*30; // Taurus Helmet
    
    let U91 = 1;     // Amount of Silver Magmafish
    let U92 = 1;     // Amount of Horn Of Taurus
    let U93 = 0.02;  // Amount of Taurus Helmet
    
    let T94 = (B1*E2*N2*U11*((H2*U91*T91)+(H2*U92*T92)+(H2*U93*T93*K2*Q2)));      // Money per hour (Taurus)
    
    
 // THUNDER
 let T101 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
 let T102 = data["THUNDER_SHARDS"]?.Price || 1; // Thunder Shards
 let T103 = 1; // Hunter I
 let T104 = 1; // Blazing Fortune I
 let T105 = 1; // Infection I
 let T106 = 1; // Fishing Experience I
 let T107 = 1; // Fisherman I
 let T108 = 1; // Fishing Speed I
 let T109 = 1; // Double Hook I
 let T110 = 1; // Trophy Hunter I
 let T111 = data["ENCHANTMENT_ULTIMATE_FLASH_1"]?.Price || 1; // Flash I Book
    
    let U101 = 10;     // Amount of Silver Magmafish
    let U102 = 1;      // Amount of Thunder Shards
    let U103 = 0.02;   // Amount of Hunter I
    let U104 = 0.02;   // Amount of Blazing Fortune I
    let U105 = 0.02;   // Amount of Infection I
    let U106 = 0.02;   // Amount of Fishing Experience I
    let U107 = 0.02;   // Amount of Fisherman I
    let U108 = 0.02;   // Amount of Fishing Speed I
    let U109 = 0.02;   // Amount of Double Hook I
    let U110 = 0.02;   // Amount of Trophy Hunter I
    let U111 = 0.015;  // Amount of Flash I Book
    
    let T112 = (B1*E2*N2*U12*((H2*U101*T101)+(U102*T102)+(H2*U103*T103*K2)+(H2*U104*T104*K2)+(H2*U105*T105*K2)+(H2*U106*T106*K2)+(H2*U107*T107*K2)+(H2*U108*T108*K2)+(H2*U109*T109*K2)+(H2*U110*T110*K2)+(H2*U111*T111*K2)));       // Money per hour (Thunder)
    
    
    // LORD JAWBUS
    let T119 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T120 = data["MAGMA_LORD_FRAGMENT"]?.Price || 1; // Magma Lord Fragment
    let T121 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T122 = data["ATTRIBUTE_SHARD_HUNTER_I_"]?.Price || 1; // Hunter I
    let T123 = data["ATTRIBUTE_SHARD_BLAZING_FORTUNE_I_"]?.Price || 1; // Blazing Fortune I
    let T124 = data["ATTRIBUTE_SHARD_INFECTION_I_"]?.Price || 1; // Infection I
    let T125 = data["ATTRIBUTE_SHARD_FISHING_EXPERIENCE_I_"]?.Price || 1; // Fishing Experience I
    let T126 = data["ATTRIBUTE_SHARD_FISHERMAN_I_"]?.Price || 1; // Fisherman I
    let T127 = data["ATTRIBUTE_SHARD_FISHING_SPEED_I_"]?.Price || 1; // Fishing Speed I
    let T128 = data["ATTRIBUTE_DOUBLE_HOOK_I_"]?.Price || 1; // Double Hook I
    let T129 = data["ATTRIBUTE_TROPHY_HUNTER_I_"]?.Price || 1; // Trophy Hunter I
    let T130 = data["RADIOACTIVE_VIAL"]?.Price || 1; // Radioactive Vial
    
    let U119 = 25;     // Amount of Silver Magmafish
    let U120 = 1;      // Amount of Magma Lord Fragment
    let U121 = 0.04;   // Amount of Bobbin' Scriptures
    let U122 = 0.02;   // Amount of Hunter I
    let U123 = 0.02;   // Amount of Blazing Fortune I
    let U124 = 0.02;   // Amount of Infection I
    let U125 = 0.02;   // Amount of Fishing Experience I
    let U126 = 0.02;   // Amount of Fisherman I
    let U127 = 0.02;   // Amount of Fishing Speed I
    let U128 = 0.02;   // Amount of Double Hook I
    let U129 = 0.02;   // Amount of Trophy Hunter I
    let U130 = 0.005;  // Amount of Radioactive Vial
    
    let T131 = (B1*E2*N2*U13*((H2*U119*T119)+(U120*T120)+(H2*U121*T121*K2)+(H2*U122*T122*K2)+(H2*U123*T123*K2)+(H2*U124*T124*K2)+(H2*U125*T125*K2)+(H2*U126*T126*K2)+(H2*U127*T127*K2)+(H2*U128*T128*K2)+(H2*U129*T129*K2)+(H2*U130*T130*K2)));       // Money per hour (Lord Jawbus)
    
    
    // FIERY SCUTTLER
    let T138 = data["ENCHANTED_RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let T139 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let T140 = data["SCORCHED_CRAB_STICK"]?.Price || 1; // Scorched Crab Stick
    let T141 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T142 = data["ENCHANTED_BLAZE_ROD"]?.Price || 1; // Enchanted Blaze Rod
    let T143 = data["SEVERED_PINCER"]?.Price || 1; // Severed Pincer
    let T144 = data["SCUTTLER_SHELL"]?.Price || 1; // Scuttler Shell
    
    let U138 = 8;       // Amount of Enchanted Raw Fish
    let U139 = 8;       // Amount of Enchanted Raw Salmon
    let U140 = 1;       // Amount of Scorched Crab Stick
    let U141 = 12;      // Amount of Silver Magmafish
    let U142 = 0.05;    // Amount of Enchanted Blaze Rod
    let U143 = 0.002;   // Amount of Severed Pincer
    let U144 = 0.001;   // Amount of Scuttler Shell
    
    let T145 = (B1*E2*N2*U20*((H2*U138*T138)+(H2*U139*T139)+(H2*U140*T140)+(H2*U141*T141)+(H2*U142*T142)+(H2*U143*T143*K2)+(H2*U144*T144*K2)));        // Money per hour (Fiery Scuttler)
    
    
    // RAGNAROK
    let T152 = data["MAGMA_FISH_SILVER"]?.Price || 1; // Silver Magmafish
    let T153 = data["ENCHANTED_COAL"]?.Price || 1; // Enchanted Coal
    let T154 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let T155 = data["CHAIN_END_TIMES"]?.Price || 1; // Chain Of The End Times
    let T156 = data["BRIMSTONE_HANDLE"]?.Price || 1; // Brimstone Handle
    let T157 = data["BURNT_TEXTS"]?.Price || 1; // Burnt Texts
    
    let U152 = 32;     // Amount of Silver Magmafish
    let U153 = 32;     // Amount of Enchanted Coal
    let U154 = 0.045;  // Amount of Bobbin' Scriptures
    let U155 = 0.025;  // Amount of Chain Of The End Times
    let U156 = 0.02;   // Amount of Brimstone Handle
    let U157 = 0.01;   // Amount of Burnt Texts
    
    let T158 = (B1*E2*N2*U21*((H2*U152*T152)+(H2*U153*T153)+(H2*U154*T154*K2)+(H2*U155*T155*K2)+(H2*U156*T156*K2)+(H2*U157*T157*K2)));       // Money per hour (Ragnarok)
    
    
    // FRIED CHICKEN 
    let T165 = data["RAW_CHICKEN"]?.Price || 1; // Raw Chicken
    let T166 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T167 = data["FRIED_FEATHER"]?.Price || 1; // Fried Feather
    let T168 = data["ENCHANTED_RAW_CHICKEN"]?.Price || 1; // Enchanted Raw Chicken
    
    let U165 = 2.5;    // Amount of Raw Chicken
    let U166 = 1;      // Amount of Magmafish
    let U167 = 0.5;    // Amount of Fried Feather
    let U168 = 0.04;   // Amount of Enchanted Raw Chicken
    
    let T169 = (B1*E2*N2*U18*((H2*U165*T165)+(H2*U166*T166)+(H2*U167*T167)+(H2*U168*T168*K2)));       // Money per hour (Fried Chicken)
    
    
    // FIREPROOF WITCH 
    let T176 = data["MAGMA_FISH"]?.Price || 1; // Magmafish
    let T177 = data["ENCHANTED_GLOWSTONE"]?.Price || 1; // Enchanted Glowstone
    let T178 = data["SINGED_POWDER"]?.Price || 1; // Singed Powder
    let T179 = data["ENCHANTMENT_FIRE_PROTECTION_6"]?.Price || 1; // Fire Protection VI
    
    let U176 = 60;     // Amount of Magmafish
    let U177 = 0.5;    // Amount of Enchanted Glowstone
    let U178 = 0.025;  // Amount of Singed Powder
    let U179 = 0.0001; // Amount of Fire Protection VI
    
    let T180 = (B1*E2*N2*U19*((H2*U176*T176)+(H2*U177*T177)+(H2*U178*T178*K2)+(H2*U179*T179*K2)));       // Money per hour (Fireproof Witch)

    ////// Backwater Bayou Fishing //////

    // ALLIGATOR
    let W30 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W31 = data["RABBIT"]?.Price || 1; // Raw Rabbit
    let W32 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W33 = data["ENCHANTED_RABBIT_FOOT"]?.Price || 1; // Enchanted Rabbit Foot
    let W34 = data["ALLIGATOR_SKIN"]?.Price || 1; // Alligator Skin
    let W35 = data["CLAY_BALL"]?.Price || 1; // Clay
    
    let X30 = 20; // Amount of Lily Pad
    let X31 = 10; // Amount of Raw Rabbit
    let X32 = 16; // Amount of Raw Fish
    let X33 = 1;  // Amount of Enchanted Rabbit Foot
    let X34 = 1;  // Amount of Alligator Skin
    let X35 = 20; // Amount of Clay
    
    let W36 = (B1*E2*N2*X5*((H2*X30*W30)+(H2*X31*W31)+(H2*X32*W32)+(H2*X33*W33)+(H2*X34*W34)+(H2*X35*W35))); // Money per hour (Alligator)
    
    // BANSHEE
    let W43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W44 = data["RAW_FISH:1"]?.Price || 1; // Raw Salmon
    let W45 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    let W46 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W47 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W48 = data["TORN_CLOTH"]?.Price || 1; // Torn Cloth
    let W49 = data["CALCIFIED_HEART"]?.Price || 1; // Calcified Heart
    
    let X43 = 5;       // Amount of Lily Pad
    let X44 = 5;       // Amount of Raw Salmon
    let X45 = 2.5;     // Amount of Clownfish
    let X46 = 5;       // Amount of Clay
    let X47 = 0.045;   // Amount of Enchanted Clay
    let X48 = 0.045;   // Amount of Torn Cloth
    let X49 = 0.01;    // Amount of Calcified Heart
    
    let W50 = (B1*E2*N2*X6*((H2*X43*W43)+(H2*X44*W44)+(H2*X45*W45)+(H2*X46*W46)+(H2*X47*W47*K2)+(H2*X48*W48*K2)+(H2*X49*W49*K2))); // Money per hour (Banshee)
    
    // BAYOU SLUDGE
    let W57 = data["SLIME_BALL"]?.Price || 1; // Slimeball
    let W58 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W59 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W60 = data["ENCHANTED_SLIME_BALL"]?.Price || 1; // Enchanted Slimeball
    let W61 = data["POISON_SAMPLE"]?.Price || 1; // Poison Sample
    let W62 = data["ENCHANTMENT_RESPITE_1"]?.Price || 1; // Respite I
    let W63 = data["ENCHANTED_SLIME_BLOCK"]?.Price || 1; // Enchanted Slime Block
    
    let X57 = 6;       // Amount of Slimeball
    let X58 = 6;       // Amount of Lily Pad
    let X59 = 6;       // Amount of Clay
    let X60 = 0.045;   // Amount of Enchanted Slimeball
    let X61 = 0.01;    // Amount of Poison Sample
    let X62 = 0.01;    // Amount of Respite I
    let X63 = 0.005;   // Amount of Enchanted Slime Block
    
    let W64 = (B1*E2*N2*X7*((H2*X57*W57)+(H2*X58*W58)+(H2*X59*W59)+(H2*X60*W60*K2)+(H2*X61*W61*K2)+(H2*X62*W62*K2)+(H2*X63*W63*K2))); // Money per hour (Bayou Sludge)
    

    // DUMPSTER DIVER 
    let W71 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let W72 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let W73 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W74 = data["SPONGE"]?.Price || 1; // Sponge
    let W75 = data["BRONZE_BOWL"]?.Price || 1; // Bronze Bowl
    let W76 = data["OVERFLOWING_TRASH_CAN"]?.Price || 1; // Overflowing Trash Can
    
    let X71 = 3;      // Amount of Raw Fish
    let X72 = 3;      // Amount of Lily Pad
    let X73 = 3;      // Amount of Clay
    let X74 = 0.5;    // Amount of Sponge
    let X75 = 0.045;  // Amount of Bronze Bowl
    let X76 = 0.02;   // Amount of Overflowing Trash Can
    
    let W77 = (B1*E2*N2*X8*((H2*X71*W71)+(H2*X72*W72)+(H2*X73*W73)+(H2*X74*W74)+(H2*X75*W75*K2)+(H2*X76*W76*K2))); // Money per hour (Dumpster Diver)

    // TITANOBOA 
    let W84 = data["ENCHANTED_CLAY_BALL"]?.Price || 1; // Enchanted Clay
    let W85 = data["RAW_FISH:3"]?.Price || 1; // Enchanted Pufferfish
    let W86 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let W87 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let W88 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let W89 = data["ENCHANTED_CLAY_BLOCK"]?.Price || 1; // Enchanted Clay Block
    let W90 = data["TITANOBOA_SHED"]?.Price || 1; // Titanoboa Shed
    
    let X84 = 2;      // Amount of Enchanted Clay
    let X85 = 1;      // Amount of Enchanted Pufferfish
    let X86 = 1;      // Amount of Enchanted Raw Salmon
    let X87 = 1;      // Amount of Enchanted Raw Fish
    let X88 = 2;      // Amount of Enchanted Lily Pad
    let X89 = 0.005;  // Amount of Enchanted Clay Block
    let X90 = 0.002;  // Amount of Titanoboa Shed
    
    let W91 = (B1*E2*N2*X9*((H2*X84*W84)+(H2*X85*W85)+(H2*X86*W86)+(H2*X87*W87)+(H2*X88*W88)+(H2*X89*W89*K2)+(H2*X90*W90*K2))); // Money per hour (Titanoboa)
    

    // TRASH GOBBLER
    let W98 = data["WATER_LILY"]?.Price || 1;  // Lily Pad
    let W99 = data["RAW_FISH"]?.Price || 1;  // Raw Fish
    let W100 = data["CLAY_BALL"]?.Price || 1; // Clay
    let W101 = data["CAN_OF_WORMS"]?.Price || 1; // Can Of Worms
    
    let X98 = 1.5;   // Amount of Lily Pad
    let X99 = 1.5;   // Amount of Raw Fish
    let X100 = 1.5;  // Amount of Clay
    let X101 = 0.2;  // Amount of Can Of Worms
    
    let W102 = (B1*E2*N2*X10*((H2*X98*W98)+(H2*X99*W99)+(H2*X100*W100)+(H2*X101*W101))); // Money per hour (Trash Gobbler)


    ////// Bayou Hotspot //////

    // Blue Ringed Octopus
    let Z30 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z31 = data["RAW_FISH"]?.Price || 1; // Enchanted Raw Fish
    let Z32 = data["ENCHANTED_RAW_SALMON"]?.Price || 1; // Enchanted Raw Salmon
    let Z33 = data["BLUE_RING"]?.Price || 1; // Blue Ring
    let Z34 = data["OCTOPUS_TENDRIL"]?.Price || 1; // Octopus Tendril
    
    let AA30 = 1;      // Amount of Enchanted Lily Pad
    let AA31 = 1;      // Amount of Enchanted Raw Fish
    let AA32 = 1;      // Amount of Enchanted Raw Salmon
    let AA33 = 1;      // Amount of Blue Ring
    let AA34 = 0.002;  // Amount of Octopus Tendril
    
    let Z35 = (B1*E2*N2*AA5*((H2*AA30*Z30)+(H2*AA31*Z31)+(H2*AA32*Z32)+(H2*AA33*Z33)+(H2*AA34*Z34*K2)));       // Money per hour for Blue Ringed Octopus
    

    
    // Frog Man 
    let Z42 = data["HALF_EATEN_MUSHROOM"]?.Price || 1; // Half-Eaten Mushroom
    let Z43 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z44 = data["RAW_FISH:2"]?.Price || 1; // Clownfish
    
    let AA42 = 1;    // Amount of Half-Eaten Mushroom
    let AA43 = 1.5;  // Amount of Lily Pad
    let AA44 = 1.5;  // Amount of Clownfish
    
    let Z45 = (B1*E2*N2*AA6*((H2*AA42*Z42)+(H2*AA43*Z43)+(H2*AA44*Z44)));      // Money per hour for Frog Man
    
    
    // Snapping Turtle
    let Z52 = data["WATER_LILY"]?.Price || 1; // Lily Pad
    let Z53 = data["GOLD_INGOT"]?.Price || 1; // Gold Ingot
    let Z54 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let Z55 = data["ENCHANTED_GOLD"]?.Price || 1; // Enchanted Gold
    let Z56 = data["BROKEN_RADAR"]?.Price || 1; // Broken Radar
    let Z57 = data["EDIBLE_SEAWEED"]?.Price || 1; // Edible Seaweed
    
    let AA52 = 5;      // Amount of Lily Pad
    let AA53 = 5;      // Amount of Gold Ingot
    let AA54 = 5;      // Amount of Raw Fish
    let AA55 = 0.1;    // Amount of Enchanted Gold
    let AA56 = 0.02;   // Amount of Broken Radar
    let AA57 = 0.005;  // Amount of Edible Seaweed
    
    let Z58 = (B1*E2*N2*AA7*((H2*AA52*Z52)+(H2*AA53*Z53)+(H2*AA54*Z54)+(H2*AA55*Z55)+(H2*AA56*Z56*K2)+(H2*AA57*Z57*K2)));       // Money per hour for Snapping Turtle
    
    
    // Wiki Tiki
    let Z65 = data["ENCHANTED_JUNGLE_LOG"]?.Price || 1; // Enchanted Jungle Wood
    let Z66 = data["ENCHANTED_WATER_LILY"]?.Price || 1; // Enchanted Lily Pad
    let Z67 = data["BOBBIN_SCRIPTURES"]?.Price || 1; // Bobbin' Scriptures
    let Z68 = data["TROUBLED_BUBBLE"]?.Price || 1; // Troubled Bubble
    let Z69 = data["TIKI_MASK"]?.Price || 1; // Tiki Mask
    
    let AA65 = 32;      // Amount of Enchanted Jungle Wood
    let AA66 = 8;       // Amount of Enchanted Lily Pad
    let AA67 = 0.025;   // Amount of Bobbin' Scriptures
    let AA68 = 0.005;   // Amount of Troubled Bubble
    let AA69 = 0.0033;  // Amount of Tiki Mask
    
    let Z70 = (B1*E2*N2*AA8*((H2*AA65*Z65)+(H2*AA66*Z66)+(H2*AA67*Z67*K2)+(H2*AA68*Z68*K2)+(H2*AA69*Z69*K2*Q2)));       // Money per hour for Wiki Tiki

    ////// Quarry Fishing //////

    // Mithril Grubber 
    let AC30 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC31 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC32 = 0; // Mithril Powder
    let AC33 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD30 = 12;   // Amount of Mithril
    let AD31 = 3;    // Amount of Raw Fish
    let AD32 = 0;    // Amount of Mithril Powder
    let AD33 = 0.2;  // Amount of Enchanted Mithril
    
    let AC34 = (B1*E2*N2*AD5*((H2*AD30*AC30)+(H2*AD31*AC31)+(H2*AD33*AC33)));     // Money per hour (Mithril Grubber)
    
    
    // Medium Mithril Grubber 
    let AC41 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC42 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC43 = 0; // Mithril Powder
    let AC44 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD41 = 20;   // Amount of Mithril
    let AD42 = 6;    // Amount of Raw Fish
    let AD43 = 0;    // Amount of Mithril Powder
    let AD44 = 0.4;  // Amount of Enchanted Mithril
    
    let AC45 = (B1*E2*N2*AD6*((H2*AD41*AC41)+(H2*AD42*AC42)+(H2*AD44*AC44)));     // Money per hour (Medium Mithril Grubber)
    
    
    // Large Mithril Grubber 
    let AC52 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC53 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC54 = 0; // Mithril Powder
    let AC55 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD52 = 36;   // Amount of Mithril
    let AD53 = 12;   // Amount of Raw Fish
    let AD54 = 0;    // Amount of Mithril Powder
    let AD55 = 0.8;  // Amount of Enchanted Mithril
    
    let AC56 = (B1*E2*N2*AD7*((H2*AD52*AC52)+(H2*AD53*AC53)+(H2*AD55*AC55)));     // Money per hour (Large Mithril Grubber)
    
    
    // Bloated Mithril Grubber 
    let AC63 = data["MITHRIL_ORE"]?.Price || 1; // Mithril
    let AC64 = data["RAW_FISH"]?.Price || 1; // Raw Fish
    let AC65 = 0; // Mithril Powder
    let AC66 = data["ENCHANTED_MITHRIL"]?.Price || 1; // Enchanted Mithril
    
    let AD63 = 72;   // Amount of Mithril
    let AD64 = 18;   // Amount of Raw Fish
    let AD65 = 0;    // Amount of Mithril Powder
    let AD66 = 1.6;  // Amount of Enchanted Mithril
    
    let AC67 = (B1*E2*N2*AD8*((H2*AD63*AC63)+(H2*AD64*AC64)+(H2*AD66*AC66)));     // Money per hour (Bloated Mithril Grubber)
    
    let Money = B32+B42+B52+B62+B73+B86+B100+B114+B127+B140+B157+B178+E32+E44+E58+E70+E82+E92+E102+E117+H34+H46+H58+H70+H85+K39+K55+K63+K83+K94+K102+N32+N42+N53+N64+Q33+Q45+Q55+T33+T43+T54+T64+T74+T84+T94+T112+T131+T145+T158+T169+W36+W50+W64+W77+W91+W102+Z35+Z45+Z58+Z70+AC34+AC45+AC56+AC67;
    
    let ZZ1 = data["MINNOW_BAIT"]?.Price || 1;
    let ZZ2 = data["DARK_BAIT"]?.Price || 1;
    let ZZ3 = data["SPOOKY_BAIT"]?.Price || 1;
    let ZZ4 = data["LIGHT_BAIT"]?.Price || 1;
    let ZZ5 = data["SPIKED_BAIT"]?.Price || 1;
    let ZZ6 = data["FISH_BAIT"]?.Price || 1;
    let ZZ7 = data["CARROT_BAIT"]?.Price || 1;
    let ZZ8 = data["CORRUPTED_BAIT"]?.Price || 1;
    let ZZ9 = data["ICE_BAIT"]?.Price || 1;
    let ZZ10 = data["BLESSED_BAIT"]?.Price || 1;
    let ZZ11 = data["SHARK_BAIT"]?.Price || 1;
    let ZZ12 = data["GLOWY_CHUM_BAIT"]?.Price || 1;
    let ZZ13 = data["HOT_BAIT"]?.Price || 1;
    let ZZ14 = data["WORM_BAIT"]?.Price || 1;
    let ZZ15 = data["WHALE_BAIT"]?.Price || 1;
    let ZZ16 = data["FROZEN_BAIT"]?.Price || 1;
    let ZZ17 = data["GOLDEN_BAIT"]?.Price || 1;
    let ZZ18 = data["TREASURE_BAIT"]?.Price || 1;
    let ZZ19 = data["HOTSPOT_BAIT"]?.Price || 1;

    let BaitCost = B1*T2*ZZ19;

    let moneyCrimsonHotspotFishing = ((Money - BaitCost)/1000000).toFixed(2);

    


    return `${moneyCrimsonHotspotFishing}M`; 
    }
    
    function updateCrimsonHotspotFishing(data) {
    const CrimsonHotspotFishingMoney = calculateCrimsonHotspotFishing(data); 
    document.getElementById('CrimsonHotspotFishing').innerHTML = CrimsonHotspotFishingMoney;
    localStorage.setItem('cached-CrimsonHotspotFishing', CrimsonHotspotFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateWaterTreasureFishing(data) {

    let B50 = 1200;
    let B51 = 10;
    let B54 = (89*(B51/100))/100; //Good Loot
    let B55 = (10*(B51/100))/100; //Great Loot
    let B56 = (1*(B51/100)/100); //Outstanding Loot
    let B53 = 1-B54-B55-B56; //Normal Loot

    let Blessing = 6;
    let BlessedBait = 1.5;
    let RarityPet = 0.1;
    let HermitCrabLevel = 100;
    let BlessingMultiplier = (1 + Number(Blessing)*0.02);
    let BlessedBaitMultiplier = Number(BlessedBait);
    let RarityPetMultiplier = Number(RarityPet);
    let HermitCrabLevelMultiplier = Number(HermitCrabLevel);
    let PetEffect = 1 + ((RarityPetMultiplier*HermitCrabLevelMultiplier)/100);
    let CatchMultiplier = (BlessingMultiplier*BlessedBaitMultiplier*PetEffect);
    B55 //Great
    = B55*CatchMultiplier;
    B56 //Outstanding
    = B56*CatchMultiplier;
    let Over100Chance = ((B54+B53+B55+B56)-1);
    B54 //Good
    = B54 - Over100Chance;

    let D5 = 220;   //Enchanted Raw Fish (32)
    let D6 = 150; //Enchanted Raw Salmon (32)
    let D7 = 100; //Enchanted Clownfish (24)
    let D8 = 100; //Enchanted Pufferfish (24)
    let D9 = 100; //Enchanted Clay (64)
    let D10 = 100; //Enchanted Sponge (8)
    let D11 = 25; //Enchanted Wet Sponge
    let D12 = 50; //Titanic Experience Bottle
    let D13 = 200; //EPIC Squid Pet
    let D14 = 100; //LEGENDARY Squid Pet
    let D15 = 20; //Water Orb
    let D16 = 100; //Coins (500,000 - 1,000,000)
    let D17 = 220; //Enchanted Raw Fish (4)
    let D18 = 150; //Enchanted Raw Salmon (4)
    let D19 = 100; //Enchanted Clownfish (3)
    let D20 = 100; //Enchanted Pufferfish (3)
    let D21 = 100; //Enchanted Clay (8)
    let D22 = 100; //Enchanted Sponge
    let D23 = 100; //Titanic Experience Bottle
    let D24 = 75; //COMMON Squid Pet
    let D25 = 50; //UNCOMMON Squid Pet
    let D26 = 25; //RARE Squid Pet
    let D27 = 100; //Coins (100,000 - 250,000)
    let D28 = 220; //Raw Fish (16)
    let D29 = 250; //Raw Salmon (16)
    let D30 = 100; // Clownfish (12)
    let D31 = 100; //Clay (32)
    let D32 = 100; //Sponge (16)
    let D33 = 80; //Pufferfish (12)
    let D34 = 50; //Prismarine Shard (8)
    let D35 = 50; //Prismarine Crystals (8)
    let D36 = 50; //Grand Experience Bottle (4)
    let D37 = 100; //Coins (25,000 - 50,000)
    let D38 = 220; //Raw Fish 
    let D39 = 150; // Raw Salmon
    let D40 = 100; //Clownfish
    let D41 = 80; //Pufferfish

    let B43 = D38+D39+D40+D41; //Normal Total Weight
    let B44 = D28+D29+D30+D31+D32+D33+D34+D35+D36+D37; //GOOD CATCH Total Weight
    let B45 = D17+D18+D19+D20+D21+D22+D23+D24+D25+D26+D27; //GREAT CATCH Total Weight
    let B46 = D5+D6+D7+D8+D9+D10+D11+D12+D13+D14+D15+D16; //OUTSTANDING CATCH Total Weight


    let E5 =  D5/B46;
    let E6 =  D6/B46;
    let E7 =  D7/B46;
    let E8 =  D8/B46;
    let E9 =  D9/B46;
    let E10 = D10/B46;
    let E11 = D11/B46;
    let E12 = D12/B46;
    let E13 = D13/B46;
    let E14 = D14/B46;
    let E15 = D15/B46;
    let E16 = D16/B46;

    let E17 = D17/B45;
    let E18 = D18/B45;
    let E19 = D19/B45;
    let E20 = D20/B45;
    let E21 = D21/B45;
    let E22 = D22/B45;
    let E23 = D23/B45;
    let E24 = D24/B45;
    let E25 = D25/B45;
    let E26 = D26/B45;
    let E27 = D27/B45;

    let E28 = D28/B44;
    let E29 = D29/B44;
    let E30 = D30/B44;
    let E31 = D31/B44;
    let E32 = D32/B44;
    let E33 = D33/B44;
    let E34 = D34/B44;
    let E35 = D35/B44;
    let E36 = D36/B44;
    let E37 = D37/B44;

    let E38 = D38/B43;
    let E39 = D39/B43;
    let E40 = D40/B43;
    let E41 = D41/B43;

    //Prices

    let B5 = (data["ENCHANTED_RAW_FISH"]?.Price || 1)*32;
    let B6 = (data["ENCHANTED_RAW_SALMON"]?.Price || 1)*32;
    let B7 = (data["ENCHANTED_CLOWNFISH"]?.Price || 1)*24;
    let B8 = (data["ENCHANTED_PUFFERFISH"]?.Price || 1)*24;
    let B9 = (data["ENCHANTED_CLAY_BALL"]?.Price || 1)*64;
    let B10 = (data["ENCHANTED_SPONGE"]?.Price || 1)*8;
    let B11 = (data["ENCHANTED_WET_SPONGE"]?.Price || 1);
    let B12 = (data["TITANIC_EXP_BOTTLE"]?.Price || 1);
    let B13 = (data["SQUID;3"]?.Price || 1);
    let B14 = (data["SQUID;4"]?.Price || 1);
    let B15 = (data["WATER_ORB"]?.Price || 1);
    let B16 = 750000;
    let B17 = (data["ENCHANTED_RAW_FISH"]?.Price || 1)*4;
    let B18 = (data["ENCHANTED_RAW_SALMON"]?.Price || 1)*4;
    let B19 = (data["ENCHANTED_CLOWNFISH"]?.Price || 1)*3;
    let B20 = (data["ENCHANTED_PUFFERFISH"]?.Price || 1)*3;
    let B21 = (data["ENCHANTED_CLAY_BALL"]?.Price || 1)*8;
    let B22 = (data["ENCHANTED_SPONGE"]?.Price || 1);
    let B23 = (data["TITANIC_EXP_BOTTLE"]?.Price || 1);
    let B24 = (data["SQUID;0"]?.Price || 1);
    let B25 = (data["SQUID;1"]?.Price || 1);
    let B26 = (data["SQUID;2"]?.Price || 1);
    let B27 = 175000;
    let B28 = (data["RAW_FISH"]?.Price || 1)*16;
    let B29 = (data["RAW_FISH:1"]?.Price || 1)*16;
    let B30 = (data["RAW_FISH:2"]?.Price || 1)*12;
    let B31 = (data["CLAY_BALL"]?.Price || 1)*32;
    let B32 = (data["SPONGE"]?.Price || 1)*16;
    let B33 = (data["RAW_FISH:3"]?.Price || 1)*12;
    let B34 = (data["PRISMARINE_SHARD"]?.Price || 1)*8;
    let B35 = (data["PRISMARINE_CRYSTALS"]?.Price || 1)*8;
    let B36 = (data["GRAND_EXP_BOTTLE"]?.Price || 1)*4;
    let B37 = 37500;
    let B38 = (data["RAW_FISH"]?.Price || 1);
    let B39 = (data["RAW_FISH:1"]?.Price || 1);
    let B40 = (data["RAW_FISH:2"]?.Price || 1);
    let B41 = (data["RAW_FISH:3"]?.Price || 1);

    let WaterTreasureFishing = (((B50*B53*E41*B41)+(B50*B53*E40*B40)+(B50*B53*E39*B39)+(B50*B53*E38*B38)+(B50*B54*E37*B37)+(B50*B54*E36*B36)+(B50*B54*E35*B35)+(B50*B54*E34*B34)+(B50*B54*E33*B33)+(B50*B54*E32*B32)+(B50*B54*E31*B31)+(B50*B54*E30*B30)+(B50*B54*E29*B29)+(B50*B54*E28*B28)+(B50*B55*E27*B27)+(B50*B55*E26*B26)+(B50*B55*E25*B25)+(B50*B55*E24*B24)+(B50*B55*E23*B23)+(B50*B55*E22*B22)+(B50*B55*E21*B21)+(B50*B55*E20*B20)+(B50*B55*E19*B19)+(B50*B55*E18*B18)+(B50*B55*E17*B17)+(B50*B56*E16*B16)+(B50*B56*E15*B15)+(B50*B56*E14*B14)+(B50*B56*E13*B13)+(B50*B56*E12*B12)+(B50*B56*E11*B11)+(B50*B56*E10*B10)+(B50*B56*E9*B9)+(B50*B56*E8*B8)+(B50*B56*E7*B7)+(B50*B56*E6*B6)+(B50*B56*E5*B5))/1000000).toFixed(2);









  
    return `${WaterTreasureFishing}M`; 
    }
    
    
    
    function updateWaterTreasureFishing(data) {
    const WaterTreasureFishingMoney = calculateWaterTreasureFishing(data); 
    document.getElementById('WaterTreasureFishing').innerHTML = WaterTreasureFishingMoney;
    localStorage.setItem('cached-WaterTreasureFishing', WaterTreasureFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateFairyTreasureFishing(data) {

    let H54 = 1200;
    let H55 = 10;

    let H60 = (1*(H55/100)/100);
    let H59 = (10*(H55/100))/100;
    let H58 = (89*(H55/100))/100;
    let H57 = 1-H58-H59-H60;

    let Blessing = 6;
    let BlessedBait = 1.5;
    let RarityPet = 0.1;
    let HermitCrabLevel = 100;
    let BlessingMultiplier = (1 + Number(Blessing)*0.02);
    let BlessedBaitMultiplier = Number(BlessedBait);
    let RarityPetMultiplier = Number(RarityPet);
    let HermitCrabLevelMultiplier = Number(HermitCrabLevel);
    let PetEffect = 1 + ((RarityPetMultiplier*HermitCrabLevelMultiplier)/100);
    let CatchMultiplier = (BlessingMultiplier*BlessedBaitMultiplier*PetEffect);
    H59 //Great
    = H59*CatchMultiplier;
    H60 //Outstanding
    = H60*CatchMultiplier;
    let Over100Chance = ((H57+H60+H59+H58)-1);
    H58 //Good
    = H58 - Over100Chance;

    let J5 = 220;
    let J6 = 150;
    let J7 = 100;
    let J8 = 100;
    let J9 = 100;
    let J10 = 100;
    let J11 = 25;
    let J12 = 50;
    let J13 = 200;
    let J14 = 100;
    let J15 = 20;
    let J16 = 100;
    let J17 = 220;
    let J18 = 150;
    let J19 = 100;
    let J20 = 100;
    let J21 = 100;
    let J22 = 100;
    let J23 = 100;
    let J24 = 75;
    let J25 = 50;
    let J26 = 25;
    let J27 = 100;
    let J28 = 220;
    let J29 = 250;
    let J30 = 100;
    let J31 = 100;
    let J32 = 100;
    let J33 = 80;
    let J34 = 50;
    let J35 = 50;
    let J36 = 50;
    let J37 = 100;
    let J38 = 150;
    let J39 = 150;
    let J40 = 150;
    let J41 = 150;
    let J42 = 220;
    let J43 = 150;
    let J44 = 100;
    let J45 = 80;

    let H47 = J42+J43+J44+J45; //Normal Total Weight
    let H48 = J32+J33+J34+J35+J36+J37+J38+J39+J40+J41+J31+J30+J29+J28; //GOOD CATCH Total Weight
    let H49 = J21+J22+J23+J24+J25+J26+J27+J20+J19+J18+J17; //GREAT CATCH Total Weight
    let H50 = J9+J10+J11+J12+J13+J14+J15+J16+J8+J7+J6+J5; //OUTSTANDING CATCH Total Weight

    let K5 = J5/H50;
    let K6 = J6/H50;
    let K7 = J7/H50;
    let K8 = J8/H50;
    let K9 = J9/H50;
    let K10 = J10/H50;
    let K11 = J11/H50;
    let K12 = J12/H50;
    let K13 = J13/H50;
    let K14 = J14/H50;
    let K15 = J15/H50;
    let K16 = J16/H50;
    let K17 = J17/H49;
    let K18 = J18/H49;
    let K19 = J19/H49;
    let K20 = J20/H49;
    let K21 = J21/H49;
    let K22 = J22/H49;
    let K23 = J23/H49;
    let K24 = J24/H49;
    let K25 = J25/H49;
    let K26 = J26/H49;
    let K27 = J27/H49;
    let K28 = J28/H48;
    let K29 = J29/H48;
    let K30 = J30/H48;
    let K31 = J31/H48;
    let K32 = J32/H48;
    let K33 = J33/H48;
    let K34 = J34/H48;
    let K35 = J35/H48;
    let K36 = J36/H48;
    let K37 = J37/H48;
    let K38 = J38/H48;
    let K39 = J39/H48;
    let K40 = J40/H48;
    let K41 = J41/H48;
    let K42 = J42/H47;
    let K43 = J43/H47;
    let K44 = J44/H47;
    let K45 = J45/H47;

    
    
    
    

    let H5 = (data["ENCHANTED_RAW_FISH"]?.Price || 1)*32;
    let H6 = (data["ENCHANTED_RAW_SALMON"]?.Price || 1)*32;
    let H7 = (data["ENCHANTED_CLOWNFISH"]?.Price || 1)*24;
    let H8 = (data["ENCHANTED_PUFFERFISH"]?.Price || 1)*24;
    let H9 = (data["ENCHANTED_CLAY_BALL"]?.Price || 1)*64;
    let H10 = (data["ENCHANTED_SPONGE"]?.Price || 1)*8;
    let H11 = (data["ENCHANTED_WET_SPONGE"]?.Price || 1);
    let H12 = (data["TITANIC_EXP_BOTTLE"]?.Price || 1);
    let H13 = (data["SQUID;3"]?.Price || 1);
    let H14 = (data["SQUID;4"]?.Price || 1);
    let H15 = (data["WATER_ORB"]?.Price || 1);
    let H16 = 750000;
    let H17 = (data["ENCHANTED_RAW_FISH"]?.Price || 1)*4;
    let H18 = (data["ENCHANTED_RAW_SALMON"]?.Price || 1)*4;
    let H19 = (data["ENCHANTED_CLOWNFISH"]?.Price || 1)*3;
    let H20 = (data["ENCHANTED_PUFFERFISH"]?.Price || 1)*3;
    let H21 = (data["ENCHANTED_CLAY_BALL"]?.Price || 1)*8;
    let H22 = (data["ENCHANTED_SPONGE"]?.Price || 1);
    let H23 = (data["TITANIC_EXP_BOTTLE"]?.Price || 1);
    let H24 = (data["SQUID;0"]?.Price || 1);
    let H25 = (data["SQUID;1"]?.Price || 1);
    let H26 = (data["SQUID;2"]?.Price || 1);
    let H27 = 175000;
    let H28 = (data["RAW_FISH"]?.Price || 1)*16;
    let H29 = (data["RAW_FISH:1"]?.Price || 1)*16;
    let H30 = (data["RAW_FISH:2"]?.Price || 1)*12;
    let H31 = (data["CLAY_BALL"]?.Price || 1)*32;
    let H32 = (data["SPONGE"]?.Price || 1)*16;
    let H33 = (data["RAW_FISH:3"]?.Price || 1)*12;
    let H34 = (data["PRISMARINE_SHARD"]?.Price || 1)*8;
    let H35 = (data["PRISMARINE_CRYSTALS"]?.Price || 1)*8;
    let H36 = (data["GRAND_EXP_BOTTLE"]?.Price || 1)*4;
    let H37 = 37500;
    let H38 = (data["FAIRY_HELMET"]?.Price || 1);
    let H39 = (data["FAIRY_CHESTPLATE"]?.Price || 1);
    let H40 = (data["FAIRY_LEGGINGS"]?.Price || 1);
    let H41 = (data["FAIRY_BOOTS"]?.Price || 1);
    let H42 = (data["RAW_FISH"]?.Price || 1);
    let H43 = (data["RAW_FISH:1"]?.Price || 1);
    let H44 = (data["RAW_FISH:2"]?.Price || 1);
    let H45 = (data["RAW_FISH:3"]?.Price || 1);
    

    let FairyTreasureFishing = (((H54*H57*K45*H45)+(H54*H57*K44*H44)+(H54*H57*K43*H43)+(H54*H57*K42*H42)+(H54*H58*K41*H41)+(H54*H58*K40*H40)+(H54*H58*K39*H39)+(H54*H58*K38*H38)+(H54*H58*K37*H37)+(H54*H58*K36*H36)+(H54*H58*K35*H35)+(H54*H58*K34*H34)+(H54*H58*K33*H33)+(H54*H58*K32*H32)+(H54*H58*K31*H31)+(H54*H58*K30*H30)+(H54*H58*K29*H29)+(H54*H58*K28*H28)+(H54*H59*K27*H27)+(H54*H59*K26*H26)+(H54*H59*K25*H25)+(H54*H59*K24*H24)+(H54*H59*K23*H23)+(H54*H59*K22*H22)+(H54*H59*K21*H21)+(H54*H59*K20*H20)+(H54*H59*K19*H19)+(H54*H59*K18*H18)+(H54*H59*K17*H17)+(H54*H60*K16*H16)+(H54*H60*K15*H15)+(H54*H60*K14*H14)+(H54*H60*K13*H13)+(H54*H60*K12*H12)+(H54*H60*K11*H11)+(H54*H60*K10*H10)+(H54*H60*K9*H9)+(H54*H60*K8*H8)+(H54*H60*K7*H7)+(H54*H60*K6*H6)+(H54*H60*K5*H5))/1000000).toFixed(2)
  
    return `${FairyTreasureFishing}M`; 
    }
    
    
    
    function updateFairyTreasureFishing(data) {
    const FairyTreasureFishingMoney = calculateFairyTreasureFishing(data); 
    document.getElementById('FairyTreasureFishing').innerHTML = FairyTreasureFishingMoney;
    localStorage.setItem('cached-FairyTreasureFishing', FairyTreasureFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateWinterTreasureFishing(data) {

    let N47 = 1200; //Catches / hour
    let N48 = 10; //

    let N51 = (89*(N48/100))/100;
    let N52 = (10*(N48/100))/100;
    let N53 = (1*(N48/100)/100);
    let N50 = 1-N51-N52-N53;

    let Blessing = 6;
    let BlessedBait = 1.5;
    let RarityPet = 0.1;
    let HermitCrabLevel = 100;
    let BlessingMultiplier = (1 + Number(Blessing)*0.02);
    let BlessedBaitMultiplier = Number(BlessedBait);
    let RarityPetMultiplier = Number(RarityPet);
    let HermitCrabLevelMultiplier = Number(HermitCrabLevel);
    let PetEffect = 1 + ((RarityPetMultiplier*HermitCrabLevelMultiplier)/100);
    let CatchMultiplier = (BlessingMultiplier*BlessedBaitMultiplier*PetEffect);
    N52 //Great
    = N52*CatchMultiplier;
    N53 //Outstanding
    = N53*CatchMultiplier;
    let Over100Chance = ((N51+N50+N52+N53)-1);
    N51 //Good
    = N51 - Over100Chance;

    let P5 = 40;
    let P6 = 40;
    let P7 = 10;
    let P8 = 20;
    let P9 = 10;
    let P10 = 10;
    let P11 = 10;
    let P12 = 10;
    let P13 = 2;
    let P14 = 40;
    let P15 = 40;
    let P16 = 10;
    let P17 = 10;
    let P18 = 10;
    let P19 = 10;
    let P20 = 10;
    let P21 = 5;
    let P22 = 20;
    let P23 = 40;
    let P24 = 20;
    let P25 = 20;
    let P26 = 10;
    let P27 = 5;
    let P28 = 5;
    let P29 = 5;
    let P30 = 5;
    let P31 = 20;
    let P32 = 40;
    let P33 = 20;
    let P34 = 20;
    let P35 = 10;
    let P36 = 5;
    let P37 = 5;
    let P38 = 5;

    let N40 = P38+P37+P36+P35+P34+P33+P32;
    let N41 = P31+P30+P29+P28+P27+P26+P25+P24+P23;
    let N42 = P22+P21+P20+P19+P18+P17+P16+P15+P14;
    let N43 = P13+P12+P11+P10+P9+P8+P7+P6+P5;

    let Q5 = P5/N43;
    let Q6 = P6/N43;
    let Q7 = P7/N43;
    let Q8 = P8/N43;
    let Q9 = P9/N43;
    let Q10 = P10/N43;
    let Q11 = P11/N43;
    let Q12 = P12/N43;
    let Q13 = P13/N43;
    let Q14 = P14/N42;
    let Q15 = P15/N42;
    let Q16 = P16/N42;
    let Q17 = P17/N42;
    let Q18 = P18/N42;
    let Q19 = P19/N42;
    let Q20 = P20/N42;
    let Q21 = P21/N42;
    let Q22 = P22/N42;
    let Q23 = P23/N41;
    let Q24 = P24/N41;
    let Q25 = P25/N41;
    let Q26 = P26/N41;
    let Q27 = P27/N41;
    let Q28 = P28/N41;
    let Q29 = P29/N41;
    let Q30 = P30/N41;
    let Q31 = P31/N41;
    let Q32 = P32/N40;
    let Q33 = P33/N40;
    let Q34 = P34/N40;
    let Q35 = P35/N40;
    let Q36 = P36/N40;
    let Q37 = P37/N40;
    let Q38 = P38/N40;

    let N5 = (data["ENCHANTED_PACKED_ICE"]?.Price || 1)*4;
    let N6 = (data["ENCHANTED_SNOW_BLOCK"]?.Price || 1)*64;
    let N7 = (data["BLUE_ICE_HUNK"]?.Price || 1)*16;
    let N8 = 750000;
    let N9 = (data["ESSENCE_ICE"]?.Price || 1)*12.5;
    let N10 = (data["WHITE_GIFT"]?.Price || 1)*32;
    let N11 = (data["GREEN_GIFT"]?.Price || 1)*16;
    let N12 = (data["RED_GIFT"]?.Price || 1)*4;
    let N13 = (data["WINTER_WATER_ORB"]?.Price || 1);
    let N14 = (data["ENCHANTED_ICE"]?.Price || 1)*8;
    let N15 = (data["ENCHANTED_SNOW_BLOCK"]?.Price || 1)*8;
    let N16 = (data["ESSENCE_ICE"]?.Price || 1)*25;
    let N17 = (data["BLUE_ICE_HUNK"]?.Price || 1)*4;
    let N18 = (data["WHITE_GIFT"]?.Price || 1)*8;
    let N19 = (data["GREEN_GIFT"]?.Price || 1)*4;
    let N20 = (data["RED_GIFT"]?.Price || 1);
    let N21 = (data["ENCHANTED_PACKED_ICE"]?.Price || 1);
    let N22 = 175000;
    let N23 = (data["PACKED_ICE"]?.Price || 1)*24;
    let N24 = (data["ENCHANTED_ICE"]?.Price || 1)*4;
    let N25 = (data["ENCHANTED_SNOW_BLOCK"]?.Price || 1);
    let N26 = (data["ESSENCE_ICE"]?.Price || 1)*5;
    let N27 = (data["WHITE_GIFT"]?.Price || 1)*2;
    let N28 = (data["ICE_HUNK"]?.Price || 1)*8;
    let N29 = (data["BLUE_ICE_HUNK"]?.Price || 1);
    let N30 = (data["GREEN_GIFT"]?.Price || 1);
    let N31 = 37500;
    let N32 = (data["ICE"]?.Price || 1)*32;
    let N33 = (data["PACKED_ICE"]?.Price || 1)*8;
    let N34 = (data["SNOW_BLOCK"]?.Price || 1)*16;
    let N35 = (data["ESSENCE_ICE"]?.Price || 1);
    let N36 = (data["ICE_HUNK"]?.Price || 1);
    let N37 = (data["WHITE_GIFT"]?.Price || 1);
    let N38 = (data["RAW_FISH:1"]?.Price || 1);

    let WinterTreasureFishing = (((N47*N50*Q38*N38)+(N47*N50*Q37*N37)+(N47*N50*Q36*N36)+(N47*N50*Q35*N35)+(N47*N50*Q34*N34)+(N47*N50*Q33*N33)+(N47*N50*Q32*N32)+(N47*N51*Q31*N31)+(N47*N51*Q30*N30)+(N47*N51*Q29*N29)+(N47*N51*Q28*N28)+(N47*N51*Q27*N27)+(N47*N51*Q26*N26)+(N47*N51*Q25*N25)+(N47*N51*Q24*N24)+(N47*N51*Q23*N23)+(N47*N52*Q22*N22)+(N47*N52*Q21*N21)+(N47*N52*Q20*N20)+(N47*N52*Q19*N19)+(N47*N52*Q18*N18)+(N47*N52*Q17*N17)+(N47*N52*Q16*N16)+(N47*N52*Q15*N15)+(N47*N52*Q14*N14)+(N47*N53*Q13*N13)+(N47*N53*Q12*N12)+(N47*N53*Q11*N11)+(N47*N53*Q10*N10)+(N47*N53*Q9*N9)+(N47*N53*Q8*N8)+(N47*N53*Q7*N7)+(N47*N53*Q6*N6)+(N47*N53*Q5*N5))/1000000).toFixed(2)


    return `${WinterTreasureFishing}M`; 
    }
    
    
    
    function updateWinterTreasureFishing(data) {
    const WinterTreasureFishingMoney = calculateWinterTreasureFishing(data); 
    document.getElementById('WinterTreasureFishing').innerHTML = WinterTreasureFishingMoney;
    localStorage.setItem('cached-WinterTreasureFishing', WinterTreasureFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateLavaTreasureFishing(data) {

    let T22 = 1200; //Catches / hour
    let T23 = 10; //Treasure Chance

    let V5 = 15;
    let V6 = 5;
    let V7 = 15;
    let V8 = 15;
    let V9 = 5;
    let V10 = 20;
    let V11 = 20;
    let V12 = 20;
    let V13 = 5;

    let T15 = V12+V13;
    let T16 = V11+V10+V9+V8;
    let T17 = V7+V6;
    let T18 = V5;

    let W5 = V5/T18;
    let W6 = V6/T17;
    let W7 = V7/T17;
    let W8 = V8/T16;
    let W9 = V9/T16;
    let W10 = V10/T16;
    let W11 = V11/T16;
    let W12 = V12/T15;
    let W13 = V13/T15;

    let T5 = 750000;
    let T6 = (data["TITANIC_EXP_BOTTLE"]?.Price || 1);
    let T7 = 375000;
    let T8 = (data["GRAND_EXP_BOTTLE"]?.Price || 1)*3;
    let T9 = (data["ENCHANTED_COAL"]?.Price || 1)*12;
    let T10 = (data["ENCHANTED_NETHER_STALK"]?.Price || 1)*12;
    let T11 = 75000;
    let T12 = (data["NETHERRACK"]?.Price || 1)*24;
    let T13 = (data["COAL"]?.Price || 1)*24;
    
    let T26 = (89*(T23/100))/100;
    let T27 = (10*(T23/100))/100;
    let T28 = (1*(T23/100)/100);
    let T25 = 1-T26-T27-T28;

    let Blessing = 6;
    let BlessedBait = 1.5;
    let RarityPet = 0.1;
    let HermitCrabLevel = 100;
    let BlessingMultiplier = (1 + Number(Blessing)*0.02);
    let BlessedBaitMultiplier = Number(BlessedBait);
    let RarityPetMultiplier = Number(RarityPet);
    let HermitCrabLevelMultiplier = Number(HermitCrabLevel);
    let PetEffect = 1 + ((RarityPetMultiplier*HermitCrabLevelMultiplier)/100);
    let CatchMultiplier = (BlessingMultiplier*BlessedBaitMultiplier*PetEffect);
    T27 //Great
    = T27*CatchMultiplier;
    T28 //Outstanding
    = T28*CatchMultiplier;
    let Over100Chance = ((T25+T26+T27+T28)-1);
    T26 //Good
    = T26 - Over100Chance;

    let LavaTreasureFishing = (((T22*T25*W13*T13)+(T22*T25*W12*T12)+(T22*T26*W11*T11)+(T22*T26*W10*T10)+(T22*T26*W9*T9)+(T22*T26*W8*T8)+(T22*T27*W7*T7)+(T22*T27*W6*T6)+(T22*T28*W5*T5))/1000000).toFixed(2);

    return `${LavaTreasureFishing}M`; 
    }
    
    
    
    function updateLavaTreasureFishing(data) {
    const LavaTreasureFishingMoney = calculateLavaTreasureFishing(data); 
    document.getElementById('LavaTreasureFishing').innerHTML = LavaTreasureFishingMoney;
    localStorage.setItem('cached-LavaTreasureFishing', LavaTreasureFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateJunkTreasureFishing(data) {

    let H85 = 1200;
    let H86 = 20;

    let J69 = 25;
    let J70 = 5;
    let J71 = 20;
    let J72 = 10;
    let J73 = 220;
    let J74 = 150;
    let J75 = 100;
    let J76 = 80;

    let H78 = J73+J74+J75+J76;
    let H79 = J72;
    let H80 = J71;
    let H81 = J69+J70;

    let K69 = J69/H81;
    let K70 = J70/H81;
    let K71 = J71/H80;
    let K72 = J72/H79;
    let K73 = J73/H78;
    let K74 = J74/H78;
    let K75 = J75/H78;
    let K76 = J76/H78;


    let H69 = (data["OLD_LEATHER_BOOT"]?.Price || 1);
    let H70 = (data["MOBY_DUCK"]?.Price || 1);
    let H71 = (data["BUSTED_BELT_BUCKLE"]?.Price || 1);
    let H72 = (data["RUSTY_COIN"]?.Price || 1);
    let H73 = (data["RAW_FISH"]?.Price || 1);
    let H74 = (data["RAW_FISH:1"]?.Price || 1);
    let H75 = (data["RAW_FISH:2"]?.Price || 1);
    let H76 = (data["RAW_FISH:3"]?.Price || 1);

    let H89 = (89*(H86/100))/100;
    let H90 = (10*(H86/100))/100;
    let H91 = (1*(H86/100)/100);
    let H88 = 1-H89-H90-H91;

    let Blessing = 6;
    let BlessedBait = 1.5;
    let RarityPet = 0.1;
    let HermitCrabLevel = 100;
    let BlessingMultiplier = (1 + Number(Blessing)*0.02);
    let BlessedBaitMultiplier = Number(BlessedBait);
    let RarityPetMultiplier = Number(RarityPet);
    let HermitCrabLevelMultiplier = Number(HermitCrabLevel);
    let PetEffect = 1 + ((RarityPetMultiplier*HermitCrabLevelMultiplier)/100);
    let CatchMultiplier = (BlessingMultiplier*BlessedBaitMultiplier*PetEffect);
    H90 //Great
    = H90*CatchMultiplier;
    H91 //Outstanding
    = H91*CatchMultiplier;
    let Over100Chance = ((H88+H89+H90+H91)-1);
    H89 //Good
    = H89 - Over100Chance;

    let JunkTreasureFishing = (((H85*H88*K76*H76)+(H85*H88*K75*H75)+(H85*H88*K74*H74)+(H85*H88*K73*H73)+(H85*H89*K72*H72)+(H85*H90*K71*H71)+(H85*H91*K70*H70)+(H85*H91*K69*H69))/1000000).toFixed(2);

    return `${JunkTreasureFishing}M`; 
    }
    
    
    
    function updateJunkTreasureFishing(data) {
    const JunkTreasureFishingMoney = calculateJunkTreasureFishing(data); 
    document.getElementById('JunkTreasureFishing').innerHTML = JunkTreasureFishingMoney;
    localStorage.setItem('cached-JunkTreasureFishing', JunkTreasureFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateQuarryTreasureFishing(data) {

    let B50 = 1200; //Catches / hour
    let B51 = 10; // Treasure Chance
    let B54 = (89*(B51/100))/100; //Good Loot
    let B55 = (10*(B51/100))/100; //Great Loot
    let B56 = (1*(B51/100)/100); //Outstanding Loot
    let B53 = 1-B54-B55-B56; //Normal Loot

    let Blessing = 6;
    let BlessedBait = 1.5;
    let RarityPet = 0.1;
    let HermitCrabLevel = 100;
    let BlessingMultiplier = (1 + Number(Blessing)*0.02);
    let BlessedBaitMultiplier = Number(BlessedBait);
    let RarityPetMultiplier = Number(RarityPet);
    let HermitCrabLevelMultiplier = Number(HermitCrabLevel);
    let PetEffect = 1 + ((RarityPetMultiplier*HermitCrabLevelMultiplier)/100);
    let CatchMultiplier = (BlessingMultiplier*BlessedBaitMultiplier*PetEffect);
    B55 //Great
    = B55*CatchMultiplier;
    B56 //Outstanding
    = B56*CatchMultiplier;
    let Over100Chance = ((B53+B54+B55+B56)-1);
    B54 //Good
    = B54 - Over100Chance;

    //Added Item ->
    //Speckled Tea Cup
    let D42 = 120; // weight

    let D5 = 220;   //Enchanted Raw Fish (32)
    let D6 = 150; //Enchanted Raw Salmon (32)
    let D7 = 100; //Enchanted Clownfish (24)
    let D8 = 100; //Enchanted Pufferfish (24)
    let D9 = 100; //Enchanted Clay (64)
    let D10 = 100; //Enchanted Sponge (8)
    let D11 = 25; //Enchanted Wet Sponge
    let D12 = 50; //Titanic Experience Bottle
    let D13 = 200; //EPIC Squid Pet
    let D14 = 100; //LEGENDARY Squid Pet
    let D15 = 20; //Water Orb
    let D16 = 100; //Coins (500,000 - 1,000,000)
    let D17 = 220; //Enchanted Raw Fish (4)
    let D18 = 150; //Enchanted Raw Salmon (4)
    let D19 = 100; //Enchanted Clownfish (3)
    let D20 = 100; //Enchanted Pufferfish (3)
    let D21 = 100; //Enchanted Clay (8)
    let D22 = 100; //Enchanted Sponge
    let D23 = 100; //Titanic Experience Bottle
    let D24 = 75; //COMMON Squid Pet
    let D25 = 50; //UNCOMMON Squid Pet
    let D26 = 25; //RARE Squid Pet
    let D27 = 100; //Coins (100,000 - 250,000)
    let D28 = 220; //Raw Fish (16)
    let D29 = 250; //Raw Salmon (16)
    let D30 = 100; // Clownfish (12)
    let D31 = 100; //Clay (32)
    let D32 = 100; //Sponge (16)
    let D33 = 80; //Pufferfish (12)
    let D34 = 50; //Prismarine Shard (8)
    let D35 = 50; //Prismarine Crystals (8)
    let D36 = 50; //Grand Experience Bottle (4)
    let D37 = 100; //Coins (25,000 - 50,000)
    let D38 = 220; //Raw Fish 
    let D39 = 150; // Raw Salmon
    let D40 = 100; //Clownfish
    let D41 = 80; //Pufferfish

    let B43 = D38+D39+D40+D41; //Normal Total Weight
    let B44 = D28+D29+D30+D31+D32+D33+D34+D35+D36+D37; //GOOD CATCH Total Weight
    let B45 = D17+D18+D19+D20+D21+D22+D23+D24+D25+D26+D27+D42; //GREAT CATCH Total Weight
    let B46 = D5+D6+D7+D8+D9+D10+D11+D12+D13+D14+D15+D16; //OUTSTANDING CATCH Total Weight

    //Added Item ->
    //Speckled Tea Cup
    let E42 = D42/B45; //chance
    let B42 = 100000; //price

    let E5 =  D5/B46;
    let E6 =  D6/B46;
    let E7 =  D7/B46;
    let E8 =  D8/B46;
    let E9 =  D9/B46;
    let E10 = D10/B46;
    let E11 = D11/B46;
    let E12 = D12/B46;
    let E13 = D13/B46;
    let E14 = D14/B46;
    let E15 = D15/B46;
    let E16 = D16/B46;

    let E17 = D17/B45;
    let E18 = D18/B45;
    let E19 = D19/B45;
    let E20 = D20/B45;
    let E21 = D21/B45;
    let E22 = D22/B45;
    let E23 = D23/B45;
    let E24 = D24/B45;
    let E25 = D25/B45;
    let E26 = D26/B45;
    let E27 = D27/B45;

    let E28 = D28/B44;
    let E29 = D29/B44;
    let E30 = D30/B44;
    let E31 = D31/B44;
    let E32 = D32/B44;
    let E33 = D33/B44;
    let E34 = D34/B44;
    let E35 = D35/B44;
    let E36 = D36/B44;
    let E37 = D37/B44;

    let E38 = D38/B43;
    let E39 = D39/B43;
    let E40 = D40/B43;
    let E41 = D41/B43;

    //Prices

    let B5 = (data["ENCHANTED_RAW_FISH"]?.Price || 1)*32;
    let B6 = (data["ENCHANTED_RAW_SALMON"]?.Price || 1)*32;
    let B7 = (data["ENCHANTED_CLOWNFISH"]?.Price || 1)*24;
    let B8 = (data["ENCHANTED_PUFFERFISH"]?.Price || 1)*24;
    let B9 = (data["ENCHANTED_CLAY_BALL"]?.Price || 1)*64;
    let B10 = (data["ENCHANTED_SPONGE"]?.Price || 1)*8;
    let B11 = (data["ENCHANTED_WET_SPONGE"]?.Price || 1);
    let B12 = (data["TITANIC_EXP_BOTTLE"]?.Price || 1);
    let B13 = (data["SQUID;3"]?.Price || 1);
    let B14 = (data["SQUID;4"]?.Price || 1);
    let B15 = (data["WATER_ORB"]?.Price || 1);
    let B16 = 750000;
    let B17 = (data["ENCHANTED_RAW_FISH"]?.Price || 1)*4;
    let B18 = (data["ENCHANTED_RAW_SALMON"]?.Price || 1)*4;
    let B19 = (data["ENCHANTED_CLOWNFISH"]?.Price || 1)*3;
    let B20 = (data["ENCHANTED_PUFFERFISH"]?.Price || 1)*3;
    let B21 = (data["ENCHANTED_CLAY_BALL"]?.Price || 1)*8;
    let B22 = (data["ENCHANTED_SPONGE"]?.Price || 1);
    let B23 = (data["TITANIC_EXP_BOTTLE"]?.Price || 1);
    let B24 = (data["SQUID;0"]?.Price || 1);
    let B25 = (data["SQUID;1"]?.Price || 1);
    let B26 = (data["SQUID;2"]?.Price || 1);
    let B27 = 175000;
    let B28 = (data["RAW_FISH"]?.Price || 1)*16;
    let B29 = (data["RAW_FISH:1"]?.Price || 1)*16;
    let B30 = (data["RAW_FISH:2"]?.Price || 1)*12;
    let B31 = (data["CLAY_BALL"]?.Price || 1)*32;
    let B32 = (data["SPONGE"]?.Price || 1)*16;
    let B33 = (data["RAW_FISH:3"]?.Price || 1)*12;
    let B34 = (data["PRISMARINE_SHARD"]?.Price || 1)*8;
    let B35 = (data["PRISMARINE_CRYSTALS"]?.Price || 1)*8;
    let B36 = (data["GRAND_EXP_BOTTLE"]?.Price || 1)*4;
    let B37 = 37500;
    let B38 = (data["RAW_FISH"]?.Price || 1);
    let B39 = (data["RAW_FISH:1"]?.Price || 1);
    let B40 = (data["RAW_FISH:2"]?.Price || 1);
    let B41 = (data["RAW_FISH:3"]?.Price || 1);



    let QuarryTreasureFishing = (((B50*B53*E41*B41)+(B50*B53*E40*B40)+(B50*B53*E39*B39)+(B50*B53*E38*B38)+(B50*B54*E37*B37)+(B50*B54*E36*B36)+(B50*B54*E35*B35)+(B50*B54*E34*B34)+(B50*B54*E33*B33)+(B50*B54*E32*B32)+(B50*B54*E31*B31)+(B50*B54*E30*B30)+(B50*B54*E29*B29)+(B50*B54*E28*B28)+(B50*B55*E27*B27)+(B50*B55*E26*B26)+(B50*B55*E25*B25)+(B50*B55*E24*B24)+(B50*B55*E23*B23)+(B50*B55*E22*B22)+(B50*B55*E21*B21)+(B50*B55*E20*B20)+(B50*B55*E19*B19)+(B50*B55*E18*B18)+(B50*B55*E17*B17)+(B50*B56*E16*B16)+(B50*B56*E15*B15)+(B50*B56*E14*B14)+(B50*B56*E13*B13)+(B50*B56*E12*B12)+(B50*B56*E11*B11)+(B50*B56*E10*B10)+(B50*B56*E9*B9)+(B50*B56*E8*B8)+(B50*B56*E7*B7)+(B50*B56*E6*B6)+(B50*B56*E5*B5)+(B50*B55*E42*B42))/1000000).toFixed(2);








    return `${QuarryTreasureFishing}M`; 
    }
    
    
    
    function updateQuarryTreasureFishing(data) {
    const QuarryTreasureFishingMoney = calculateQuarryTreasureFishing(data); 
    document.getElementById('QuarryTreasureFishing').innerHTML = QuarryTreasureFishingMoney;
    localStorage.setItem('cached-QuarryTreasureFishing', QuarryTreasureFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function calculateSealTreasureFishing(data) {

    let B50 = 1200; //Catches / hour
    let B51 = 10; // Treasure Chance
    let B54 = (89*(B51/100))/100; //Good Loot
    let B55 = (10*(B51/100))/100; //Great Loot
    let B56 = (1*(B51/100)/100); //Outstanding Loot
    let B53 = 1-B54-B55-B56; //Normal Loot

    let Blessing = 6;
    let BlessedBait = 1.5;
    let RarityPet = 0.1;
    let HermitCrabLevel = 100;
    let BlessingMultiplier = (1 + Number(Blessing)*0.02);
    let BlessedBaitMultiplier = Number(BlessedBait);
    let RarityPetMultiplier = Number(RarityPet);
    let HermitCrabLevelMultiplier = Number(HermitCrabLevel);
    let PetEffect = 1 + ((RarityPetMultiplier*HermitCrabLevelMultiplier)/100);
    let CatchMultiplier = (BlessingMultiplier*BlessedBaitMultiplier*PetEffect);
    B55 //Great
    = B55*CatchMultiplier;
    B56 //Outstanding
    = B56*CatchMultiplier;
    let Over100Chance = ((B53+B54+B55+B56)-1);
    B54 //Good
    = B54 - Over100Chance;

    //Added Item ->
    //Beach Balls
    let D48 = 20; // weight
    let D49 = 200; // weight

    let D5 = 220;   //Enchanted Raw Fish (32)
    let D6 = 150; //Enchanted Raw Salmon (32)
    let D7 = 100; //Enchanted Clownfish (24)
    let D8 = 100; //Enchanted Pufferfish (24)
    let D9 = 100; //Enchanted Clay (64)
    let D10 = 100; //Enchanted Sponge (8)
    let D11 = 25; //Enchanted Wet Sponge
    let D12 = 50; //Titanic Experience Bottle
    let D13 = 200; //EPIC Squid Pet
    let D14 = 100; //LEGENDARY Squid Pet
    let D15 = 20; //Water Orb
    let D16 = 100; //Coins (500,000 - 1,000,000)
    let D17 = 220; //Enchanted Raw Fish (4)
    let D18 = 150; //Enchanted Raw Salmon (4)
    let D19 = 100; //Enchanted Clownfish (3)
    let D20 = 100; //Enchanted Pufferfish (3)
    let D21 = 100; //Enchanted Clay (8)
    let D22 = 100; //Enchanted Sponge
    let D23 = 100; //Titanic Experience Bottle
    let D24 = 75; //COMMON Squid Pet
    let D25 = 50; //UNCOMMON Squid Pet
    let D26 = 25; //RARE Squid Pet
    let D27 = 100; //Coins (100,000 - 250,000)
    let D28 = 220; //Raw Fish (16)
    let D29 = 250; //Raw Salmon (16)
    let D30 = 100; // Clownfish (12)
    let D31 = 100; //Clay (32)
    let D32 = 100; //Sponge (16)
    let D33 = 80; //Pufferfish (12)
    let D34 = 50; //Prismarine Shard (8)
    let D35 = 50; //Prismarine Crystals (8)
    let D36 = 50; //Grand Experience Bottle (4)
    let D37 = 100; //Coins (25,000 - 50,000)
    let D38 = 220; //Raw Fish 
    let D39 = 150; // Raw Salmon
    let D40 = 100; //Clownfish
    let D41 = 80; //Pufferfish

    let B43 = D38+D39+D40+D41; //Normal Total Weight
    let B44 = D28+D29+D30+D31+D32+D33+D34+D35+D36+D37+D48; //GOOD CATCH Total Weight
    let B45 = D17+D18+D19+D20+D21+D22+D23+D24+D25+D26+D27+D49; //GREAT CATCH Total Weight
    let B46 = D5+D6+D7+D8+D9+D10+D11+D12+D13+D14+D15+D16; //OUTSTANDING CATCH Total Weight

    //Added Item ->
    //Beach Balls
    let E48 = D48/B44; //chance
    let E49 = D49/B45; //chance
    let B48 = data["BOUNCY_BEACH_BALL"]?.Price || 1; //price
    let B49 = data["GIANT_BOUNCY_BEACH_BALL"]?.Price || 1; //price

    let E5 = D5/B46;
    let E6 = D6/B46;
    let E7 = D7/B46;
    let E8 = D8/B46;
    let E9 = D9/B46;
    let E10 = D10/B46;
    let E11 = D11/B46;
    let E12 = D12/B46;
    let E13 = D13/B46;
    let E14 = D14/B46;
    let E15 = D15/B46;
    let E16 = D16/B46;

    let E17 = D17/B45;
    let E18 = D18/B45;
    let E19 = D19/B45;
    let E20 = D20/B45;
    let E21 = D21/B45;
    let E22 = D22/B45;
    let E23 = D23/B45;
    let E24 = D24/B45;
    let E25 = D25/B45;
    let E26 = D26/B45;
    let E27 = D27/B45;

    let E28 = D28/B44;
    let E29 = D29/B44;
    let E30 = D30/B44;
    let E31 = D31/B44;
    let E32 = D32/B44;
    let E33 = D33/B44;
    let E34 = D34/B44;
    let E35 = D35/B44;
    let E36 = D36/B44;
    let E37 = D37/B44;

    let E38 = D38/B43;
    let E39 = D39/B43;
    let E40 = D40/B43;
    let E41 = D41/B43;

    //Prices

    let B5 = (data["ENCHANTED_RAW_FISH"]?.Price || 1)*32;
    let B6 = (data["ENCHANTED_RAW_SALMON"]?.Price || 1)*32;
    let B7 = (data["ENCHANTED_CLOWNFISH"]?.Price || 1)*24;
    let B8 = (data["ENCHANTED_PUFFERFISH"]?.Price || 1)*24;
    let B9 = (data["ENCHANTED_CLAY_BALL"]?.Price || 1)*64;
    let B10 = (data["ENCHANTED_SPONGE"]?.Price || 1)*8;
    let B11 = (data["ENCHANTED_WET_SPONGE"]?.Price || 1);
    let B12 = (data["TITANIC_EXP_BOTTLE"]?.Price || 1);
    let B13 = (data["SQUID;3"]?.Price || 1);
    let B14 = (data["SQUID;4"]?.Price || 1);
    let B15 = (data["WATER_ORB"]?.Price || 1);
    let B16 = 750000;
    let B17 = (data["ENCHANTED_RAW_FISH"]?.Price || 1)*4;
    let B18 = (data["ENCHANTED_RAW_SALMON"]?.Price || 1)*4;
    let B19 = (data["ENCHANTED_CLOWNFISH"]?.Price || 1)*3;
    let B20 = (data["ENCHANTED_PUFFERFISH"]?.Price || 1)*3;
    let B21 = (data["ENCHANTED_CLAY_BALL"]?.Price || 1)*8;
    let B22 = (data["ENCHANTED_SPONGE"]?.Price || 1);
    let B23 = (data["TITANIC_EXP_BOTTLE"]?.Price || 1);
    let B24 = (data["SQUID;0"]?.Price || 1);
    let B25 = (data["SQUID;1"]?.Price || 1);
    let B26 = (data["SQUID;2"]?.Price || 1);
    let B27 = 175000;
    let B28 = (data["RAW_FISH"]?.Price || 1)*16;
    let B29 = (data["RAW_FISH:1"]?.Price || 1)*16;
    let B30 = (data["RAW_FISH:2"]?.Price || 1)*12;
    let B31 = (data["CLAY_BALL"]?.Price || 1)*32;
    let B32 = (data["SPONGE"]?.Price || 1)*16;
    let B33 = (data["RAW_FISH:3"]?.Price || 1)*12;
    let B34 = (data["PRISMARINE_SHARD"]?.Price || 1)*8;
    let B35 = (data["PRISMARINE_CRYSTALS"]?.Price || 1)*8;
    let B36 = (data["GRAND_EXP_BOTTLE"]?.Price || 1)*4;
    let B37 = 37500;
    let B38 = (data["RAW_FISH"]?.Price || 1);
    let B39 = (data["RAW_FISH:1"]?.Price || 1);
    let B40 = (data["RAW_FISH:2"]?.Price || 1);
    let B41 = (data["RAW_FISH:3"]?.Price || 1);



    let SealTreasureFishing = (((B50*B53*E41*B41)+(B50*B53*E40*B40)+(B50*B53*E39*B39)+(B50*B53*E38*B38)+(B50*B54*E37*B37)+(B50*B54*E36*B36)+(B50*B54*E35*B35)+(B50*B54*E34*B34)+(B50*B54*E33*B33)+(B50*B54*E32*B32)+(B50*B54*E31*B31)+(B50*B54*E30*B30)+(B50*B54*E29*B29)+(B50*B54*E28*B28)+(B50*B55*E27*B27)+(B50*B55*E26*B26)+(B50*B55*E25*B25)+(B50*B55*E24*B24)+(B50*B55*E23*B23)+(B50*B55*E22*B22)+(B50*B55*E21*B21)+(B50*B55*E20*B20)+(B50*B55*E19*B19)+(B50*B55*E18*B18)+(B50*B55*E17*B17)+(B50*B56*E16*B16)+(B50*B56*E15*B15)+(B50*B56*E14*B14)+(B50*B56*E13*B13)+(B50*B56*E12*B12)+(B50*B56*E11*B11)+(B50*B56*E10*B10)+(B50*B56*E9*B9)+(B50*B56*E8*B8)+(B50*B56*E7*B7)+(B50*B56*E6*B6)+(B50*B56*E5*B5)+(B50*B55*E49*B49)+(B50*B54*E48*B48))/1000000).toFixed(2);








    return `${SealTreasureFishing}M`; 
    }
    
    
    
    function updateSealTreasureFishing(data) {
    const SealTreasureFishingMoney = calculateSealTreasureFishing(data); 
    document.getElementById('SealTreasureFishing').innerHTML = SealTreasureFishingMoney;
    localStorage.setItem('cached-SealTreasureFishing', SealTreasureFishingMoney); 
    }

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


function safeMin(...prices) {
// Only keep finite (i.e. valid) numbers
const valid = prices.filter(price => Number.isFinite(price));
// If there are any valid numbers, return the minimum; otherwise, return NaN or any default you choose
return valid.length > 0 ? Math.min(...valid) : 0;
}

export {
    updateBlazeWax,
updateSulphurBow,
updateAncientCloakMoney,
updateFireFreezeMoney,
updateSpores,
updateAutomaton,
updateGauntletOfContagion,
updateMooshroomCowKat,
updateMooshroomCow,
updateFillingBuckets,
updateMobysShears,
updateGlowingMushroom,
updateEmptyBuckets,
updateChummingTalisman,
updateGlowingMushMixin,
updateChumRod,
updateLuminousBracelet,
updateZealots,
updateZealotsFinalDestination,
updateTreasureHoarders,
updateFragRunning,
updateGlaciteWalker,
updateF1,
updateF2,
updateF3,
updateF4,
updateF5,
updateF6,
updateF7,
updateF7Kismets,
updateM1,
updateM2,
updateM3,
updateM4,
updateM5,
updateM6,
updateM7,
updateM7Kismets,
updateSludgeMining,
updateVanquishedGlowstoneGauntlet,
updateVanquishedMagmaNecklace,
updateVanquishedGhastCloak,
updateVanquishedBlazeBelt,
updateCinderBat,
updateMithrilMining,
updateBal,
updateScatha,
updateGhost,
updateAshfang,
updateSynthesizerV3,
updateShimmeringLightSlippers,
updateShimmeringLightTrousers,
updateShimmeringLightTunic,
updateShimmeringLightHood,
updateFlare,
updateGold,
updateShareCore,
updateNetherWart,
updateCactus,
updateCarrot,
updateSugarCane,
updateMelon,
updatePumpkin,
updateCocoa,
updateMushrooms,
updatePotato,
updateWheat,
updateObsidian,
updateMiteGel,
updateEndermanPet,
updateEndermanPetWithFinalDestination,
updateReflection,
updateBerberisBunch,
updateFuelInjector,
updateCaducousFeeder,
updateEmptyChumCapBucket,
updateExportableCarrots,
updateBluetoothRing,
updatePolarvoid,
updateWeirderTuba,
updateCoal,
updateLapis,
updateDiamonds,
updateRedstone,
updateIron,
updateEmerald,
updateQuartz,
updateRedSand,
updateMycelium,
updateSand,
updateOak,
updateSpruce,
updateBirch,
updateDarkOak,
updateAcacia,
updateJungle,
updateAmber,
updateTopaz,
updateSapphire,
updateAmethyst,
updateJasper,
updateRuby,
updateJade,
updateOpal,
updateAquamarine,
updateCitrine,
updateOnyx,
updatePeridot,
updateTungsten,
updateUmber,
updateGlacite,
updateGravel,
updatePowderPrecursorCity,
updatePowderJungle,
updatePowderGoblinHoldout,
updatePowderMithrilDeposits,
updatePowderMagmaFields,
updateBladeSoul,
updateMageOutlaw,
updateMagmaBoss,
updateT4InfernoDemonlord,
updateT4Voidglooms,
updateT4Vampire,
updateT5Vampire,
updateT5Revenant,
updateT4Revenant,
updateT4Sven,
updateT4Tarantula,
updateGoblin,
updateDiana,
updateGlacialCave,
updateCorleone,
updateArachne300,
updateArachne500,
updateRainySlime,
updateRat,
updateMineshaft,
updatePest,
updateHighlite,
updateDiscrite,
updateExtremelyRealShuriken,
updateGrandmaKnittingNeedle,
updateBezosBZ,
updateWitherSkeletonBZ,
updateMooshroomCowBZ,
updateMagmaCubeBZ,
updateWitherSpecterBZ,
updateFlaresBZ,
updateFlamingSpiderBZ,
updatePackMagmaCubeBZ,
updateCinderBatBZ,
updateKadaKnightBZ,
updateDivingGhastBZ,
updateBladeSoulBZ,
updateBarbarianDukeXBZ,
updateAshfangBZ,
updateMagmaBossBZ,
updateVanquisher,
updateXYZ,
updateT4VoidgloomsFD,
updateIce,
updatePelts,
updateKuudraT5,
updateKuudraT4,
updateKuudraT3,
updateKuudraT2,
updateKuudraT1,
updateTrophyfishing,
updateMagmaNecklaceCrafting,
updateGhastCloakCrafting,
updateBlazeBeltCrafting,
updateGlowstoneGauntletCrafting,
updateMagmaRodCrafting,
updateImplosionBeltCrafting,
updateNucleus,
updateHellwisp,
updateHellwispBZ,
updateDivingGhast,
updateBlazeBZ,
updateBurningDesert,
updateReaperScythe,
updateCobblestone,
updateNetherrack,
updateEndstone,
updateWaterFishing,
updateOasisFishing,
updateSquidFishing,
updatePiscaryFishing,
updateWaterWormFishing,
updateQuarryFishing,
updateSpookyFishing,
updateWinterFishing,
updateFestivalFishing,
updateBayouFishing,
updateBayouHotspotFishing,
updateFlamingWormFishing,
updateMagmaCoreFishing,
updateCrimsonFishing,
updateCrimsonHotspotFishing,
updateWaterTreasureFishing,
updateFairyTreasureFishing,
updateWinterTreasureFishing,
updateLavaTreasureFishing,
updateJunkTreasureFishing,
updateQuarryTreasureFishing,
updateSealTreasureFishing
}
